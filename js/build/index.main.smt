(set-option :print-success true )
(set-option :produce-models true )
(set-logic ALL )
(define-sort UInt () Int )
(declare-fun UInt_lsh (UInt UInt ) UInt )
(declare-fun UInt_rsh (UInt UInt ) UInt )
(declare-fun UInt_band (UInt UInt ) UInt )
(declare-fun UInt_bior (UInt UInt ) UInt )
(declare-fun UInt_bxor (UInt UInt ) UInt )
(declare-fun UInt_sqrt (UInt ) UInt )
(declare-sort Bytes 0 )
(declare-fun bytes0 () Bytes )
(declare-fun bytes (Int ) Bytes )
(define-fun Bytes_toBytes ((b Bytes ) ) Bytes b )
(declare-fun Bytes_xor (Bytes Bytes ) Bytes )
(declare-fun btoiLast8 (Bytes ) UInt )
(declare-fun bytesAppend (Bytes Bytes ) Bytes )
(declare-sort BytesDyn 0 )
(declare-fun BytesDyn_toBytes (BytesDyn ) Bytes )
(declare-fun bytesDyn (Int ) BytesDyn )
(declare-fun Bytes_toBytesDyn (Bytes ) BytesDyn )
(declare-sort StringDyn 0 )
(declare-fun stringDyn (Int ) StringDyn )
(declare-fun StringDyn_toBytes (StringDyn ) Bytes )
(declare-fun StringDyn_Concat (StringDyn StringDyn ) StringDyn )
(declare-fun UInt_toStringDyn (UInt ) StringDyn )
(declare-sort Digest 0 )
(declare-fun digest (Bytes ) Digest )
(declare-fun Digest_toBytes (Digest ) Bytes )
(declare-fun Digest_xor (Digest Digest ) Digest )
(declare-fun dtoiLast8 (Digest ) UInt )
(declare-sort Null 0 )
(declare-fun null () Null )
(define-fun Null_toBytes ((n Null ) ) Bytes bytes0 )
(declare-fun Bool_toBytes (Bool ) Bytes )
(declare-fun UInt_toBytes (UInt ) Bytes )
(declare-sort Address 0 )
(declare-fun Address_toBytes (Address ) Bytes )
(declare-sort Token 0 )
(declare-fun Token_toBytes (Token ) Bytes )
(declare-sort Contract 0 )
(declare-fun Contract_toBytes (Contract ) Bytes )
(declare-fun Contract_addressEq (Contract Address ) Bool )
(push 1 ) ;; {
  (define-sort T0 () (Array Int Token ) )
  (declare-fun z_T0 () T0 )
  (define-fun T0_cons ((e0 Token ) ) T0 (store z_T0 0 e0 ) )
  (declare-fun T0_toBytes (T0 ) Bytes )
  (declare-datatype T2 ((T2_cons (T2_elem0 UInt ) (T2_elem1 UInt ) (T2_elem2 Bool ) ) ) )
  (declare-fun T2_toBytes (T2 ) Bytes )
  (define-sort T1 () (Array Int T2 ) )
  (declare-fun z_T1 () T1 )
  (define-fun T1_cons ((e0 T2 ) ) T1 (store z_T1 0 e0 ) )
  (declare-fun T1_toBytes (T1 ) Bytes )
  (declare-datatype T3 ((T3_cons ) ) )
  (declare-fun T3_toBytes (T3 ) Bytes )
  (declare-datatype T4 ((T4_cons (T4_elem0 Bool ) ) ) )
  (declare-fun T4_toBytes (T4 ) Bytes )
  (declare-datatype T5 ((T5_cons (T5_elem0 Bool ) (T5_elem1 UInt ) ) ) )
  (declare-fun T5_toBytes (T5 ) Bytes )
  (declare-datatype T6 ((T6_cons (T6_elem0 UInt ) ) ) )
  (declare-fun T6_toBytes (T6 ) Bytes )
  (declare-datatype T7 ((T7_cons (T7_elem0 UInt ) (T7_elem1 Token ) ) ) )
  (declare-fun T7_toBytes (T7 ) Bytes )
  (declare-datatype T8 ((T8_cons (T8_elem0 UInt ) (T8_elem1 T7 ) ) ) )
  (declare-fun T8_toBytes (T8 ) Bytes )
  (declare-datatype T10 ((T10_cons (T10_amount UInt ) (T10_borrower Address ) (T10_offerId UInt ) (T10_rejected Bool ) ) ) )
  (declare-fun T10_toBytes (T10 ) Bytes )
  (declare-datatype T9 ((T9_cons (T9_elem0 T10 ) ) ) )
  (declare-fun T9_toBytes (T9 ) Bytes )
  (declare-datatype T12 ((T12_cons (T12_amount UInt ) (T12_shouldPayWithNetworkToken Bool ) ) ) )
  (declare-fun T12_toBytes (T12 ) Bytes )
  (declare-datatype T11 ((T11_cons (T11_elem0 T12 ) ) ) )
  (declare-fun T11_toBytes (T11 ) Bytes )
  (declare-datatype T14 ((T14_cons (T14_duration_in_blocks UInt ) (T14_principle UInt ) (T14_interest Token ) ) ) )
  (declare-fun T14_toBytes (T14 ) Bytes )
  (declare-datatype T13 ((T13_cons (T13_elem0 T14 ) ) ) )
  (declare-fun T13_toBytes (T13 ) Bytes )
  (declare-datatype T16 ((T16_cons (T16_token Token ) (T16_number_of_tokens_to_deposit UInt ) (T16_paymentAsset Token ) (T16_shouldPayInOnlyNetworkToken Bool ) (T16_prefersNetworkToken Bool ) ) ) )
  (declare-fun T16_toBytes (T16 ) Bytes )
  (declare-datatype T15 ((T15_cons (T15_elem0 T16 ) ) ) )
  (declare-fun T15_toBytes (T15 ) Bytes )
  (declare-datatype T17 ((T17_cons (T17_ADMIN Address ) (T17_comment Bytes ) (T17_configuration T16 ) (T17_loanTerms_info T14 ) ) ) )
  (declare-fun T17_toBytes (T17 ) Bytes )
  (declare-datatype T19 ((T19_None (T19_None_v Null ) ) (T19_Some (T19_Some_v Address ) ) ) )
  (declare-fun T19_toBytes (T19 ) Bytes )
  (define-fun T19_dataTag ((T19_dataTagParam T19 ) ) UInt (match T19_dataTagParam (((T19_None T19_None_pv ) 0 ) ((T19_Some T19_Some_pv ) 1 ) ) ) )
  (define-fun T19_inv ((x T19 ) ) Bool (match x (((T19_None x ) true ) ((T19_Some x ) true ) ) ) )
  (declare-datatype T18 ((T18_cons (T18_acceptedAddress T19 ) (T18_config T16 ) (T18_continue Bool ) (T18_freeze Bool ) (T18_loanTerms T14 ) (T18_loanTermsAccepted Bool ) (T18_offers UInt ) ) ) )
  (declare-fun T18_toBytes (T18 ) Bytes )
  (declare-datatype T20 ((T20_cons (T20_number_of_tokens_to_deposit UInt ) (T20_paymentAsset Token ) (T20_prefersNetworkToken Bool ) (T20_shouldPayInOnlyNetworkToken Bool ) (T20_token Token ) ) ) )
  (declare-fun T20_toBytes (T20 ) Bytes )
  (declare-datatype T21 ((T21_Admin_api_acceptOffer0_126 (T21_Admin_api_acceptOffer0_126_v T9 ) ) (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126_v T6 ) ) (T21_Admin_api_freeze0_126 (T21_Admin_api_freeze0_126_v T4 ) ) (T21_Admin_api_updateConfig0_126 (T21_Admin_api_updateConfig0_126_v T15 ) ) (T21_Admin_api_updateLoanTerms_info0_126 (T21_Admin_api_updateLoanTerms_info0_126_v T13 ) ) (T21_user_acceptLoan0_126 (T21_user_acceptLoan0_126_v T3 ) ) (T21_user_makeOffer0_126 (T21_user_makeOffer0_126_v T11 ) ) ) )
  (declare-fun T21_toBytes (T21 ) Bytes )
  (define-fun T21_dataTag ((T21_dataTagParam T21 ) ) UInt (match T21_dataTagParam (((T21_Admin_api_acceptOffer0_126 T21_Admin_api_acceptOffer0_126_pv ) 0 ) ((T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126_pv ) 1 ) ((T21_Admin_api_freeze0_126 T21_Admin_api_freeze0_126_pv ) 2 ) ((T21_Admin_api_updateConfig0_126 T21_Admin_api_updateConfig0_126_pv ) 3 ) ((T21_Admin_api_updateLoanTerms_info0_126 T21_Admin_api_updateLoanTerms_info0_126_pv ) 4 ) ((T21_user_acceptLoan0_126 T21_user_acceptLoan0_126_pv ) 5 ) ((T21_user_makeOffer0_126 T21_user_makeOffer0_126_pv ) 6 ) ) ) )
  (define-fun T21_inv ((x T21 ) ) Bool (match x (((T21_Admin_api_acceptOffer0_126 x ) (and (<= 0 (T10_amount (T9_elem0 x ) ) ) (<= 0 (T10_offerId (T9_elem0 x ) ) ) ) ) ((T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 x ) (<= 0 (T6_elem0 x ) ) ) ((T21_Admin_api_freeze0_126 x ) true ) ((T21_Admin_api_updateConfig0_126 x ) (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 x ) ) ) ) ((T21_Admin_api_updateLoanTerms_info0_126 x ) (and (<= 0 (T14_duration_in_blocks (T13_elem0 x ) ) ) (<= 0 (T14_principle (T13_elem0 x ) ) ) ) ) ((T21_user_acceptLoan0_126 x ) true ) ((T21_user_makeOffer0_126 x ) (<= 0 (T12_amount (T11_elem0 x ) ) ) ) ) ) )
  (declare-datatype T22 ((T22_None (T22_None_v Null ) ) (T22_Some (T22_Some_v T10 ) ) ) )
  (declare-fun T22_toBytes (T22 ) Bytes )
  (define-fun T22_dataTag ((T22_dataTagParam T22 ) ) UInt (match T22_dataTagParam (((T22_None T22_None_pv ) 0 ) ((T22_Some T22_Some_pv ) 1 ) ) ) )
  (define-fun T22_inv ((x T22 ) ) Bool (match x (((T22_None x ) true ) ((T22_Some x ) (and (<= 0 (T10_amount x ) ) (<= 0 (T10_offerId x ) ) ) ) ) ) )
  (declare-fun map0_0 () (Array UInt T22 ) )
  (assert (= map0_0 ((as const (Array UInt T22 ) ) (T22_None null ) ) ) )
  (declare-fun dlc_UInt_max () UInt )
  (assert (<= 0 dlc_UInt_max ) )
  (declare-fun dlc_Token_zero () Token )
  (assert true )
  (declare-fun address_Admin () Address )
  (assert true )
  (declare-fun interact_Admin_intiConfig () T17 )
  (assert (and (<= 0 (T16_number_of_tokens_to_deposit (T17_configuration interact_Admin_intiConfig ) ) ) (and (<= 0 (T14_duration_in_blocks (T17_loanTerms_info interact_Admin_intiConfig ) ) ) (<= 0 (T14_principle (T17_loanTerms_info interact_Admin_intiConfig ) ) ) ) ) )
  (declare-fun address_Admin_api_acceptOffer () Address )
  (assert true )
  (declare-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address )
  (assert true )
  (declare-fun address_Admin_api_freeze () Address )
  (assert true )
  (declare-fun address_Admin_api_updateConfig () Address )
  (assert true )
  (declare-fun address_Admin_api_updateLoanTerms_info () Address )
  (assert true )
  (declare-fun address_user_acceptLoan () Address )
  (assert true )
  (declare-fun address_user_makeOffer () Address )
  (assert true )
  (push 1 ) ;; {
    (declare-fun v6971 () Address )
    (assert true )
    (declare-fun v6972 () Address )
    (assert true )
    (declare-fun v6973 () Address )
    (assert true )
    (declare-fun v6974 () Address )
    (assert true )
    (declare-fun v6975 () Address )
    (assert true )
    (declare-fun v6976 () Address )
    (assert true )
    (declare-fun v6977 () Address )
    (assert true )
    (declare-fun v6978 () Address )
    (assert true )
    (declare-fun v2978 () T2 )
    (assert (and (<= 0 (T2_elem0 v2978 ) ) (<= 0 (T2_elem1 v2978 ) ) ) )
    (assert (= v2978 (T2_cons 0 0 false ) ) )
    (declare-fun v2979 () T1 )
    (assert (and (<= 0 (T2_elem0 (select v2979 0 ) ) ) (<= 0 (T2_elem1 (select v2979 0 ) ) ) ) )
    (assert (= v2979 (T1_cons v2978 ) ) )
    (declare-fun v2980 () T0 )
    (assert true )
    (assert (= v2980 (T0_cons dlc_Token_zero ) ) )
    (declare-fun v2983 () T17 )
    (assert (and (<= 0 (T16_number_of_tokens_to_deposit (T17_configuration v2983 ) ) ) (and (<= 0 (T14_duration_in_blocks (T17_loanTerms_info v2983 ) ) ) (<= 0 (T14_principle (T17_loanTerms_info v2983 ) ) ) ) ) )
    (declare-fun v2984 () Address )
    (assert true )
    (assert (= v2984 (T17_ADMIN v2983 ) ) )
    (declare-fun v2986 () T16 )
    (assert (<= 0 (T16_number_of_tokens_to_deposit v2986 ) ) )
    (assert (= v2986 (T17_configuration v2983 ) ) )
    (declare-fun v2987 () T14 )
    (assert (and (<= 0 (T14_duration_in_blocks v2987 ) ) (<= 0 (T14_principle v2987 ) ) ) )
    (assert (= v2987 (T17_loanTerms_info v2983 ) ) )
    (declare-fun v2988 () Token )
    (assert true )
    (assert (= v2988 (T16_token v2986 ) ) )
    (declare-fun v2989 () UInt )
    (assert (<= 0 v2989 ) )
    (assert (<= v2989 dlc_UInt_max ) )
    (assert (= v2989 (T16_number_of_tokens_to_deposit v2986 ) ) )
    (declare-fun v2990 () Token )
    (assert true )
    (assert (= v2990 (T16_paymentAsset v2986 ) ) )
    (declare-fun v2991 () Bool )
    (assert true )
    (assert (= v2991 (T16_shouldPayInOnlyNetworkToken v2986 ) ) )
    (declare-fun v2992 () Bool )
    (assert true )
    (assert (= v2992 (T16_prefersNetworkToken v2986 ) ) )
    (declare-fun v3006 () T20 )
    (assert (<= 0 (T20_number_of_tokens_to_deposit v3006 ) ) )
    (assert (= v3006 (T20_cons v2989 v2990 v2992 v2991 v2988 ) ) )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v3007 () Address )
      (assert true )
      (assert (= v3007 address_Admin ) )
      (declare-fun v3008 () T20 )
      (assert (<= 0 (T20_number_of_tokens_to_deposit v3008 ) ) )
      (assert (= v3008 v3006 ) )
      (declare-fun v3009 () Token )
      (assert true )
      (assert (= v3009 v2988 ) )
      (declare-fun v3010 () T16 )
      (assert (<= 0 (T16_number_of_tokens_to_deposit v3010 ) ) )
      (assert (= v3010 v2986 ) )
      (declare-fun v3011 () T14 )
      (assert (and (<= 0 (T14_duration_in_blocks v3011 ) ) (<= 0 (T14_principle v3011 ) ) ) )
      (assert (= v3011 v2987 ) )
      (declare-fun v3012 () Address )
      (assert true )
      (assert (= v3012 v2984 ) )
      (declare-fun pv_net6979 () UInt )
      (assert (<= 0 pv_net6979 ) )
      (declare-fun pv_tok6981 () Token )
      (assert true )
      (declare-fun pv_ks6980 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks6980 pv_tok6981 ) ) )
      (assert (= pv_net6979 0 ) )
      (declare-fun v6982 () Address )
      (assert true )
      (declare-fun v6983 () Address )
      (assert true )
      (declare-fun v6984 () Address )
      (assert true )
      (declare-fun v6985 () Address )
      (assert true )
      (declare-fun v6986 () Address )
      (assert true )
      (declare-fun v6987 () Address )
      (assert true )
      (declare-fun v6988 () Address )
      (assert true )
      (declare-fun v6989 () Address )
      (assert true )
      (declare-fun v3013 () UInt )
      (assert (<= 0 v3013 ) )
      (declare-fun v3014 () UInt )
      (assert (<= 0 v3014 ) )
      (declare-fun v54 () Bool )
      (assert true )
      (assert (= v3013 0 ) )
      (assert (= v3014 0 ) )
      (declare-fun v3015 () T2 )
      (assert (and (<= 0 (T2_elem0 v3015 ) ) (<= 0 (T2_elem1 v3015 ) ) ) )
      (assert (= v3015 (select v2979 0 ) ) )
      (declare-fun v3016 () T2 )
      (assert (and (<= 0 (T2_elem0 v3016 ) ) (<= 0 (T2_elem1 v3016 ) ) ) )
      (assert (= v3016 (T2_cons 0 (T2_elem1 v3015 ) (T2_elem2 v3015 ) ) ) )
      (declare-fun v3017 () T1 )
      (assert (and (<= 0 (T2_elem0 (select v3017 0 ) ) ) (<= 0 (T2_elem1 (select v3017 0 ) ) ) ) )
      (assert (= v3017 (store v2979 0 v3016 ) ) )
      (declare-fun v3018 () T0 )
      (assert true )
      (assert (= v3018 (store v2980 0 v3009 ) ) )
      (push 1 ) ;; {
        (assert (not (= 0 pv_net6979 ) ) )
        (check-sat-using (try-for default 10 ) )
        ;; unknown
        (pop 1 ) ;; }
      (assert (= 0 pv_net6979 ) )
      (declare-fun v3019 () Token )
      (assert true )
      (assert (= v3019 (T20_paymentAsset v3008 ) ) )
      (declare-fun v3020 () UInt )
      (assert (<= 0 v3020 ) )
      (assert (<= v3020 dlc_UInt_max ) )
      (assert (= v3020 (T20_number_of_tokens_to_deposit v3008 ) ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v3021 () Address )
        (assert true )
        (assert (= v3021 address_Admin ) )
        (declare-fun pv_net6990 () UInt )
        (assert (<= 0 pv_net6990 ) )
        (declare-fun pv_tok6992 () Token )
        (assert true )
        (declare-fun pv_ks6991 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks6991 pv_tok6992 ) ) )
        (assert (= pv_net6990 0 ) )
        (assert (= (select pv_ks6991 v3009 ) v3020 ) )
        (declare-fun v6993 () Address )
        (assert true )
        (declare-fun v6994 () Address )
        (assert true )
        (declare-fun v6995 () Address )
        (assert true )
        (declare-fun v6996 () Address )
        (assert true )
        (declare-fun v6997 () Address )
        (assert true )
        (declare-fun v6998 () Address )
        (assert true )
        (declare-fun v6999 () Address )
        (assert true )
        (declare-fun v7000 () Address )
        (assert true )
        (declare-fun v3022 () UInt )
        (assert (<= 0 v3022 ) )
        (declare-fun v3023 () UInt )
        (assert (<= 0 v3023 ) )
        (declare-fun v64 () Bool )
        (assert true )
        (assert (= v3022 (+ v3013 1 ) ) )
        (assert (>= v3023 v3014 ) )
        (declare-fun v3024 () UInt )
        (assert (<= 0 v3024 ) )
        (assert (<= v3024 dlc_UInt_max ) )
        (assert (= v3024 (T20_number_of_tokens_to_deposit v3008 ) ) )
        (push 1 ) ;; {
          (assert (not (= 0 pv_net6990 ) ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert (= 0 pv_net6990 ) )
        (declare-fun v3025 () T2 )
        (assert (and (<= 0 (T2_elem0 v3025 ) ) (<= 0 (T2_elem1 v3025 ) ) ) )
        (assert (= v3025 (select v3017 0 ) ) )
        (declare-fun v3026 () UInt )
        (assert (<= 0 v3026 ) )
        (assert (<= v3026 dlc_UInt_max ) )
        (assert (= v3026 (T2_elem0 v3025 ) ) )
        (declare-fun v3027 () UInt )
        (assert (<= 0 v3027 ) )
        (assert (<= v3027 dlc_UInt_max ) )
        (assert (= v3027 (+ v3026 v3024 ) ) )
        (declare-fun v3029 () T2 )
        (assert (and (<= 0 (T2_elem0 v3029 ) ) (<= 0 (T2_elem1 v3029 ) ) ) )
        (assert (= v3029 (T2_cons v3027 (T2_elem1 v3025 ) (T2_elem2 v3025 ) ) ) )
        (declare-fun v3030 () T1 )
        (assert (and (<= 0 (T2_elem0 (select v3030 0 ) ) ) (<= 0 (T2_elem1 (select v3030 0 ) ) ) ) )
        (assert (= v3030 (store v3017 0 v3029 ) ) )
        (push 1 ) ;; {
          (assert (not (= v3024 (select pv_ks6991 v3009 ) ) ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert (= v3024 (select pv_ks6991 v3009 ) ) )
        (declare-fun v3031 () Bool )
        (assert true )
        (assert (= v3031 (= v3007 v3021 ) ) )
        (push 1 ) ;; {
          (assert (not v3031 ) )
          (check-sat-using (try-for default 10 ) )
          ;; unsat
          (pop 1 ) ;; }
        (assert v3031 )
        (push 1 ) ;; {
          (declare-fun v7001 () Address )
          (assert true )
          (declare-fun v7002 () Address )
          (assert true )
          (declare-fun v7003 () Address )
          (assert true )
          (declare-fun v7004 () Address )
          (assert true )
          (declare-fun v7005 () Address )
          (assert true )
          (declare-fun v7006 () Address )
          (assert true )
          (declare-fun v7007 () Address )
          (assert true )
          (declare-fun v7008 () Address )
          (assert true )
          (pop 1 ) ;; }
        (declare-fun v3037 () T19 )
        (assert (T19_inv v3037 ) )
        (assert (= v3037 (T19_None null ) ) )
        (declare-fun v3038 () T18 )
        (assert (and (T19_inv (T18_acceptedAddress v3038 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3038 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3038 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3038 ) ) ) ) (<= 0 (T18_offers v3038 ) ) ) )
        (assert (= v3038 (T18_cons v3037 v3010 true false v3011 false 0 ) ) )
        (push 1 ) ;; {
          (push 1 ) ;; {
            (declare-fun v3039 () T18 )
            (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
            (assert (= v3039 v3038 ) )
            (declare-fun v3040 () UInt )
            (assert (<= 0 v3040 ) )
            (assert (<= v3040 dlc_UInt_max ) )
            (assert (= v3040 v3022 ) )
            (declare-fun v3041 () UInt )
            (assert (<= 0 v3041 ) )
            (assert (<= v3041 dlc_UInt_max ) )
            (assert (= v3041 v3013 ) )
            (declare-fun v3042 () UInt )
            (assert (<= 0 v3042 ) )
            (assert (<= v3042 dlc_UInt_max ) )
            (assert (= v3042 v3013 ) )
            (declare-fun v3043 () UInt )
            (assert (<= 0 v3043 ) )
            (assert (<= v3043 dlc_UInt_max ) )
            (assert (= v3043 v3023 ) )
            (declare-fun v3044 () UInt )
            (assert (<= 0 v3044 ) )
            (assert (<= v3044 dlc_UInt_max ) )
            (assert (= v3044 v3014 ) )
            (declare-fun v3045 () UInt )
            (assert (<= 0 v3045 ) )
            (assert (<= v3045 dlc_UInt_max ) )
            (assert (= v3045 v3014 ) )
            (declare-fun v3046 () T1 )
            (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
            (assert (= v3046 v3030 ) )
            (declare-fun v3047 () UInt )
            (assert (<= 0 v3047 ) )
            (assert (<= v3047 dlc_UInt_max ) )
            (assert (= v3047 0 ) )
            (declare-fun v3059 () Bool )
            (assert true )
            (assert (= v3059 (= v3047 0 ) ) )
            (push 1 ) ;; {
              (assert (not v3059 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array UInt T22 ) )
          (declare-fun v3039 () T18 )
          (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
          (declare-fun v3040 () UInt )
          (assert (<= 0 v3040 ) )
          (assert (<= v3040 dlc_UInt_max ) )
          (declare-fun v3041 () UInt )
          (assert (<= 0 v3041 ) )
          (assert (<= v3041 dlc_UInt_max ) )
          (declare-fun v3042 () UInt )
          (assert (<= 0 v3042 ) )
          (assert (<= v3042 dlc_UInt_max ) )
          (declare-fun v3043 () UInt )
          (assert (<= 0 v3043 ) )
          (assert (<= v3043 dlc_UInt_max ) )
          (declare-fun v3044 () UInt )
          (assert (<= 0 v3044 ) )
          (assert (<= v3044 dlc_UInt_max ) )
          (declare-fun v3045 () UInt )
          (assert (<= 0 v3045 ) )
          (assert (<= v3045 dlc_UInt_max ) )
          (declare-fun v3046 () T1 )
          (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
          (declare-fun v3047 () UInt )
          (assert (<= 0 v3047 ) )
          (assert (<= v3047 dlc_UInt_max ) )
          (declare-fun v3059 () Bool )
          (assert true )
          (assert (= v3059 (= v3047 0 ) ) )
          (assert v3059 )
          (declare-fun v3070 () Bool )
          (assert true )
          (assert (= v3070 (T18_continue v3039 ) ) )
          (assert v3070 )
          (declare-fun v3071 () T16 )
          (assert (<= 0 (T16_number_of_tokens_to_deposit v3071 ) ) )
          (assert (= v3071 (T18_config v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7010 () Address )
            (assert true )
            (declare-fun v7011 () Address )
            (assert true )
            (declare-fun v7012 () Address )
            (assert true )
            (declare-fun v7013 () Address )
            (assert true )
            (declare-fun v7014 () Address )
            (assert true )
            (declare-fun v7015 () Address )
            (assert true )
            (declare-fun v7016 () Address )
            (assert true )
            (declare-fun v7017 () Address )
            (assert true )
            (pop 1 ) ;; }
          (declare-fun v3077 () T14 )
          (assert (and (<= 0 (T14_duration_in_blocks v3077 ) ) (<= 0 (T14_principle v3077 ) ) ) )
          (assert (= v3077 (T18_loanTerms v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7018 () Address )
            (assert true )
            (declare-fun v7019 () Address )
            (assert true )
            (declare-fun v7020 () Address )
            (assert true )
            (declare-fun v7021 () Address )
            (assert true )
            (declare-fun v7022 () Address )
            (assert true )
            (declare-fun v7023 () Address )
            (assert true )
            (declare-fun v7024 () Address )
            (assert true )
            (declare-fun v7025 () Address )
            (assert true )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v7026 () Address )
            (assert true )
            (declare-fun v7027 () Address )
            (assert true )
            (declare-fun v7028 () Address )
            (assert true )
            (declare-fun v7029 () Address )
            (assert true )
            (declare-fun v7030 () Address )
            (assert true )
            (declare-fun v7031 () Address )
            (assert true )
            (declare-fun v7032 () Address )
            (assert true )
            (declare-fun v7033 () Address )
            (assert true )
            (declare-fun v3081 () UInt )
            (assert (<= 0 v3081 ) )
            (declare-fun v3082 () T22 )
            (assert (T22_inv v3082 ) )
            (assert (= v3082 (select map0_1 v3081 ) ) )
            (pop 1 ) ;; }
          (declare-fun v3083 () Address )
          (assert true )
          (assert (= v3083 v6997 ) )
          (declare-fun v3085 () T15 )
          (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v3085 ) ) ) )
          (declare-fun v3093 () Bool )
          (assert true )
          (assert (= v3093 (= v3083 v3007 ) ) )
          (declare-fun v3094 () Bool )
          (assert true )
          (assert (= v3094 (= v3012 v3083 ) ) )
          (declare-fun v3095 () Bool )
          (assert true )
          (assert (= v3095 (ite v3093 true v3094 ) ) )
          (assert v3095 )
          (declare-fun v3097 () Bool )
          (assert true )
          (assert (= v3097 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3098 () Bool )
          (assert true )
          (assert (= v3098 (ite v3097 false true ) ) )
          (assert v3098 )
          (declare-fun v3110 () T21 )
          (assert (T21_inv v3110 ) )
          (assert (= v3110 (T21_Admin_api_updateConfig0_126 v3085 ) ) )
          (declare-fun v3112 () Address )
          (assert true )
          (assert (= v3112 v6996 ) )
          (declare-fun v3114 () T4 )
          (assert true )
          (declare-fun v3115 () Bool )
          (assert true )
          (assert (= v3115 (T4_elem0 v3114 ) ) )
          (declare-fun v3117 () Bool )
          (assert true )
          (assert (= v3117 (= v3112 v3007 ) ) )
          (declare-fun v3118 () Bool )
          (assert true )
          (assert (= v3118 (= v3012 v3112 ) ) )
          (declare-fun v3119 () Bool )
          (assert true )
          (assert (= v3119 (ite v3117 true v3118 ) ) )
          (assert v3119 )
          (declare-fun v3121 () Bool )
          (assert true )
          (assert (= v3121 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3122 () Bool )
          (assert true )
          (assert (= v3122 (ite v3121 false true ) ) )
          (assert v3122 )
          (declare-fun v3124 () Bool )
          (assert true )
          (assert (= v3124 (T18_freeze v3039 ) ) )
          (declare-fun v3125 () Bool )
          (assert true )
          (assert (= v3125 (ite v3124 false true ) ) )
          (declare-fun v3126 () Bool )
          (assert true )
          (assert (= v3126 (ite v3115 v3124 v3125 ) ) )
          (declare-fun v3127 () Bool )
          (assert true )
          (assert (= v3127 (ite v3126 false true ) ) )
          (assert v3127 )
          (declare-fun v3134 () T21 )
          (assert (T21_inv v3134 ) )
          (assert (= v3134 (T21_Admin_api_freeze0_126 v3114 ) ) )
          (declare-fun v3136 () Address )
          (assert true )
          (assert (= v3136 v6998 ) )
          (declare-fun v3138 () T13 )
          (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v3138 ) ) ) (<= 0 (T14_principle (T13_elem0 v3138 ) ) ) ) )
          (declare-fun v3144 () Bool )
          (assert true )
          (assert (= v3144 (= v3136 v3007 ) ) )
          (declare-fun v3145 () Bool )
          (assert true )
          (assert (= v3145 (= v3012 v3136 ) ) )
          (declare-fun v3146 () Bool )
          (assert true )
          (assert (= v3146 (ite v3144 true v3145 ) ) )
          (assert v3146 )
          (declare-fun v3148 () Bool )
          (assert true )
          (assert (= v3148 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3149 () Bool )
          (assert true )
          (assert (= v3149 (ite v3148 false true ) ) )
          (assert v3149 )
          (declare-fun v3159 () T21 )
          (assert (T21_inv v3159 ) )
          (assert (= v3159 (T21_Admin_api_updateLoanTerms_info0_126 v3138 ) ) )
          (declare-fun v3161 () Address )
          (assert true )
          (assert (= v3161 v6995 ) )
          (declare-fun v3163 () T6 )
          (assert (<= 0 (T6_elem0 v3163 ) ) )
          (declare-fun v3166 () Bool )
          (assert true )
          (assert (= v3166 (= v3161 v3007 ) ) )
          (declare-fun v3167 () Bool )
          (assert true )
          (assert (= v3167 (= v3012 v3161 ) ) )
          (declare-fun v3168 () Bool )
          (assert true )
          (assert (= v3168 (ite v3166 true v3167 ) ) )
          (assert v3168 )
          (declare-fun v3170 () Bool )
          (assert true )
          (assert (= v3170 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3171 () Bool )
          (assert true )
          (assert (= v3171 (ite v3170 false true ) ) )
          (assert v3171 )
          (declare-fun v3174 () Bool )
          (assert true )
          (assert (= v3174 (T18_freeze v3039 ) ) )
          (assert v3174 )
          (declare-fun v3182 () T21 )
          (assert (T21_inv v3182 ) )
          (assert (= v3182 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3163 ) ) )
          (declare-fun v3184 () Address )
          (assert true )
          (assert (= v3184 v6994 ) )
          (declare-fun v3186 () T9 )
          (assert (and (<= 0 (T10_amount (T9_elem0 v3186 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3186 ) ) ) ) )
          (declare-fun v3187 () T10 )
          (assert (and (<= 0 (T10_amount v3187 ) ) (<= 0 (T10_offerId v3187 ) ) ) )
          (assert (= v3187 (T9_elem0 v3186 ) ) )
          (declare-fun v3190 () UInt )
          (assert (<= 0 v3190 ) )
          (assert (<= v3190 dlc_UInt_max ) )
          (assert (= v3190 (T10_offerId v3187 ) ) )
          (declare-fun v3193 () Bool )
          (assert true )
          (assert (= v3193 (= v3184 v3007 ) ) )
          (declare-fun v3194 () Bool )
          (assert true )
          (assert (= v3194 (= v3012 v3184 ) ) )
          (declare-fun v3195 () Bool )
          (assert true )
          (assert (= v3195 (ite v3193 true v3194 ) ) )
          (assert v3195 )
          (declare-fun v3197 () Bool )
          (assert true )
          (assert (= v3197 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3198 () Bool )
          (assert true )
          (assert (= v3198 (ite v3197 false true ) ) )
          (assert v3198 )
          (declare-fun v3201 () Bool )
          (assert true )
          (assert (= v3201 (T18_freeze v3039 ) ) )
          (assert v3201 )
          (declare-fun v3208 () T22 )
          (assert (T22_inv v3208 ) )
          (assert (= v3208 (select map0_1 v3190 ) ) )
          (declare-fun v3209 () UInt )
          (assert (<= 0 v3209 ) )
          (assert (<= v3209 dlc_UInt_max ) )
          (assert (= v3209 (T22_dataTag v3208 ) ) )
          (declare-fun v3210 () Bool )
          (assert true )
          (assert (= v3210 (= v3209 1 ) ) )
          (assert v3210 )
          (declare-fun v3221 () T21 )
          (assert (T21_inv v3221 ) )
          (assert (= v3221 (T21_Admin_api_acceptOffer0_126 v3186 ) ) )
          (declare-fun v3225 () T3 )
          (assert true )
          (declare-fun v3227 () Bool )
          (assert true )
          (assert (= v3227 (T18_freeze v3039 ) ) )
          (assert v3227 )
          (declare-fun v3231 () Bool )
          (assert true )
          (assert (= v3231 (T18_loanTermsAccepted v3039 ) ) )
          (declare-fun v3232 () Bool )
          (assert true )
          (assert (= v3232 (ite v3231 false true ) ) )
          (assert v3232 )
          (declare-fun v3234 () Bool )
          (assert true )
          (assert (= v3234 (T20_prefersNetworkToken v3008 ) ) )
          (declare-fun v3235 () T7 )
          (assert (<= 0 (T7_elem0 v3235 ) ) )
          (assert (= v3235 (T7_cons 0 v3019 ) ) )
          (declare-fun v3236 () T8 )
          (assert (and (<= 0 (T8_elem0 v3236 ) ) (<= 0 (T7_elem0 (T8_elem1 v3236 ) ) ) ) )
          (assert (= v3236 (T8_cons v3024 v3235 ) ) )
          (declare-fun v3237 () T7 )
          (assert (<= 0 (T7_elem0 v3237 ) ) )
          (assert (= v3237 (T7_cons v3024 v3019 ) ) )
          (declare-fun v3238 () T8 )
          (assert (and (<= 0 (T8_elem0 v3238 ) ) (<= 0 (T7_elem0 (T8_elem1 v3238 ) ) ) ) )
          (assert (= v3238 (T8_cons 0 v3237 ) ) )
          (declare-fun v3239 () T8 )
          (assert (and (<= 0 (T8_elem0 v3239 ) ) (<= 0 (T7_elem0 (T8_elem1 v3239 ) ) ) ) )
          (assert (= v3239 (ite v3234 v3236 v3238 ) ) )
          (declare-fun v3243 () T21 )
          (assert (T21_inv v3243 ) )
          (assert (= v3243 (T21_user_acceptLoan0_126 v3225 ) ) )
          (declare-fun v3247 () T11 )
          (assert (<= 0 (T12_amount (T11_elem0 v3247 ) ) ) )
          (declare-fun v3248 () T12 )
          (assert (<= 0 (T12_amount v3248 ) ) )
          (assert (= v3248 (T11_elem0 v3247 ) ) )
          (declare-fun v3249 () UInt )
          (assert (<= 0 v3249 ) )
          (assert (<= v3249 dlc_UInt_max ) )
          (assert (= v3249 (T12_amount v3248 ) ) )
          (declare-fun v3255 () Bool )
          (assert true )
          (assert (= v3255 (T18_freeze v3039 ) ) )
          (assert v3255 )
          (declare-fun v3265 () T21 )
          (assert (T21_inv v3265 ) )
          (assert (= v3265 (T21_user_makeOffer0_126 v3247 ) ) )
          (declare-fun v3393 () UInt )
          (assert (<= 0 v3393 ) )
          (assert (<= v3393 dlc_UInt_max ) )
          (assert (= v3393 (T8_elem0 v3239 ) ) )
          (declare-fun v3394 () T7 )
          (assert (<= 0 (T7_elem0 v3394 ) ) )
          (assert (= v3394 (T8_elem1 v3239 ) ) )
          (declare-fun v3395 () UInt )
          (assert (<= 0 v3395 ) )
          (assert (<= v3395 dlc_UInt_max ) )
          (assert (= v3395 (T7_elem0 v3394 ) ) )
          (declare-fun v3396 () Token )
          (assert true )
          (assert (= v3396 (T7_elem1 v3394 ) ) )
          (declare-fun v3397 () Bool )
          (assert true )
          (assert (= v3397 (= v3396 v3019 ) ) )
          (push 1 ) ;; {
            (assert (not v3397 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert v3397 )
          (declare-fun v3408 () Bool )
          (assert true )
          (assert (= v3408 (T20_prefersNetworkToken v3008 ) ) )
          (declare-fun v3409 () T7 )
          (assert (<= 0 (T7_elem0 v3409 ) ) )
          (assert (= v3409 (T7_cons 0 v3019 ) ) )
          (declare-fun v3410 () T8 )
          (assert (and (<= 0 (T8_elem0 v3410 ) ) (<= 0 (T7_elem0 (T8_elem1 v3410 ) ) ) ) )
          (assert (= v3410 (T8_cons v3249 v3409 ) ) )
          (declare-fun v3411 () T7 )
          (assert (<= 0 (T7_elem0 v3411 ) ) )
          (assert (= v3411 (T7_cons v3249 v3019 ) ) )
          (declare-fun v3412 () T8 )
          (assert (and (<= 0 (T8_elem0 v3412 ) ) (<= 0 (T7_elem0 (T8_elem1 v3412 ) ) ) ) )
          (assert (= v3412 (T8_cons 0 v3411 ) ) )
          (declare-fun v3413 () T8 )
          (assert (and (<= 0 (T8_elem0 v3413 ) ) (<= 0 (T7_elem0 (T8_elem1 v3413 ) ) ) ) )
          (assert (= v3413 (ite v3408 v3410 v3412 ) ) )
          (declare-fun v3414 () UInt )
          (assert (<= 0 v3414 ) )
          (assert (<= v3414 dlc_UInt_max ) )
          (assert (= v3414 (T8_elem0 v3413 ) ) )
          (declare-fun v3415 () T7 )
          (assert (<= 0 (T7_elem0 v3415 ) ) )
          (assert (= v3415 (T8_elem1 v3413 ) ) )
          (declare-fun v3416 () UInt )
          (assert (<= 0 v3416 ) )
          (assert (<= v3416 dlc_UInt_max ) )
          (assert (= v3416 (T7_elem0 v3415 ) ) )
          (declare-fun v3417 () Token )
          (assert true )
          (assert (= v3417 (T7_elem1 v3415 ) ) )
          (declare-fun v3418 () Bool )
          (assert true )
          (assert (= v3418 (= v3417 v3019 ) ) )
          (push 1 ) ;; {
            (assert (not v3418 ) )
            (check-sat-using (try-for default 10 ) )
            ;; unsat
            (pop 1 ) ;; }
          (assert v3418 )
          (push 1 ) ;; {
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6994 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3221 ) )
            (declare-fun pv_net7034 () UInt )
            (assert (<= 0 pv_net7034 ) )
            (declare-fun pv_tok7036 () Token )
            (assert true )
            (declare-fun pv_ks7035 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7035 pv_tok7036 ) ) )
            (assert (= pv_net7034 0 ) )
            (assert (= (select pv_ks7035 v3019 ) 0 ) )
            (declare-fun v7037 () Address )
            (assert true )
            (declare-fun v7038 () Address )
            (assert true )
            (declare-fun v7039 () Address )
            (assert true )
            (declare-fun v7040 () Address )
            (assert true )
            (declare-fun v7041 () Address )
            (assert true )
            (declare-fun v7042 () Address )
            (assert true )
            (declare-fun v7043 () Address )
            (assert true )
            (declare-fun v7044 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7034 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun pv_ks7035 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!14 31891 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun pv_tok7036 () Token Token!val!14 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun v3425 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!4 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3423 () Int 1 ) (define-fun pv_net7034 () Int 0 ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v7044 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7043 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v7037 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v7039 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun v7041 () Address Address!val!1 ) (define-fun v7040 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7038 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7042 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7035 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7045 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7045 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7045 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7045 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7045 ) ) ) ) (<= 0 (T18_offers v7045 ) ) ) )
                (assert (= v7045 v3641 ) )
                (declare-fun v7046 () UInt )
                (assert (<= 0 v7046 ) )
                (assert (<= v7046 dlc_UInt_max ) )
                (assert (= v7046 v3423 ) )
                (declare-fun v7047 () UInt )
                (assert (<= 0 v7047 ) )
                (assert (<= v7047 dlc_UInt_max ) )
                (assert (= v7047 v3040 ) )
                (declare-fun v7048 () UInt )
                (assert (<= 0 v7048 ) )
                (assert (<= v7048 dlc_UInt_max ) )
                (assert (= v7048 v3040 ) )
                (declare-fun v7049 () UInt )
                (assert (<= 0 v7049 ) )
                (assert (<= v7049 dlc_UInt_max ) )
                (assert (= v7049 v3424 ) )
                (declare-fun v7050 () UInt )
                (assert (<= 0 v7050 ) )
                (assert (<= v7050 dlc_UInt_max ) )
                (assert (= v7050 v3043 ) )
                (declare-fun v7051 () UInt )
                (assert (<= 0 v7051 ) )
                (assert (<= v7051 dlc_UInt_max ) )
                (assert (= v7051 v3043 ) )
                (declare-fun v7052 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7052 0 ) ) ) (<= 0 (T2_elem1 (select v7052 0 ) ) ) ) )
                (assert (= v7052 v3046 ) )
                (declare-fun v7053 () UInt )
                (assert (<= 0 v7053 ) )
                (assert (<= v7053 dlc_UInt_max ) )
                (assert (= v7053 v3047 ) )
                (declare-fun v7054 () Bool )
                (assert true )
                (assert (= v7054 (= v7053 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7054 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7034 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7035 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7055 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7055 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7055 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7055 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7055 ) ) ) ) (<= 0 (T18_offers v7055 ) ) ) )
                (assert (= v7055 v4143 ) )
                (declare-fun v7056 () UInt )
                (assert (<= 0 v7056 ) )
                (assert (<= v7056 dlc_UInt_max ) )
                (assert (= v7056 v3423 ) )
                (declare-fun v7057 () UInt )
                (assert (<= 0 v7057 ) )
                (assert (<= v7057 dlc_UInt_max ) )
                (assert (= v7057 v3040 ) )
                (declare-fun v7058 () UInt )
                (assert (<= 0 v7058 ) )
                (assert (<= v7058 dlc_UInt_max ) )
                (assert (= v7058 v3040 ) )
                (declare-fun v7059 () UInt )
                (assert (<= 0 v7059 ) )
                (assert (<= v7059 dlc_UInt_max ) )
                (assert (= v7059 v3424 ) )
                (declare-fun v7060 () UInt )
                (assert (<= 0 v7060 ) )
                (assert (<= v7060 dlc_UInt_max ) )
                (assert (= v7060 v3043 ) )
                (declare-fun v7061 () UInt )
                (assert (<= 0 v7061 ) )
                (assert (<= v7061 dlc_UInt_max ) )
                (assert (= v7061 v3043 ) )
                (declare-fun v7062 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7062 0 ) ) ) (<= 0 (T2_elem1 (select v7062 0 ) ) ) ) )
                (assert (= v7062 v3046 ) )
                (declare-fun v7063 () UInt )
                (assert (<= 0 v7063 ) )
                (assert (<= v7063 dlc_UInt_max ) )
                (assert (= v7063 v3047 ) )
                (declare-fun v7064 () Bool )
                (assert true )
                (assert (= v7064 (= v7063 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7064 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7034 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7035 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7065 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7065 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7065 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7065 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7065 ) ) ) ) (<= 0 (T18_offers v7065 ) ) ) )
                (assert (= v7065 v4646 ) )
                (declare-fun v7066 () UInt )
                (assert (<= 0 v7066 ) )
                (assert (<= v7066 dlc_UInt_max ) )
                (assert (= v7066 v3423 ) )
                (declare-fun v7067 () UInt )
                (assert (<= 0 v7067 ) )
                (assert (<= v7067 dlc_UInt_max ) )
                (assert (= v7067 v3040 ) )
                (declare-fun v7068 () UInt )
                (assert (<= 0 v7068 ) )
                (assert (<= v7068 dlc_UInt_max ) )
                (assert (= v7068 v3040 ) )
                (declare-fun v7069 () UInt )
                (assert (<= 0 v7069 ) )
                (assert (<= v7069 dlc_UInt_max ) )
                (assert (= v7069 v3424 ) )
                (declare-fun v7070 () UInt )
                (assert (<= 0 v7070 ) )
                (assert (<= v7070 dlc_UInt_max ) )
                (assert (= v7070 v3043 ) )
                (declare-fun v7071 () UInt )
                (assert (<= 0 v7071 ) )
                (assert (<= v7071 dlc_UInt_max ) )
                (assert (= v7071 v3043 ) )
                (declare-fun v7072 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7072 0 ) ) ) (<= 0 (T2_elem1 (select v7072 0 ) ) ) ) )
                (assert (= v7072 v3046 ) )
                (declare-fun v7073 () UInt )
                (assert (<= 0 v7073 ) )
                (assert (<= v7073 dlc_UInt_max ) )
                (assert (= v7073 v3047 ) )
                (declare-fun v7074 () Bool )
                (assert true )
                (assert (= v7074 (= v7073 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7074 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7034 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7035 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7075 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7075 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7075 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7075 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7075 ) ) ) ) (<= 0 (T18_offers v7075 ) ) ) )
                (assert (= v7075 v5149 ) )
                (declare-fun v7076 () UInt )
                (assert (<= 0 v7076 ) )
                (assert (<= v7076 dlc_UInt_max ) )
                (assert (= v7076 v3423 ) )
                (declare-fun v7077 () UInt )
                (assert (<= 0 v7077 ) )
                (assert (<= v7077 dlc_UInt_max ) )
                (assert (= v7077 v3040 ) )
                (declare-fun v7078 () UInt )
                (assert (<= 0 v7078 ) )
                (assert (<= v7078 dlc_UInt_max ) )
                (assert (= v7078 v3040 ) )
                (declare-fun v7079 () UInt )
                (assert (<= 0 v7079 ) )
                (assert (<= v7079 dlc_UInt_max ) )
                (assert (= v7079 v3424 ) )
                (declare-fun v7080 () UInt )
                (assert (<= 0 v7080 ) )
                (assert (<= v7080 dlc_UInt_max ) )
                (assert (= v7080 v3043 ) )
                (declare-fun v7081 () UInt )
                (assert (<= 0 v7081 ) )
                (assert (<= v7081 dlc_UInt_max ) )
                (assert (= v7081 v3043 ) )
                (declare-fun v7082 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7082 0 ) ) ) (<= 0 (T2_elem1 (select v7082 0 ) ) ) ) )
                (assert (= v7082 v3046 ) )
                (declare-fun v7083 () UInt )
                (assert (<= 0 v7083 ) )
                (assert (<= v7083 dlc_UInt_max ) )
                (assert (= v7083 v3047 ) )
                (declare-fun v7084 () Bool )
                (assert true )
                (assert (= v7084 (= v7083 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7084 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7034 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7035 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7085 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7085 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7085 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7085 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7085 ) ) ) ) (<= 0 (T18_offers v7085 ) ) ) )
                (assert (= v7085 v5650 ) )
                (declare-fun v7086 () UInt )
                (assert (<= 0 v7086 ) )
                (assert (<= v7086 dlc_UInt_max ) )
                (assert (= v7086 v3423 ) )
                (declare-fun v7087 () UInt )
                (assert (<= 0 v7087 ) )
                (assert (<= v7087 dlc_UInt_max ) )
                (assert (= v7087 v3040 ) )
                (declare-fun v7088 () UInt )
                (assert (<= 0 v7088 ) )
                (assert (<= v7088 dlc_UInt_max ) )
                (assert (= v7088 v3040 ) )
                (declare-fun v7089 () UInt )
                (assert (<= 0 v7089 ) )
                (assert (<= v7089 dlc_UInt_max ) )
                (assert (= v7089 v3424 ) )
                (declare-fun v7090 () UInt )
                (assert (<= 0 v7090 ) )
                (assert (<= v7090 dlc_UInt_max ) )
                (assert (= v7090 v3043 ) )
                (declare-fun v7091 () UInt )
                (assert (<= 0 v7091 ) )
                (assert (<= v7091 dlc_UInt_max ) )
                (assert (= v7091 v3043 ) )
                (declare-fun v7092 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7092 0 ) ) ) (<= 0 (T2_elem1 (select v7092 0 ) ) ) ) )
                (assert (= v7092 v3046 ) )
                (declare-fun v7093 () UInt )
                (assert (<= 0 v7093 ) )
                (assert (<= v7093 dlc_UInt_max ) )
                (assert (= v7093 v3047 ) )
                (declare-fun v7094 () Bool )
                (assert true )
                (assert (= v7094 (= v7093 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7094 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7034 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7035 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7095 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7095 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7095 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7095 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7095 ) ) ) ) (<= 0 (T18_offers v7095 ) ) ) )
                (assert (= v7095 v6217 ) )
                (declare-fun v7096 () UInt )
                (assert (<= 0 v7096 ) )
                (assert (<= v7096 dlc_UInt_max ) )
                (assert (= v7096 v3423 ) )
                (declare-fun v7097 () UInt )
                (assert (<= 0 v7097 ) )
                (assert (<= v7097 dlc_UInt_max ) )
                (assert (= v7097 v3040 ) )
                (declare-fun v7098 () UInt )
                (assert (<= 0 v7098 ) )
                (assert (<= v7098 dlc_UInt_max ) )
                (assert (= v7098 v3040 ) )
                (declare-fun v7099 () UInt )
                (assert (<= 0 v7099 ) )
                (assert (<= v7099 dlc_UInt_max ) )
                (assert (= v7099 v3424 ) )
                (declare-fun v7100 () UInt )
                (assert (<= 0 v7100 ) )
                (assert (<= v7100 dlc_UInt_max ) )
                (assert (= v7100 v3043 ) )
                (declare-fun v7101 () UInt )
                (assert (<= 0 v7101 ) )
                (assert (<= v7101 dlc_UInt_max ) )
                (assert (= v7101 v3043 ) )
                (declare-fun v7102 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7102 0 ) ) ) (<= 0 (T2_elem1 (select v7102 0 ) ) ) ) )
                (assert (= v7102 v6206 ) )
                (declare-fun v7103 () UInt )
                (assert (<= 0 v7103 ) )
                (assert (<= v7103 dlc_UInt_max ) )
                (assert (= v7103 v6152 ) )
                (declare-fun v7104 () Bool )
                (assert true )
                (assert (= v7104 (= v7103 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7104 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7034 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7034 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7035 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7035 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7106 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7106 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7106 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7106 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7106 ) ) ) ) (<= 0 (T18_offers v7106 ) ) ) )
                (assert (= v7106 v6727 ) )
                (declare-fun v7107 () UInt )
                (assert (<= 0 v7107 ) )
                (assert (<= v7107 dlc_UInt_max ) )
                (assert (= v7107 v3423 ) )
                (declare-fun v7108 () UInt )
                (assert (<= 0 v7108 ) )
                (assert (<= v7108 dlc_UInt_max ) )
                (assert (= v7108 v3040 ) )
                (declare-fun v7109 () UInt )
                (assert (<= 0 v7109 ) )
                (assert (<= v7109 dlc_UInt_max ) )
                (assert (= v7109 v3040 ) )
                (declare-fun v7110 () UInt )
                (assert (<= 0 v7110 ) )
                (assert (<= v7110 dlc_UInt_max ) )
                (assert (= v7110 v3424 ) )
                (declare-fun v7111 () UInt )
                (assert (<= 0 v7111 ) )
                (assert (<= v7111 dlc_UInt_max ) )
                (assert (= v7111 v3043 ) )
                (declare-fun v7112 () UInt )
                (assert (<= 0 v7112 ) )
                (assert (<= v7112 dlc_UInt_max ) )
                (assert (= v7112 v3043 ) )
                (declare-fun v7113 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7113 0 ) ) ) (<= 0 (T2_elem1 (select v7113 0 ) ) ) ) )
                (assert (= v7113 v6430 ) )
                (declare-fun v7114 () UInt )
                (assert (<= 0 v7114 ) )
                (assert (<= v7114 dlc_UInt_max ) )
                (assert (= v7114 v6394 ) )
                (declare-fun v7115 () Bool )
                (assert true )
                (assert (= v7115 (= v7114 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7115 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6995 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3182 ) )
            (declare-fun pv_net7116 () UInt )
            (assert (<= 0 pv_net7116 ) )
            (declare-fun pv_tok7118 () Token )
            (assert true )
            (declare-fun pv_ks7117 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7117 pv_tok7118 ) ) )
            (assert (= pv_net7116 0 ) )
            (assert (= (select pv_ks7117 v3019 ) 0 ) )
            (declare-fun v7119 () Address )
            (assert true )
            (declare-fun v7120 () Address )
            (assert true )
            (declare-fun v7121 () Address )
            (assert true )
            (declare-fun v7122 () Address )
            (assert true )
            (declare-fun v7123 () Address )
            (assert true )
            (declare-fun v7124 () Address )
            (assert true )
            (declare-fun v7125 () Address )
            (assert true )
            (declare-fun v7126 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7116 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7117 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7127 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7127 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7127 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7127 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7127 ) ) ) ) (<= 0 (T18_offers v7127 ) ) ) )
                (assert (= v7127 v3641 ) )
                (declare-fun v7128 () UInt )
                (assert (<= 0 v7128 ) )
                (assert (<= v7128 dlc_UInt_max ) )
                (assert (= v7128 v3423 ) )
                (declare-fun v7129 () UInt )
                (assert (<= 0 v7129 ) )
                (assert (<= v7129 dlc_UInt_max ) )
                (assert (= v7129 v3040 ) )
                (declare-fun v7130 () UInt )
                (assert (<= 0 v7130 ) )
                (assert (<= v7130 dlc_UInt_max ) )
                (assert (= v7130 v3040 ) )
                (declare-fun v7131 () UInt )
                (assert (<= 0 v7131 ) )
                (assert (<= v7131 dlc_UInt_max ) )
                (assert (= v7131 v3424 ) )
                (declare-fun v7132 () UInt )
                (assert (<= 0 v7132 ) )
                (assert (<= v7132 dlc_UInt_max ) )
                (assert (= v7132 v3043 ) )
                (declare-fun v7133 () UInt )
                (assert (<= 0 v7133 ) )
                (assert (<= v7133 dlc_UInt_max ) )
                (assert (= v7133 v3043 ) )
                (declare-fun v7134 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7134 0 ) ) ) (<= 0 (T2_elem1 (select v7134 0 ) ) ) ) )
                (assert (= v7134 v3046 ) )
                (declare-fun v7135 () UInt )
                (assert (<= 0 v7135 ) )
                (assert (<= v7135 dlc_UInt_max ) )
                (assert (= v7135 v3047 ) )
                (declare-fun v7136 () Bool )
                (assert true )
                (assert (= v7136 (= v7135 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7136 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7116 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun pv_ks7117 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!14 31891 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun v3897 () T6 (T6_cons 8945 ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun pv_tok7118 () Token Token!val!14 ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!4 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3931 () Bool false ) (define-fun v3930 () Bool true ) (define-fun v3423 () Int 1 ) (define-fun pv_net7116 () Int 0 ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7119 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v7123 () Address Address!val!1 ) (define-fun v7126 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v7122 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun v7124 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v7121 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7120 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun v7125 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7117 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7137 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7137 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7137 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7137 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7137 ) ) ) ) (<= 0 (T18_offers v7137 ) ) ) )
                (assert (= v7137 v4143 ) )
                (declare-fun v7138 () UInt )
                (assert (<= 0 v7138 ) )
                (assert (<= v7138 dlc_UInt_max ) )
                (assert (= v7138 v3423 ) )
                (declare-fun v7139 () UInt )
                (assert (<= 0 v7139 ) )
                (assert (<= v7139 dlc_UInt_max ) )
                (assert (= v7139 v3040 ) )
                (declare-fun v7140 () UInt )
                (assert (<= 0 v7140 ) )
                (assert (<= v7140 dlc_UInt_max ) )
                (assert (= v7140 v3040 ) )
                (declare-fun v7141 () UInt )
                (assert (<= 0 v7141 ) )
                (assert (<= v7141 dlc_UInt_max ) )
                (assert (= v7141 v3424 ) )
                (declare-fun v7142 () UInt )
                (assert (<= 0 v7142 ) )
                (assert (<= v7142 dlc_UInt_max ) )
                (assert (= v7142 v3043 ) )
                (declare-fun v7143 () UInt )
                (assert (<= 0 v7143 ) )
                (assert (<= v7143 dlc_UInt_max ) )
                (assert (= v7143 v3043 ) )
                (declare-fun v7144 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7144 0 ) ) ) (<= 0 (T2_elem1 (select v7144 0 ) ) ) ) )
                (assert (= v7144 v3046 ) )
                (declare-fun v7145 () UInt )
                (assert (<= 0 v7145 ) )
                (assert (<= v7145 dlc_UInt_max ) )
                (assert (= v7145 v3047 ) )
                (declare-fun v7146 () Bool )
                (assert true )
                (assert (= v7146 (= v7145 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7146 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7116 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7117 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7147 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7147 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7147 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7147 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7147 ) ) ) ) (<= 0 (T18_offers v7147 ) ) ) )
                (assert (= v7147 v4646 ) )
                (declare-fun v7148 () UInt )
                (assert (<= 0 v7148 ) )
                (assert (<= v7148 dlc_UInt_max ) )
                (assert (= v7148 v3423 ) )
                (declare-fun v7149 () UInt )
                (assert (<= 0 v7149 ) )
                (assert (<= v7149 dlc_UInt_max ) )
                (assert (= v7149 v3040 ) )
                (declare-fun v7150 () UInt )
                (assert (<= 0 v7150 ) )
                (assert (<= v7150 dlc_UInt_max ) )
                (assert (= v7150 v3040 ) )
                (declare-fun v7151 () UInt )
                (assert (<= 0 v7151 ) )
                (assert (<= v7151 dlc_UInt_max ) )
                (assert (= v7151 v3424 ) )
                (declare-fun v7152 () UInt )
                (assert (<= 0 v7152 ) )
                (assert (<= v7152 dlc_UInt_max ) )
                (assert (= v7152 v3043 ) )
                (declare-fun v7153 () UInt )
                (assert (<= 0 v7153 ) )
                (assert (<= v7153 dlc_UInt_max ) )
                (assert (= v7153 v3043 ) )
                (declare-fun v7154 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7154 0 ) ) ) (<= 0 (T2_elem1 (select v7154 0 ) ) ) ) )
                (assert (= v7154 v3046 ) )
                (declare-fun v7155 () UInt )
                (assert (<= 0 v7155 ) )
                (assert (<= v7155 dlc_UInt_max ) )
                (assert (= v7155 v3047 ) )
                (declare-fun v7156 () Bool )
                (assert true )
                (assert (= v7156 (= v7155 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7156 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7116 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7117 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7157 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7157 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7157 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7157 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7157 ) ) ) ) (<= 0 (T18_offers v7157 ) ) ) )
                (assert (= v7157 v5149 ) )
                (declare-fun v7158 () UInt )
                (assert (<= 0 v7158 ) )
                (assert (<= v7158 dlc_UInt_max ) )
                (assert (= v7158 v3423 ) )
                (declare-fun v7159 () UInt )
                (assert (<= 0 v7159 ) )
                (assert (<= v7159 dlc_UInt_max ) )
                (assert (= v7159 v3040 ) )
                (declare-fun v7160 () UInt )
                (assert (<= 0 v7160 ) )
                (assert (<= v7160 dlc_UInt_max ) )
                (assert (= v7160 v3040 ) )
                (declare-fun v7161 () UInt )
                (assert (<= 0 v7161 ) )
                (assert (<= v7161 dlc_UInt_max ) )
                (assert (= v7161 v3424 ) )
                (declare-fun v7162 () UInt )
                (assert (<= 0 v7162 ) )
                (assert (<= v7162 dlc_UInt_max ) )
                (assert (= v7162 v3043 ) )
                (declare-fun v7163 () UInt )
                (assert (<= 0 v7163 ) )
                (assert (<= v7163 dlc_UInt_max ) )
                (assert (= v7163 v3043 ) )
                (declare-fun v7164 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7164 0 ) ) ) (<= 0 (T2_elem1 (select v7164 0 ) ) ) ) )
                (assert (= v7164 v3046 ) )
                (declare-fun v7165 () UInt )
                (assert (<= 0 v7165 ) )
                (assert (<= v7165 dlc_UInt_max ) )
                (assert (= v7165 v3047 ) )
                (declare-fun v7166 () Bool )
                (assert true )
                (assert (= v7166 (= v7165 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7166 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7116 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7117 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7167 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7167 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7167 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7167 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7167 ) ) ) ) (<= 0 (T18_offers v7167 ) ) ) )
                (assert (= v7167 v5650 ) )
                (declare-fun v7168 () UInt )
                (assert (<= 0 v7168 ) )
                (assert (<= v7168 dlc_UInt_max ) )
                (assert (= v7168 v3423 ) )
                (declare-fun v7169 () UInt )
                (assert (<= 0 v7169 ) )
                (assert (<= v7169 dlc_UInt_max ) )
                (assert (= v7169 v3040 ) )
                (declare-fun v7170 () UInt )
                (assert (<= 0 v7170 ) )
                (assert (<= v7170 dlc_UInt_max ) )
                (assert (= v7170 v3040 ) )
                (declare-fun v7171 () UInt )
                (assert (<= 0 v7171 ) )
                (assert (<= v7171 dlc_UInt_max ) )
                (assert (= v7171 v3424 ) )
                (declare-fun v7172 () UInt )
                (assert (<= 0 v7172 ) )
                (assert (<= v7172 dlc_UInt_max ) )
                (assert (= v7172 v3043 ) )
                (declare-fun v7173 () UInt )
                (assert (<= 0 v7173 ) )
                (assert (<= v7173 dlc_UInt_max ) )
                (assert (= v7173 v3043 ) )
                (declare-fun v7174 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7174 0 ) ) ) (<= 0 (T2_elem1 (select v7174 0 ) ) ) ) )
                (assert (= v7174 v3046 ) )
                (declare-fun v7175 () UInt )
                (assert (<= 0 v7175 ) )
                (assert (<= v7175 dlc_UInt_max ) )
                (assert (= v7175 v3047 ) )
                (declare-fun v7176 () Bool )
                (assert true )
                (assert (= v7176 (= v7175 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7176 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7116 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7117 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7177 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7177 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7177 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7177 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7177 ) ) ) ) (<= 0 (T18_offers v7177 ) ) ) )
                (assert (= v7177 v6217 ) )
                (declare-fun v7178 () UInt )
                (assert (<= 0 v7178 ) )
                (assert (<= v7178 dlc_UInt_max ) )
                (assert (= v7178 v3423 ) )
                (declare-fun v7179 () UInt )
                (assert (<= 0 v7179 ) )
                (assert (<= v7179 dlc_UInt_max ) )
                (assert (= v7179 v3040 ) )
                (declare-fun v7180 () UInt )
                (assert (<= 0 v7180 ) )
                (assert (<= v7180 dlc_UInt_max ) )
                (assert (= v7180 v3040 ) )
                (declare-fun v7181 () UInt )
                (assert (<= 0 v7181 ) )
                (assert (<= v7181 dlc_UInt_max ) )
                (assert (= v7181 v3424 ) )
                (declare-fun v7182 () UInt )
                (assert (<= 0 v7182 ) )
                (assert (<= v7182 dlc_UInt_max ) )
                (assert (= v7182 v3043 ) )
                (declare-fun v7183 () UInt )
                (assert (<= 0 v7183 ) )
                (assert (<= v7183 dlc_UInt_max ) )
                (assert (= v7183 v3043 ) )
                (declare-fun v7184 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7184 0 ) ) ) (<= 0 (T2_elem1 (select v7184 0 ) ) ) ) )
                (assert (= v7184 v6206 ) )
                (declare-fun v7185 () UInt )
                (assert (<= 0 v7185 ) )
                (assert (<= v7185 dlc_UInt_max ) )
                (assert (= v7185 v6152 ) )
                (declare-fun v7186 () Bool )
                (assert true )
                (assert (= v7186 (= v7185 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7186 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7116 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7116 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7117 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7117 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7188 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7188 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7188 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7188 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7188 ) ) ) ) (<= 0 (T18_offers v7188 ) ) ) )
                (assert (= v7188 v6727 ) )
                (declare-fun v7189 () UInt )
                (assert (<= 0 v7189 ) )
                (assert (<= v7189 dlc_UInt_max ) )
                (assert (= v7189 v3423 ) )
                (declare-fun v7190 () UInt )
                (assert (<= 0 v7190 ) )
                (assert (<= v7190 dlc_UInt_max ) )
                (assert (= v7190 v3040 ) )
                (declare-fun v7191 () UInt )
                (assert (<= 0 v7191 ) )
                (assert (<= v7191 dlc_UInt_max ) )
                (assert (= v7191 v3040 ) )
                (declare-fun v7192 () UInt )
                (assert (<= 0 v7192 ) )
                (assert (<= v7192 dlc_UInt_max ) )
                (assert (= v7192 v3424 ) )
                (declare-fun v7193 () UInt )
                (assert (<= 0 v7193 ) )
                (assert (<= v7193 dlc_UInt_max ) )
                (assert (= v7193 v3043 ) )
                (declare-fun v7194 () UInt )
                (assert (<= 0 v7194 ) )
                (assert (<= v7194 dlc_UInt_max ) )
                (assert (= v7194 v3043 ) )
                (declare-fun v7195 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7195 0 ) ) ) (<= 0 (T2_elem1 (select v7195 0 ) ) ) ) )
                (assert (= v7195 v6430 ) )
                (declare-fun v7196 () UInt )
                (assert (<= 0 v7196 ) )
                (assert (<= v7196 dlc_UInt_max ) )
                (assert (= v7196 v6394 ) )
                (declare-fun v7197 () Bool )
                (assert true )
                (assert (= v7197 (= v7196 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7197 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6996 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3134 ) )
            (declare-fun pv_net7198 () UInt )
            (assert (<= 0 pv_net7198 ) )
            (declare-fun pv_tok7200 () Token )
            (assert true )
            (declare-fun pv_ks7199 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7199 pv_tok7200 ) ) )
            (assert (= pv_net7198 0 ) )
            (assert (= (select pv_ks7199 v3019 ) 0 ) )
            (declare-fun v7201 () Address )
            (assert true )
            (declare-fun v7202 () Address )
            (assert true )
            (declare-fun v7203 () Address )
            (assert true )
            (declare-fun v7204 () Address )
            (assert true )
            (declare-fun v7205 () Address )
            (assert true )
            (declare-fun v7206 () Address )
            (assert true )
            (declare-fun v7207 () Address )
            (assert true )
            (declare-fun v7208 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7198 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7199 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7209 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7209 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7209 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7209 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7209 ) ) ) ) (<= 0 (T18_offers v7209 ) ) ) )
                (assert (= v7209 v3641 ) )
                (declare-fun v7210 () UInt )
                (assert (<= 0 v7210 ) )
                (assert (<= v7210 dlc_UInt_max ) )
                (assert (= v7210 v3423 ) )
                (declare-fun v7211 () UInt )
                (assert (<= 0 v7211 ) )
                (assert (<= v7211 dlc_UInt_max ) )
                (assert (= v7211 v3040 ) )
                (declare-fun v7212 () UInt )
                (assert (<= 0 v7212 ) )
                (assert (<= v7212 dlc_UInt_max ) )
                (assert (= v7212 v3040 ) )
                (declare-fun v7213 () UInt )
                (assert (<= 0 v7213 ) )
                (assert (<= v7213 dlc_UInt_max ) )
                (assert (= v7213 v3424 ) )
                (declare-fun v7214 () UInt )
                (assert (<= 0 v7214 ) )
                (assert (<= v7214 dlc_UInt_max ) )
                (assert (= v7214 v3043 ) )
                (declare-fun v7215 () UInt )
                (assert (<= 0 v7215 ) )
                (assert (<= v7215 dlc_UInt_max ) )
                (assert (= v7215 v3043 ) )
                (declare-fun v7216 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7216 0 ) ) ) (<= 0 (T2_elem1 (select v7216 0 ) ) ) ) )
                (assert (= v7216 v3046 ) )
                (declare-fun v7217 () UInt )
                (assert (<= 0 v7217 ) )
                (assert (<= v7217 dlc_UInt_max ) )
                (assert (= v7217 v3047 ) )
                (declare-fun v7218 () Bool )
                (assert true )
                (assert (= v7218 (= v7217 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7218 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7198 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7199 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7219 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7219 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7219 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7219 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7219 ) ) ) ) (<= 0 (T18_offers v7219 ) ) ) )
                (assert (= v7219 v4143 ) )
                (declare-fun v7220 () UInt )
                (assert (<= 0 v7220 ) )
                (assert (<= v7220 dlc_UInt_max ) )
                (assert (= v7220 v3423 ) )
                (declare-fun v7221 () UInt )
                (assert (<= 0 v7221 ) )
                (assert (<= v7221 dlc_UInt_max ) )
                (assert (= v7221 v3040 ) )
                (declare-fun v7222 () UInt )
                (assert (<= 0 v7222 ) )
                (assert (<= v7222 dlc_UInt_max ) )
                (assert (= v7222 v3040 ) )
                (declare-fun v7223 () UInt )
                (assert (<= 0 v7223 ) )
                (assert (<= v7223 dlc_UInt_max ) )
                (assert (= v7223 v3424 ) )
                (declare-fun v7224 () UInt )
                (assert (<= 0 v7224 ) )
                (assert (<= v7224 dlc_UInt_max ) )
                (assert (= v7224 v3043 ) )
                (declare-fun v7225 () UInt )
                (assert (<= 0 v7225 ) )
                (assert (<= v7225 dlc_UInt_max ) )
                (assert (= v7225 v3043 ) )
                (declare-fun v7226 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7226 0 ) ) ) (<= 0 (T2_elem1 (select v7226 0 ) ) ) ) )
                (assert (= v7226 v3046 ) )
                (declare-fun v7227 () UInt )
                (assert (<= 0 v7227 ) )
                (assert (<= v7227 dlc_UInt_max ) )
                (assert (= v7227 v3047 ) )
                (declare-fun v7228 () Bool )
                (assert true )
                (assert (= v7228 (= v7227 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7228 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7198 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_ks7199 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!14 31891 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun pv_tok7200 () Token Token!val!14 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!4 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4420 () Bool false ) (define-fun v4429 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v4422 () Bool false ) (define-fun v4421 () Bool true ) (define-fun v3423 () Int 1 ) (define-fun pv_net7198 () Int 0 ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7201 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v7206 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v7208 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7203 () Address Address!val!1 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v7204 () Address Address!val!1 ) (define-fun v7207 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7202 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun v7205 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7199 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7229 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7229 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7229 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7229 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7229 ) ) ) ) (<= 0 (T18_offers v7229 ) ) ) )
                (assert (= v7229 v4646 ) )
                (declare-fun v7230 () UInt )
                (assert (<= 0 v7230 ) )
                (assert (<= v7230 dlc_UInt_max ) )
                (assert (= v7230 v3423 ) )
                (declare-fun v7231 () UInt )
                (assert (<= 0 v7231 ) )
                (assert (<= v7231 dlc_UInt_max ) )
                (assert (= v7231 v3040 ) )
                (declare-fun v7232 () UInt )
                (assert (<= 0 v7232 ) )
                (assert (<= v7232 dlc_UInt_max ) )
                (assert (= v7232 v3040 ) )
                (declare-fun v7233 () UInt )
                (assert (<= 0 v7233 ) )
                (assert (<= v7233 dlc_UInt_max ) )
                (assert (= v7233 v3424 ) )
                (declare-fun v7234 () UInt )
                (assert (<= 0 v7234 ) )
                (assert (<= v7234 dlc_UInt_max ) )
                (assert (= v7234 v3043 ) )
                (declare-fun v7235 () UInt )
                (assert (<= 0 v7235 ) )
                (assert (<= v7235 dlc_UInt_max ) )
                (assert (= v7235 v3043 ) )
                (declare-fun v7236 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7236 0 ) ) ) (<= 0 (T2_elem1 (select v7236 0 ) ) ) ) )
                (assert (= v7236 v3046 ) )
                (declare-fun v7237 () UInt )
                (assert (<= 0 v7237 ) )
                (assert (<= v7237 dlc_UInt_max ) )
                (assert (= v7237 v3047 ) )
                (declare-fun v7238 () Bool )
                (assert true )
                (assert (= v7238 (= v7237 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7238 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7198 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7199 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7239 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7239 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7239 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7239 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7239 ) ) ) ) (<= 0 (T18_offers v7239 ) ) ) )
                (assert (= v7239 v5149 ) )
                (declare-fun v7240 () UInt )
                (assert (<= 0 v7240 ) )
                (assert (<= v7240 dlc_UInt_max ) )
                (assert (= v7240 v3423 ) )
                (declare-fun v7241 () UInt )
                (assert (<= 0 v7241 ) )
                (assert (<= v7241 dlc_UInt_max ) )
                (assert (= v7241 v3040 ) )
                (declare-fun v7242 () UInt )
                (assert (<= 0 v7242 ) )
                (assert (<= v7242 dlc_UInt_max ) )
                (assert (= v7242 v3040 ) )
                (declare-fun v7243 () UInt )
                (assert (<= 0 v7243 ) )
                (assert (<= v7243 dlc_UInt_max ) )
                (assert (= v7243 v3424 ) )
                (declare-fun v7244 () UInt )
                (assert (<= 0 v7244 ) )
                (assert (<= v7244 dlc_UInt_max ) )
                (assert (= v7244 v3043 ) )
                (declare-fun v7245 () UInt )
                (assert (<= 0 v7245 ) )
                (assert (<= v7245 dlc_UInt_max ) )
                (assert (= v7245 v3043 ) )
                (declare-fun v7246 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7246 0 ) ) ) (<= 0 (T2_elem1 (select v7246 0 ) ) ) ) )
                (assert (= v7246 v3046 ) )
                (declare-fun v7247 () UInt )
                (assert (<= 0 v7247 ) )
                (assert (<= v7247 dlc_UInt_max ) )
                (assert (= v7247 v3047 ) )
                (declare-fun v7248 () Bool )
                (assert true )
                (assert (= v7248 (= v7247 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7248 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7198 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7199 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7249 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7249 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7249 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7249 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7249 ) ) ) ) (<= 0 (T18_offers v7249 ) ) ) )
                (assert (= v7249 v5650 ) )
                (declare-fun v7250 () UInt )
                (assert (<= 0 v7250 ) )
                (assert (<= v7250 dlc_UInt_max ) )
                (assert (= v7250 v3423 ) )
                (declare-fun v7251 () UInt )
                (assert (<= 0 v7251 ) )
                (assert (<= v7251 dlc_UInt_max ) )
                (assert (= v7251 v3040 ) )
                (declare-fun v7252 () UInt )
                (assert (<= 0 v7252 ) )
                (assert (<= v7252 dlc_UInt_max ) )
                (assert (= v7252 v3040 ) )
                (declare-fun v7253 () UInt )
                (assert (<= 0 v7253 ) )
                (assert (<= v7253 dlc_UInt_max ) )
                (assert (= v7253 v3424 ) )
                (declare-fun v7254 () UInt )
                (assert (<= 0 v7254 ) )
                (assert (<= v7254 dlc_UInt_max ) )
                (assert (= v7254 v3043 ) )
                (declare-fun v7255 () UInt )
                (assert (<= 0 v7255 ) )
                (assert (<= v7255 dlc_UInt_max ) )
                (assert (= v7255 v3043 ) )
                (declare-fun v7256 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7256 0 ) ) ) (<= 0 (T2_elem1 (select v7256 0 ) ) ) ) )
                (assert (= v7256 v3046 ) )
                (declare-fun v7257 () UInt )
                (assert (<= 0 v7257 ) )
                (assert (<= v7257 dlc_UInt_max ) )
                (assert (= v7257 v3047 ) )
                (declare-fun v7258 () Bool )
                (assert true )
                (assert (= v7258 (= v7257 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7258 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7198 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7199 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7259 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7259 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7259 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7259 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7259 ) ) ) ) (<= 0 (T18_offers v7259 ) ) ) )
                (assert (= v7259 v6217 ) )
                (declare-fun v7260 () UInt )
                (assert (<= 0 v7260 ) )
                (assert (<= v7260 dlc_UInt_max ) )
                (assert (= v7260 v3423 ) )
                (declare-fun v7261 () UInt )
                (assert (<= 0 v7261 ) )
                (assert (<= v7261 dlc_UInt_max ) )
                (assert (= v7261 v3040 ) )
                (declare-fun v7262 () UInt )
                (assert (<= 0 v7262 ) )
                (assert (<= v7262 dlc_UInt_max ) )
                (assert (= v7262 v3040 ) )
                (declare-fun v7263 () UInt )
                (assert (<= 0 v7263 ) )
                (assert (<= v7263 dlc_UInt_max ) )
                (assert (= v7263 v3424 ) )
                (declare-fun v7264 () UInt )
                (assert (<= 0 v7264 ) )
                (assert (<= v7264 dlc_UInt_max ) )
                (assert (= v7264 v3043 ) )
                (declare-fun v7265 () UInt )
                (assert (<= 0 v7265 ) )
                (assert (<= v7265 dlc_UInt_max ) )
                (assert (= v7265 v3043 ) )
                (declare-fun v7266 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7266 0 ) ) ) (<= 0 (T2_elem1 (select v7266 0 ) ) ) ) )
                (assert (= v7266 v6206 ) )
                (declare-fun v7267 () UInt )
                (assert (<= 0 v7267 ) )
                (assert (<= v7267 dlc_UInt_max ) )
                (assert (= v7267 v6152 ) )
                (declare-fun v7268 () Bool )
                (assert true )
                (assert (= v7268 (= v7267 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7268 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7198 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7198 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7199 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7199 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7270 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7270 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7270 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7270 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7270 ) ) ) ) (<= 0 (T18_offers v7270 ) ) ) )
                (assert (= v7270 v6727 ) )
                (declare-fun v7271 () UInt )
                (assert (<= 0 v7271 ) )
                (assert (<= v7271 dlc_UInt_max ) )
                (assert (= v7271 v3423 ) )
                (declare-fun v7272 () UInt )
                (assert (<= 0 v7272 ) )
                (assert (<= v7272 dlc_UInt_max ) )
                (assert (= v7272 v3040 ) )
                (declare-fun v7273 () UInt )
                (assert (<= 0 v7273 ) )
                (assert (<= v7273 dlc_UInt_max ) )
                (assert (= v7273 v3040 ) )
                (declare-fun v7274 () UInt )
                (assert (<= 0 v7274 ) )
                (assert (<= v7274 dlc_UInt_max ) )
                (assert (= v7274 v3424 ) )
                (declare-fun v7275 () UInt )
                (assert (<= 0 v7275 ) )
                (assert (<= v7275 dlc_UInt_max ) )
                (assert (= v7275 v3043 ) )
                (declare-fun v7276 () UInt )
                (assert (<= 0 v7276 ) )
                (assert (<= v7276 dlc_UInt_max ) )
                (assert (= v7276 v3043 ) )
                (declare-fun v7277 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7277 0 ) ) ) (<= 0 (T2_elem1 (select v7277 0 ) ) ) ) )
                (assert (= v7277 v6430 ) )
                (declare-fun v7278 () UInt )
                (assert (<= 0 v7278 ) )
                (assert (<= v7278 dlc_UInt_max ) )
                (assert (= v7278 v6394 ) )
                (declare-fun v7279 () Bool )
                (assert true )
                (assert (= v7279 (= v7278 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7279 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6997 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3110 ) )
            (declare-fun pv_net7280 () UInt )
            (assert (<= 0 pv_net7280 ) )
            (declare-fun pv_tok7282 () Token )
            (assert true )
            (declare-fun pv_ks7281 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7281 pv_tok7282 ) ) )
            (assert (= pv_net7280 0 ) )
            (assert (= (select pv_ks7281 v3019 ) 0 ) )
            (declare-fun v7283 () Address )
            (assert true )
            (declare-fun v7284 () Address )
            (assert true )
            (declare-fun v7285 () Address )
            (assert true )
            (declare-fun v7286 () Address )
            (assert true )
            (declare-fun v7287 () Address )
            (assert true )
            (declare-fun v7288 () Address )
            (assert true )
            (declare-fun v7289 () Address )
            (assert true )
            (declare-fun v7290 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7280 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7281 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7291 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7291 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7291 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7291 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7291 ) ) ) ) (<= 0 (T18_offers v7291 ) ) ) )
                (assert (= v7291 v3641 ) )
                (declare-fun v7292 () UInt )
                (assert (<= 0 v7292 ) )
                (assert (<= v7292 dlc_UInt_max ) )
                (assert (= v7292 v3423 ) )
                (declare-fun v7293 () UInt )
                (assert (<= 0 v7293 ) )
                (assert (<= v7293 dlc_UInt_max ) )
                (assert (= v7293 v3040 ) )
                (declare-fun v7294 () UInt )
                (assert (<= 0 v7294 ) )
                (assert (<= v7294 dlc_UInt_max ) )
                (assert (= v7294 v3040 ) )
                (declare-fun v7295 () UInt )
                (assert (<= 0 v7295 ) )
                (assert (<= v7295 dlc_UInt_max ) )
                (assert (= v7295 v3424 ) )
                (declare-fun v7296 () UInt )
                (assert (<= 0 v7296 ) )
                (assert (<= v7296 dlc_UInt_max ) )
                (assert (= v7296 v3043 ) )
                (declare-fun v7297 () UInt )
                (assert (<= 0 v7297 ) )
                (assert (<= v7297 dlc_UInt_max ) )
                (assert (= v7297 v3043 ) )
                (declare-fun v7298 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7298 0 ) ) ) (<= 0 (T2_elem1 (select v7298 0 ) ) ) ) )
                (assert (= v7298 v3046 ) )
                (declare-fun v7299 () UInt )
                (assert (<= 0 v7299 ) )
                (assert (<= v7299 dlc_UInt_max ) )
                (assert (= v7299 v3047 ) )
                (declare-fun v7300 () Bool )
                (assert true )
                (assert (= v7300 (= v7299 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7300 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7280 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7281 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7301 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7301 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7301 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7301 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7301 ) ) ) ) (<= 0 (T18_offers v7301 ) ) ) )
                (assert (= v7301 v4143 ) )
                (declare-fun v7302 () UInt )
                (assert (<= 0 v7302 ) )
                (assert (<= v7302 dlc_UInt_max ) )
                (assert (= v7302 v3423 ) )
                (declare-fun v7303 () UInt )
                (assert (<= 0 v7303 ) )
                (assert (<= v7303 dlc_UInt_max ) )
                (assert (= v7303 v3040 ) )
                (declare-fun v7304 () UInt )
                (assert (<= 0 v7304 ) )
                (assert (<= v7304 dlc_UInt_max ) )
                (assert (= v7304 v3040 ) )
                (declare-fun v7305 () UInt )
                (assert (<= 0 v7305 ) )
                (assert (<= v7305 dlc_UInt_max ) )
                (assert (= v7305 v3424 ) )
                (declare-fun v7306 () UInt )
                (assert (<= 0 v7306 ) )
                (assert (<= v7306 dlc_UInt_max ) )
                (assert (= v7306 v3043 ) )
                (declare-fun v7307 () UInt )
                (assert (<= 0 v7307 ) )
                (assert (<= v7307 dlc_UInt_max ) )
                (assert (= v7307 v3043 ) )
                (declare-fun v7308 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7308 0 ) ) ) (<= 0 (T2_elem1 (select v7308 0 ) ) ) ) )
                (assert (= v7308 v3046 ) )
                (declare-fun v7309 () UInt )
                (assert (<= 0 v7309 ) )
                (assert (<= v7309 dlc_UInt_max ) )
                (assert (= v7309 v3047 ) )
                (declare-fun v7310 () Bool )
                (assert true )
                (assert (= v7310 (= v7309 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7310 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7280 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7281 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7311 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7311 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7311 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7311 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7311 ) ) ) ) (<= 0 (T18_offers v7311 ) ) ) )
                (assert (= v7311 v4646 ) )
                (declare-fun v7312 () UInt )
                (assert (<= 0 v7312 ) )
                (assert (<= v7312 dlc_UInt_max ) )
                (assert (= v7312 v3423 ) )
                (declare-fun v7313 () UInt )
                (assert (<= 0 v7313 ) )
                (assert (<= v7313 dlc_UInt_max ) )
                (assert (= v7313 v3040 ) )
                (declare-fun v7314 () UInt )
                (assert (<= 0 v7314 ) )
                (assert (<= v7314 dlc_UInt_max ) )
                (assert (= v7314 v3040 ) )
                (declare-fun v7315 () UInt )
                (assert (<= 0 v7315 ) )
                (assert (<= v7315 dlc_UInt_max ) )
                (assert (= v7315 v3424 ) )
                (declare-fun v7316 () UInt )
                (assert (<= 0 v7316 ) )
                (assert (<= v7316 dlc_UInt_max ) )
                (assert (= v7316 v3043 ) )
                (declare-fun v7317 () UInt )
                (assert (<= 0 v7317 ) )
                (assert (<= v7317 dlc_UInt_max ) )
                (assert (= v7317 v3043 ) )
                (declare-fun v7318 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7318 0 ) ) ) (<= 0 (T2_elem1 (select v7318 0 ) ) ) ) )
                (assert (= v7318 v3046 ) )
                (declare-fun v7319 () UInt )
                (assert (<= 0 v7319 ) )
                (assert (<= v7319 dlc_UInt_max ) )
                (assert (= v7319 v3047 ) )
                (declare-fun v7320 () Bool )
                (assert true )
                (assert (= v7320 (= v7319 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7320 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7280 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun pv_tok7282 () Token Token!val!14 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7281 () (Array Token Int ) (store ((as const (Array Token Int ) ) 31891 ) Token!val!3 0 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!4 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v4914 () Bool false ) (define-fun v4913 () Bool true ) (define-fun v3423 () Int 1 ) (define-fun pv_net7280 () Int 0 ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v7288 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun v7286 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v7283 () Address Address!val!1 ) (define-fun v7284 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v7287 () Address Address!val!1 ) (define-fun v7290 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun v7289 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7285 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7281 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7321 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7321 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7321 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7321 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7321 ) ) ) ) (<= 0 (T18_offers v7321 ) ) ) )
                (assert (= v7321 v5149 ) )
                (declare-fun v7322 () UInt )
                (assert (<= 0 v7322 ) )
                (assert (<= v7322 dlc_UInt_max ) )
                (assert (= v7322 v3423 ) )
                (declare-fun v7323 () UInt )
                (assert (<= 0 v7323 ) )
                (assert (<= v7323 dlc_UInt_max ) )
                (assert (= v7323 v3040 ) )
                (declare-fun v7324 () UInt )
                (assert (<= 0 v7324 ) )
                (assert (<= v7324 dlc_UInt_max ) )
                (assert (= v7324 v3040 ) )
                (declare-fun v7325 () UInt )
                (assert (<= 0 v7325 ) )
                (assert (<= v7325 dlc_UInt_max ) )
                (assert (= v7325 v3424 ) )
                (declare-fun v7326 () UInt )
                (assert (<= 0 v7326 ) )
                (assert (<= v7326 dlc_UInt_max ) )
                (assert (= v7326 v3043 ) )
                (declare-fun v7327 () UInt )
                (assert (<= 0 v7327 ) )
                (assert (<= v7327 dlc_UInt_max ) )
                (assert (= v7327 v3043 ) )
                (declare-fun v7328 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7328 0 ) ) ) (<= 0 (T2_elem1 (select v7328 0 ) ) ) ) )
                (assert (= v7328 v3046 ) )
                (declare-fun v7329 () UInt )
                (assert (<= 0 v7329 ) )
                (assert (<= v7329 dlc_UInt_max ) )
                (assert (= v7329 v3047 ) )
                (declare-fun v7330 () Bool )
                (assert true )
                (assert (= v7330 (= v7329 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7330 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7280 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7281 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7331 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7331 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7331 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7331 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7331 ) ) ) ) (<= 0 (T18_offers v7331 ) ) ) )
                (assert (= v7331 v5650 ) )
                (declare-fun v7332 () UInt )
                (assert (<= 0 v7332 ) )
                (assert (<= v7332 dlc_UInt_max ) )
                (assert (= v7332 v3423 ) )
                (declare-fun v7333 () UInt )
                (assert (<= 0 v7333 ) )
                (assert (<= v7333 dlc_UInt_max ) )
                (assert (= v7333 v3040 ) )
                (declare-fun v7334 () UInt )
                (assert (<= 0 v7334 ) )
                (assert (<= v7334 dlc_UInt_max ) )
                (assert (= v7334 v3040 ) )
                (declare-fun v7335 () UInt )
                (assert (<= 0 v7335 ) )
                (assert (<= v7335 dlc_UInt_max ) )
                (assert (= v7335 v3424 ) )
                (declare-fun v7336 () UInt )
                (assert (<= 0 v7336 ) )
                (assert (<= v7336 dlc_UInt_max ) )
                (assert (= v7336 v3043 ) )
                (declare-fun v7337 () UInt )
                (assert (<= 0 v7337 ) )
                (assert (<= v7337 dlc_UInt_max ) )
                (assert (= v7337 v3043 ) )
                (declare-fun v7338 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7338 0 ) ) ) (<= 0 (T2_elem1 (select v7338 0 ) ) ) ) )
                (assert (= v7338 v3046 ) )
                (declare-fun v7339 () UInt )
                (assert (<= 0 v7339 ) )
                (assert (<= v7339 dlc_UInt_max ) )
                (assert (= v7339 v3047 ) )
                (declare-fun v7340 () Bool )
                (assert true )
                (assert (= v7340 (= v7339 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7340 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7280 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7281 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7341 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7341 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7341 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7341 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7341 ) ) ) ) (<= 0 (T18_offers v7341 ) ) ) )
                (assert (= v7341 v6217 ) )
                (declare-fun v7342 () UInt )
                (assert (<= 0 v7342 ) )
                (assert (<= v7342 dlc_UInt_max ) )
                (assert (= v7342 v3423 ) )
                (declare-fun v7343 () UInt )
                (assert (<= 0 v7343 ) )
                (assert (<= v7343 dlc_UInt_max ) )
                (assert (= v7343 v3040 ) )
                (declare-fun v7344 () UInt )
                (assert (<= 0 v7344 ) )
                (assert (<= v7344 dlc_UInt_max ) )
                (assert (= v7344 v3040 ) )
                (declare-fun v7345 () UInt )
                (assert (<= 0 v7345 ) )
                (assert (<= v7345 dlc_UInt_max ) )
                (assert (= v7345 v3424 ) )
                (declare-fun v7346 () UInt )
                (assert (<= 0 v7346 ) )
                (assert (<= v7346 dlc_UInt_max ) )
                (assert (= v7346 v3043 ) )
                (declare-fun v7347 () UInt )
                (assert (<= 0 v7347 ) )
                (assert (<= v7347 dlc_UInt_max ) )
                (assert (= v7347 v3043 ) )
                (declare-fun v7348 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7348 0 ) ) ) (<= 0 (T2_elem1 (select v7348 0 ) ) ) ) )
                (assert (= v7348 v6206 ) )
                (declare-fun v7349 () UInt )
                (assert (<= 0 v7349 ) )
                (assert (<= v7349 dlc_UInt_max ) )
                (assert (= v7349 v6152 ) )
                (declare-fun v7350 () Bool )
                (assert true )
                (assert (= v7350 (= v7349 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7350 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7280 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7280 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7281 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7281 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7352 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7352 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7352 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7352 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7352 ) ) ) ) (<= 0 (T18_offers v7352 ) ) ) )
                (assert (= v7352 v6727 ) )
                (declare-fun v7353 () UInt )
                (assert (<= 0 v7353 ) )
                (assert (<= v7353 dlc_UInt_max ) )
                (assert (= v7353 v3423 ) )
                (declare-fun v7354 () UInt )
                (assert (<= 0 v7354 ) )
                (assert (<= v7354 dlc_UInt_max ) )
                (assert (= v7354 v3040 ) )
                (declare-fun v7355 () UInt )
                (assert (<= 0 v7355 ) )
                (assert (<= v7355 dlc_UInt_max ) )
                (assert (= v7355 v3040 ) )
                (declare-fun v7356 () UInt )
                (assert (<= 0 v7356 ) )
                (assert (<= v7356 dlc_UInt_max ) )
                (assert (= v7356 v3424 ) )
                (declare-fun v7357 () UInt )
                (assert (<= 0 v7357 ) )
                (assert (<= v7357 dlc_UInt_max ) )
                (assert (= v7357 v3043 ) )
                (declare-fun v7358 () UInt )
                (assert (<= 0 v7358 ) )
                (assert (<= v7358 dlc_UInt_max ) )
                (assert (= v7358 v3043 ) )
                (declare-fun v7359 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7359 0 ) ) ) (<= 0 (T2_elem1 (select v7359 0 ) ) ) ) )
                (assert (= v7359 v6430 ) )
                (declare-fun v7360 () UInt )
                (assert (<= 0 v7360 ) )
                (assert (<= v7360 dlc_UInt_max ) )
                (assert (= v7360 v6394 ) )
                (declare-fun v7361 () Bool )
                (assert true )
                (assert (= v7361 (= v7360 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7361 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6998 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3159 ) )
            (declare-fun pv_net7362 () UInt )
            (assert (<= 0 pv_net7362 ) )
            (declare-fun pv_tok7364 () Token )
            (assert true )
            (declare-fun pv_ks7363 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7363 pv_tok7364 ) ) )
            (assert (= pv_net7362 0 ) )
            (assert (= (select pv_ks7363 v3019 ) 0 ) )
            (declare-fun v7365 () Address )
            (assert true )
            (declare-fun v7366 () Address )
            (assert true )
            (declare-fun v7367 () Address )
            (assert true )
            (declare-fun v7368 () Address )
            (assert true )
            (declare-fun v7369 () Address )
            (assert true )
            (declare-fun v7370 () Address )
            (assert true )
            (declare-fun v7371 () Address )
            (assert true )
            (declare-fun v7372 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7362 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7363 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7373 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7373 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7373 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7373 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7373 ) ) ) ) (<= 0 (T18_offers v7373 ) ) ) )
                (assert (= v7373 v3641 ) )
                (declare-fun v7374 () UInt )
                (assert (<= 0 v7374 ) )
                (assert (<= v7374 dlc_UInt_max ) )
                (assert (= v7374 v3423 ) )
                (declare-fun v7375 () UInt )
                (assert (<= 0 v7375 ) )
                (assert (<= v7375 dlc_UInt_max ) )
                (assert (= v7375 v3040 ) )
                (declare-fun v7376 () UInt )
                (assert (<= 0 v7376 ) )
                (assert (<= v7376 dlc_UInt_max ) )
                (assert (= v7376 v3040 ) )
                (declare-fun v7377 () UInt )
                (assert (<= 0 v7377 ) )
                (assert (<= v7377 dlc_UInt_max ) )
                (assert (= v7377 v3424 ) )
                (declare-fun v7378 () UInt )
                (assert (<= 0 v7378 ) )
                (assert (<= v7378 dlc_UInt_max ) )
                (assert (= v7378 v3043 ) )
                (declare-fun v7379 () UInt )
                (assert (<= 0 v7379 ) )
                (assert (<= v7379 dlc_UInt_max ) )
                (assert (= v7379 v3043 ) )
                (declare-fun v7380 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7380 0 ) ) ) (<= 0 (T2_elem1 (select v7380 0 ) ) ) ) )
                (assert (= v7380 v3046 ) )
                (declare-fun v7381 () UInt )
                (assert (<= 0 v7381 ) )
                (assert (<= v7381 dlc_UInt_max ) )
                (assert (= v7381 v3047 ) )
                (declare-fun v7382 () Bool )
                (assert true )
                (assert (= v7382 (= v7381 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7382 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7362 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7363 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7383 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7383 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7383 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7383 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7383 ) ) ) ) (<= 0 (T18_offers v7383 ) ) ) )
                (assert (= v7383 v4143 ) )
                (declare-fun v7384 () UInt )
                (assert (<= 0 v7384 ) )
                (assert (<= v7384 dlc_UInt_max ) )
                (assert (= v7384 v3423 ) )
                (declare-fun v7385 () UInt )
                (assert (<= 0 v7385 ) )
                (assert (<= v7385 dlc_UInt_max ) )
                (assert (= v7385 v3040 ) )
                (declare-fun v7386 () UInt )
                (assert (<= 0 v7386 ) )
                (assert (<= v7386 dlc_UInt_max ) )
                (assert (= v7386 v3040 ) )
                (declare-fun v7387 () UInt )
                (assert (<= 0 v7387 ) )
                (assert (<= v7387 dlc_UInt_max ) )
                (assert (= v7387 v3424 ) )
                (declare-fun v7388 () UInt )
                (assert (<= 0 v7388 ) )
                (assert (<= v7388 dlc_UInt_max ) )
                (assert (= v7388 v3043 ) )
                (declare-fun v7389 () UInt )
                (assert (<= 0 v7389 ) )
                (assert (<= v7389 dlc_UInt_max ) )
                (assert (= v7389 v3043 ) )
                (declare-fun v7390 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7390 0 ) ) ) (<= 0 (T2_elem1 (select v7390 0 ) ) ) ) )
                (assert (= v7390 v3046 ) )
                (declare-fun v7391 () UInt )
                (assert (<= 0 v7391 ) )
                (assert (<= v7391 dlc_UInt_max ) )
                (assert (= v7391 v3047 ) )
                (declare-fun v7392 () Bool )
                (assert true )
                (assert (= v7392 (= v7391 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7392 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7362 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7363 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7393 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7393 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7393 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7393 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7393 ) ) ) ) (<= 0 (T18_offers v7393 ) ) ) )
                (assert (= v7393 v4646 ) )
                (declare-fun v7394 () UInt )
                (assert (<= 0 v7394 ) )
                (assert (<= v7394 dlc_UInt_max ) )
                (assert (= v7394 v3423 ) )
                (declare-fun v7395 () UInt )
                (assert (<= 0 v7395 ) )
                (assert (<= v7395 dlc_UInt_max ) )
                (assert (= v7395 v3040 ) )
                (declare-fun v7396 () UInt )
                (assert (<= 0 v7396 ) )
                (assert (<= v7396 dlc_UInt_max ) )
                (assert (= v7396 v3040 ) )
                (declare-fun v7397 () UInt )
                (assert (<= 0 v7397 ) )
                (assert (<= v7397 dlc_UInt_max ) )
                (assert (= v7397 v3424 ) )
                (declare-fun v7398 () UInt )
                (assert (<= 0 v7398 ) )
                (assert (<= v7398 dlc_UInt_max ) )
                (assert (= v7398 v3043 ) )
                (declare-fun v7399 () UInt )
                (assert (<= 0 v7399 ) )
                (assert (<= v7399 dlc_UInt_max ) )
                (assert (= v7399 v3043 ) )
                (declare-fun v7400 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7400 0 ) ) ) (<= 0 (T2_elem1 (select v7400 0 ) ) ) ) )
                (assert (= v7400 v3046 ) )
                (declare-fun v7401 () UInt )
                (assert (<= 0 v7401 ) )
                (assert (<= v7401 dlc_UInt_max ) )
                (assert (= v7401 v3047 ) )
                (declare-fun v7402 () Bool )
                (assert true )
                (assert (= v7402 (= v7401 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7402 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7362 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7363 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7403 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7403 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7403 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7403 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7403 ) ) ) ) (<= 0 (T18_offers v7403 ) ) ) )
                (assert (= v7403 v5149 ) )
                (declare-fun v7404 () UInt )
                (assert (<= 0 v7404 ) )
                (assert (<= v7404 dlc_UInt_max ) )
                (assert (= v7404 v3423 ) )
                (declare-fun v7405 () UInt )
                (assert (<= 0 v7405 ) )
                (assert (<= v7405 dlc_UInt_max ) )
                (assert (= v7405 v3040 ) )
                (declare-fun v7406 () UInt )
                (assert (<= 0 v7406 ) )
                (assert (<= v7406 dlc_UInt_max ) )
                (assert (= v7406 v3040 ) )
                (declare-fun v7407 () UInt )
                (assert (<= 0 v7407 ) )
                (assert (<= v7407 dlc_UInt_max ) )
                (assert (= v7407 v3424 ) )
                (declare-fun v7408 () UInt )
                (assert (<= 0 v7408 ) )
                (assert (<= v7408 dlc_UInt_max ) )
                (assert (= v7408 v3043 ) )
                (declare-fun v7409 () UInt )
                (assert (<= 0 v7409 ) )
                (assert (<= v7409 dlc_UInt_max ) )
                (assert (= v7409 v3043 ) )
                (declare-fun v7410 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7410 0 ) ) ) (<= 0 (T2_elem1 (select v7410 0 ) ) ) ) )
                (assert (= v7410 v3046 ) )
                (declare-fun v7411 () UInt )
                (assert (<= 0 v7411 ) )
                (assert (<= v7411 dlc_UInt_max ) )
                (assert (= v7411 v3047 ) )
                (declare-fun v7412 () Bool )
                (assert true )
                (assert (= v7412 (= v7411 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7412 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7362 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun pv_ks7363 () (Array Token Int ) (store ((as const (Array Token Int ) ) 31891 ) Token!val!3 0 ) ) (define-fun pv_tok7364 () Token Token!val!14 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!4 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool false ) (define-fun v5400 () Bool true ) (define-fun v3423 () Int 1 ) (define-fun pv_net7362 () Int 0 ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v7367 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v7365 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v7372 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v7371 () Address Address!val!1 ) (define-fun v7366 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7369 () Address Address!val!1 ) (define-fun v7370 () Address Address!val!1 ) (define-fun v7368 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7363 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7413 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7413 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7413 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7413 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7413 ) ) ) ) (<= 0 (T18_offers v7413 ) ) ) )
                (assert (= v7413 v5650 ) )
                (declare-fun v7414 () UInt )
                (assert (<= 0 v7414 ) )
                (assert (<= v7414 dlc_UInt_max ) )
                (assert (= v7414 v3423 ) )
                (declare-fun v7415 () UInt )
                (assert (<= 0 v7415 ) )
                (assert (<= v7415 dlc_UInt_max ) )
                (assert (= v7415 v3040 ) )
                (declare-fun v7416 () UInt )
                (assert (<= 0 v7416 ) )
                (assert (<= v7416 dlc_UInt_max ) )
                (assert (= v7416 v3040 ) )
                (declare-fun v7417 () UInt )
                (assert (<= 0 v7417 ) )
                (assert (<= v7417 dlc_UInt_max ) )
                (assert (= v7417 v3424 ) )
                (declare-fun v7418 () UInt )
                (assert (<= 0 v7418 ) )
                (assert (<= v7418 dlc_UInt_max ) )
                (assert (= v7418 v3043 ) )
                (declare-fun v7419 () UInt )
                (assert (<= 0 v7419 ) )
                (assert (<= v7419 dlc_UInt_max ) )
                (assert (= v7419 v3043 ) )
                (declare-fun v7420 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7420 0 ) ) ) (<= 0 (T2_elem1 (select v7420 0 ) ) ) ) )
                (assert (= v7420 v3046 ) )
                (declare-fun v7421 () UInt )
                (assert (<= 0 v7421 ) )
                (assert (<= v7421 dlc_UInt_max ) )
                (assert (= v7421 v3047 ) )
                (declare-fun v7422 () Bool )
                (assert true )
                (assert (= v7422 (= v7421 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7422 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7362 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7363 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7423 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7423 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7423 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7423 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7423 ) ) ) ) (<= 0 (T18_offers v7423 ) ) ) )
                (assert (= v7423 v6217 ) )
                (declare-fun v7424 () UInt )
                (assert (<= 0 v7424 ) )
                (assert (<= v7424 dlc_UInt_max ) )
                (assert (= v7424 v3423 ) )
                (declare-fun v7425 () UInt )
                (assert (<= 0 v7425 ) )
                (assert (<= v7425 dlc_UInt_max ) )
                (assert (= v7425 v3040 ) )
                (declare-fun v7426 () UInt )
                (assert (<= 0 v7426 ) )
                (assert (<= v7426 dlc_UInt_max ) )
                (assert (= v7426 v3040 ) )
                (declare-fun v7427 () UInt )
                (assert (<= 0 v7427 ) )
                (assert (<= v7427 dlc_UInt_max ) )
                (assert (= v7427 v3424 ) )
                (declare-fun v7428 () UInt )
                (assert (<= 0 v7428 ) )
                (assert (<= v7428 dlc_UInt_max ) )
                (assert (= v7428 v3043 ) )
                (declare-fun v7429 () UInt )
                (assert (<= 0 v7429 ) )
                (assert (<= v7429 dlc_UInt_max ) )
                (assert (= v7429 v3043 ) )
                (declare-fun v7430 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7430 0 ) ) ) (<= 0 (T2_elem1 (select v7430 0 ) ) ) ) )
                (assert (= v7430 v6206 ) )
                (declare-fun v7431 () UInt )
                (assert (<= 0 v7431 ) )
                (assert (<= v7431 dlc_UInt_max ) )
                (assert (= v7431 v6152 ) )
                (declare-fun v7432 () Bool )
                (assert true )
                (assert (= v7432 (= v7431 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7432 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7362 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7362 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7363 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7363 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7434 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7434 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7434 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7434 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7434 ) ) ) ) (<= 0 (T18_offers v7434 ) ) ) )
                (assert (= v7434 v6727 ) )
                (declare-fun v7435 () UInt )
                (assert (<= 0 v7435 ) )
                (assert (<= v7435 dlc_UInt_max ) )
                (assert (= v7435 v3423 ) )
                (declare-fun v7436 () UInt )
                (assert (<= 0 v7436 ) )
                (assert (<= v7436 dlc_UInt_max ) )
                (assert (= v7436 v3040 ) )
                (declare-fun v7437 () UInt )
                (assert (<= 0 v7437 ) )
                (assert (<= v7437 dlc_UInt_max ) )
                (assert (= v7437 v3040 ) )
                (declare-fun v7438 () UInt )
                (assert (<= 0 v7438 ) )
                (assert (<= v7438 dlc_UInt_max ) )
                (assert (= v7438 v3424 ) )
                (declare-fun v7439 () UInt )
                (assert (<= 0 v7439 ) )
                (assert (<= v7439 dlc_UInt_max ) )
                (assert (= v7439 v3043 ) )
                (declare-fun v7440 () UInt )
                (assert (<= 0 v7440 ) )
                (assert (<= v7440 dlc_UInt_max ) )
                (assert (= v7440 v3043 ) )
                (declare-fun v7441 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7441 0 ) ) ) (<= 0 (T2_elem1 (select v7441 0 ) ) ) ) )
                (assert (= v7441 v6430 ) )
                (declare-fun v7442 () UInt )
                (assert (<= 0 v7442 ) )
                (assert (<= v7442 dlc_UInt_max ) )
                (assert (= v7442 v6394 ) )
                (declare-fun v7443 () Bool )
                (assert true )
                (assert (= v7443 (= v7442 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7443 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v6999 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3243 ) )
            (declare-fun pv_net7444 () UInt )
            (assert (<= 0 pv_net7444 ) )
            (declare-fun pv_tok7446 () Token )
            (assert true )
            (declare-fun pv_ks7445 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7445 pv_tok7446 ) ) )
            (assert (= pv_net7444 v3393 ) )
            (assert (= (select pv_ks7445 v3019 ) v3395 ) )
            (declare-fun v7447 () Address )
            (assert true )
            (declare-fun v7448 () Address )
            (assert true )
            (declare-fun v7449 () Address )
            (assert true )
            (declare-fun v7450 () Address )
            (assert true )
            (declare-fun v7451 () Address )
            (assert true )
            (declare-fun v7452 () Address )
            (assert true )
            (declare-fun v7453 () Address )
            (assert true )
            (declare-fun v7454 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7444 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7445 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7455 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7455 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7455 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7455 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7455 ) ) ) ) (<= 0 (T18_offers v7455 ) ) ) )
                (assert (= v7455 v3641 ) )
                (declare-fun v7456 () UInt )
                (assert (<= 0 v7456 ) )
                (assert (<= v7456 dlc_UInt_max ) )
                (assert (= v7456 v3423 ) )
                (declare-fun v7457 () UInt )
                (assert (<= 0 v7457 ) )
                (assert (<= v7457 dlc_UInt_max ) )
                (assert (= v7457 v3040 ) )
                (declare-fun v7458 () UInt )
                (assert (<= 0 v7458 ) )
                (assert (<= v7458 dlc_UInt_max ) )
                (assert (= v7458 v3040 ) )
                (declare-fun v7459 () UInt )
                (assert (<= 0 v7459 ) )
                (assert (<= v7459 dlc_UInt_max ) )
                (assert (= v7459 v3424 ) )
                (declare-fun v7460 () UInt )
                (assert (<= 0 v7460 ) )
                (assert (<= v7460 dlc_UInt_max ) )
                (assert (= v7460 v3043 ) )
                (declare-fun v7461 () UInt )
                (assert (<= 0 v7461 ) )
                (assert (<= v7461 dlc_UInt_max ) )
                (assert (= v7461 v3043 ) )
                (declare-fun v7462 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7462 0 ) ) ) (<= 0 (T2_elem1 (select v7462 0 ) ) ) ) )
                (assert (= v7462 v3046 ) )
                (declare-fun v7463 () UInt )
                (assert (<= 0 v7463 ) )
                (assert (<= v7463 dlc_UInt_max ) )
                (assert (= v7463 v3047 ) )
                (declare-fun v7464 () Bool )
                (assert true )
                (assert (= v7464 (= v7463 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7464 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7444 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7445 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7465 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7465 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7465 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7465 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7465 ) ) ) ) (<= 0 (T18_offers v7465 ) ) ) )
                (assert (= v7465 v4143 ) )
                (declare-fun v7466 () UInt )
                (assert (<= 0 v7466 ) )
                (assert (<= v7466 dlc_UInt_max ) )
                (assert (= v7466 v3423 ) )
                (declare-fun v7467 () UInt )
                (assert (<= 0 v7467 ) )
                (assert (<= v7467 dlc_UInt_max ) )
                (assert (= v7467 v3040 ) )
                (declare-fun v7468 () UInt )
                (assert (<= 0 v7468 ) )
                (assert (<= v7468 dlc_UInt_max ) )
                (assert (= v7468 v3040 ) )
                (declare-fun v7469 () UInt )
                (assert (<= 0 v7469 ) )
                (assert (<= v7469 dlc_UInt_max ) )
                (assert (= v7469 v3424 ) )
                (declare-fun v7470 () UInt )
                (assert (<= 0 v7470 ) )
                (assert (<= v7470 dlc_UInt_max ) )
                (assert (= v7470 v3043 ) )
                (declare-fun v7471 () UInt )
                (assert (<= 0 v7471 ) )
                (assert (<= v7471 dlc_UInt_max ) )
                (assert (= v7471 v3043 ) )
                (declare-fun v7472 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7472 0 ) ) ) (<= 0 (T2_elem1 (select v7472 0 ) ) ) ) )
                (assert (= v7472 v3046 ) )
                (declare-fun v7473 () UInt )
                (assert (<= 0 v7473 ) )
                (assert (<= v7473 dlc_UInt_max ) )
                (assert (= v7473 v3047 ) )
                (declare-fun v7474 () Bool )
                (assert true )
                (assert (= v7474 (= v7473 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7474 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7444 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7445 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7475 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7475 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7475 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7475 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7475 ) ) ) ) (<= 0 (T18_offers v7475 ) ) ) )
                (assert (= v7475 v4646 ) )
                (declare-fun v7476 () UInt )
                (assert (<= 0 v7476 ) )
                (assert (<= v7476 dlc_UInt_max ) )
                (assert (= v7476 v3423 ) )
                (declare-fun v7477 () UInt )
                (assert (<= 0 v7477 ) )
                (assert (<= v7477 dlc_UInt_max ) )
                (assert (= v7477 v3040 ) )
                (declare-fun v7478 () UInt )
                (assert (<= 0 v7478 ) )
                (assert (<= v7478 dlc_UInt_max ) )
                (assert (= v7478 v3040 ) )
                (declare-fun v7479 () UInt )
                (assert (<= 0 v7479 ) )
                (assert (<= v7479 dlc_UInt_max ) )
                (assert (= v7479 v3424 ) )
                (declare-fun v7480 () UInt )
                (assert (<= 0 v7480 ) )
                (assert (<= v7480 dlc_UInt_max ) )
                (assert (= v7480 v3043 ) )
                (declare-fun v7481 () UInt )
                (assert (<= 0 v7481 ) )
                (assert (<= v7481 dlc_UInt_max ) )
                (assert (= v7481 v3043 ) )
                (declare-fun v7482 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7482 0 ) ) ) (<= 0 (T2_elem1 (select v7482 0 ) ) ) ) )
                (assert (= v7482 v3046 ) )
                (declare-fun v7483 () UInt )
                (assert (<= 0 v7483 ) )
                (assert (<= v7483 dlc_UInt_max ) )
                (assert (= v7483 v3047 ) )
                (declare-fun v7484 () Bool )
                (assert true )
                (assert (= v7484 (= v7483 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7484 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7444 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7445 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7485 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7485 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7485 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7485 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7485 ) ) ) ) (<= 0 (T18_offers v7485 ) ) ) )
                (assert (= v7485 v5149 ) )
                (declare-fun v7486 () UInt )
                (assert (<= 0 v7486 ) )
                (assert (<= v7486 dlc_UInt_max ) )
                (assert (= v7486 v3423 ) )
                (declare-fun v7487 () UInt )
                (assert (<= 0 v7487 ) )
                (assert (<= v7487 dlc_UInt_max ) )
                (assert (= v7487 v3040 ) )
                (declare-fun v7488 () UInt )
                (assert (<= 0 v7488 ) )
                (assert (<= v7488 dlc_UInt_max ) )
                (assert (= v7488 v3040 ) )
                (declare-fun v7489 () UInt )
                (assert (<= 0 v7489 ) )
                (assert (<= v7489 dlc_UInt_max ) )
                (assert (= v7489 v3424 ) )
                (declare-fun v7490 () UInt )
                (assert (<= 0 v7490 ) )
                (assert (<= v7490 dlc_UInt_max ) )
                (assert (= v7490 v3043 ) )
                (declare-fun v7491 () UInt )
                (assert (<= 0 v7491 ) )
                (assert (<= v7491 dlc_UInt_max ) )
                (assert (= v7491 v3043 ) )
                (declare-fun v7492 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7492 0 ) ) ) (<= 0 (T2_elem1 (select v7492 0 ) ) ) ) )
                (assert (= v7492 v3046 ) )
                (declare-fun v7493 () UInt )
                (assert (<= 0 v7493 ) )
                (assert (<= v7493 dlc_UInt_max ) )
                (assert (= v7493 v3047 ) )
                (declare-fun v7494 () Bool )
                (assert true )
                (assert (= v7494 (= v7493 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7494 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7444 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7445 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7495 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7495 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7495 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7495 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7495 ) ) ) ) (<= 0 (T18_offers v7495 ) ) ) )
                (assert (= v7495 v5650 ) )
                (declare-fun v7496 () UInt )
                (assert (<= 0 v7496 ) )
                (assert (<= v7496 dlc_UInt_max ) )
                (assert (= v7496 v3423 ) )
                (declare-fun v7497 () UInt )
                (assert (<= 0 v7497 ) )
                (assert (<= v7497 dlc_UInt_max ) )
                (assert (= v7497 v3040 ) )
                (declare-fun v7498 () UInt )
                (assert (<= 0 v7498 ) )
                (assert (<= v7498 dlc_UInt_max ) )
                (assert (= v7498 v3040 ) )
                (declare-fun v7499 () UInt )
                (assert (<= 0 v7499 ) )
                (assert (<= v7499 dlc_UInt_max ) )
                (assert (= v7499 v3424 ) )
                (declare-fun v7500 () UInt )
                (assert (<= 0 v7500 ) )
                (assert (<= v7500 dlc_UInt_max ) )
                (assert (= v7500 v3043 ) )
                (declare-fun v7501 () UInt )
                (assert (<= 0 v7501 ) )
                (assert (<= v7501 dlc_UInt_max ) )
                (assert (= v7501 v3043 ) )
                (declare-fun v7502 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7502 0 ) ) ) (<= 0 (T2_elem1 (select v7502 0 ) ) ) ) )
                (assert (= v7502 v3046 ) )
                (declare-fun v7503 () UInt )
                (assert (<= 0 v7503 ) )
                (assert (<= v7503 dlc_UInt_max ) )
                (assert (= v7503 v3047 ) )
                (declare-fun v7504 () Bool )
                (assert true )
                (assert (= v7504 (= v7503 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7504 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7444 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun pv_tok7446 () Token Token!val!14 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun pv_ks7445 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!14 31891 ) ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v5785 () T3 T3_cons ) (define-fun v3225 () T3 T3_cons ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!4 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v3423 () Int 1 ) (define-fun pv_net7444 () Int 1 ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v6999 () Address Address!val!1 ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 1 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 1 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 1 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7447 () Address Address!val!1 ) (define-fun v7000 () Address Address!val!1 ) (define-fun v7453 () Address Address!val!1 ) (define-fun v7448 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7452 () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v7451 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7454 () Address Address!val!1 ) (define-fun v7450 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7449 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7445 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7505 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7505 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7505 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7505 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7505 ) ) ) ) (<= 0 (T18_offers v7505 ) ) ) )
                (assert (= v7505 v6217 ) )
                (declare-fun v7506 () UInt )
                (assert (<= 0 v7506 ) )
                (assert (<= v7506 dlc_UInt_max ) )
                (assert (= v7506 v3423 ) )
                (declare-fun v7507 () UInt )
                (assert (<= 0 v7507 ) )
                (assert (<= v7507 dlc_UInt_max ) )
                (assert (= v7507 v3040 ) )
                (declare-fun v7508 () UInt )
                (assert (<= 0 v7508 ) )
                (assert (<= v7508 dlc_UInt_max ) )
                (assert (= v7508 v3040 ) )
                (declare-fun v7509 () UInt )
                (assert (<= 0 v7509 ) )
                (assert (<= v7509 dlc_UInt_max ) )
                (assert (= v7509 v3424 ) )
                (declare-fun v7510 () UInt )
                (assert (<= 0 v7510 ) )
                (assert (<= v7510 dlc_UInt_max ) )
                (assert (= v7510 v3043 ) )
                (declare-fun v7511 () UInt )
                (assert (<= 0 v7511 ) )
                (assert (<= v7511 dlc_UInt_max ) )
                (assert (= v7511 v3043 ) )
                (declare-fun v7512 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7512 0 ) ) ) (<= 0 (T2_elem1 (select v7512 0 ) ) ) ) )
                (assert (= v7512 v6206 ) )
                (declare-fun v7513 () UInt )
                (assert (<= 0 v7513 ) )
                (assert (<= v7513 dlc_UInt_max ) )
                (assert (= v7513 v6152 ) )
                (declare-fun v7514 () Bool )
                (assert true )
                (assert (= v7514 (= v7513 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7514 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7444 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7444 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7445 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7445 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7516 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7516 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7516 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7516 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7516 ) ) ) ) (<= 0 (T18_offers v7516 ) ) ) )
                (assert (= v7516 v6727 ) )
                (declare-fun v7517 () UInt )
                (assert (<= 0 v7517 ) )
                (assert (<= v7517 dlc_UInt_max ) )
                (assert (= v7517 v3423 ) )
                (declare-fun v7518 () UInt )
                (assert (<= 0 v7518 ) )
                (assert (<= v7518 dlc_UInt_max ) )
                (assert (= v7518 v3040 ) )
                (declare-fun v7519 () UInt )
                (assert (<= 0 v7519 ) )
                (assert (<= v7519 dlc_UInt_max ) )
                (assert (= v7519 v3040 ) )
                (declare-fun v7520 () UInt )
                (assert (<= 0 v7520 ) )
                (assert (<= v7520 dlc_UInt_max ) )
                (assert (= v7520 v3424 ) )
                (declare-fun v7521 () UInt )
                (assert (<= 0 v7521 ) )
                (assert (<= v7521 dlc_UInt_max ) )
                (assert (= v7521 v3043 ) )
                (declare-fun v7522 () UInt )
                (assert (<= 0 v7522 ) )
                (assert (<= v7522 dlc_UInt_max ) )
                (assert (= v7522 v3043 ) )
                (declare-fun v7523 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7523 0 ) ) ) (<= 0 (T2_elem1 (select v7523 0 ) ) ) ) )
                (assert (= v7523 v6430 ) )
                (declare-fun v7524 () UInt )
                (assert (<= 0 v7524 ) )
                (assert (<= v7524 dlc_UInt_max ) )
                (assert (= v7524 v6394 ) )
                (declare-fun v7525 () Bool )
                (assert true )
                (assert (= v7525 (= v7524 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7525 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (assert (= v3421 v7000 ) )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (assert (= v3422 v3265 ) )
            (declare-fun pv_net7526 () UInt )
            (assert (<= 0 pv_net7526 ) )
            (declare-fun pv_tok7528 () Token )
            (assert true )
            (declare-fun pv_ks7527 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7527 pv_tok7528 ) ) )
            (assert (= pv_net7526 v3414 ) )
            (assert (= (select pv_ks7527 v3019 ) v3416 ) )
            (declare-fun v7529 () Address )
            (assert true )
            (declare-fun v7530 () Address )
            (assert true )
            (declare-fun v7531 () Address )
            (assert true )
            (declare-fun v7532 () Address )
            (assert true )
            (declare-fun v7533 () Address )
            (assert true )
            (declare-fun v7534 () Address )
            (assert true )
            (declare-fun v7535 () Address )
            (assert true )
            (declare-fun v7536 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (push 1 ) ;; {
                (assert (not v3433 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3436 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3439 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (push 1 ) ;; {
                (assert (not v3448 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3448 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7526 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3577 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7527 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7537 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7537 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7537 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7537 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7537 ) ) ) ) (<= 0 (T18_offers v7537 ) ) ) )
                (assert (= v7537 v3641 ) )
                (declare-fun v7538 () UInt )
                (assert (<= 0 v7538 ) )
                (assert (<= v7538 dlc_UInt_max ) )
                (assert (= v7538 v3423 ) )
                (declare-fun v7539 () UInt )
                (assert (<= 0 v7539 ) )
                (assert (<= v7539 dlc_UInt_max ) )
                (assert (= v7539 v3040 ) )
                (declare-fun v7540 () UInt )
                (assert (<= 0 v7540 ) )
                (assert (<= v7540 dlc_UInt_max ) )
                (assert (= v7540 v3040 ) )
                (declare-fun v7541 () UInt )
                (assert (<= 0 v7541 ) )
                (assert (<= v7541 dlc_UInt_max ) )
                (assert (= v7541 v3424 ) )
                (declare-fun v7542 () UInt )
                (assert (<= 0 v7542 ) )
                (assert (<= v7542 dlc_UInt_max ) )
                (assert (= v7542 v3043 ) )
                (declare-fun v7543 () UInt )
                (assert (<= 0 v7543 ) )
                (assert (<= v7543 dlc_UInt_max ) )
                (assert (= v7543 v3043 ) )
                (declare-fun v7544 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7544 0 ) ) ) (<= 0 (T2_elem1 (select v7544 0 ) ) ) ) )
                (assert (= v7544 v3046 ) )
                (declare-fun v7545 () UInt )
                (assert (<= 0 v7545 ) )
                (assert (<= v7545 dlc_UInt_max ) )
                (assert (= v7545 v3047 ) )
                (declare-fun v7546 () Bool )
                (assert true )
                (assert (= v7546 (= v7545 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7546 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (push 1 ) ;; {
                (assert (not v3932 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (push 1 ) ;; {
                (assert (not v3935 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v3938 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v3938 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7526 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4049 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7527 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7547 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7547 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7547 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7547 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7547 ) ) ) ) (<= 0 (T18_offers v7547 ) ) ) )
                (assert (= v7547 v4143 ) )
                (declare-fun v7548 () UInt )
                (assert (<= 0 v7548 ) )
                (assert (<= v7548 dlc_UInt_max ) )
                (assert (= v7548 v3423 ) )
                (declare-fun v7549 () UInt )
                (assert (<= 0 v7549 ) )
                (assert (<= v7549 dlc_UInt_max ) )
                (assert (= v7549 v3040 ) )
                (declare-fun v7550 () UInt )
                (assert (<= 0 v7550 ) )
                (assert (<= v7550 dlc_UInt_max ) )
                (assert (= v7550 v3040 ) )
                (declare-fun v7551 () UInt )
                (assert (<= 0 v7551 ) )
                (assert (<= v7551 dlc_UInt_max ) )
                (assert (= v7551 v3424 ) )
                (declare-fun v7552 () UInt )
                (assert (<= 0 v7552 ) )
                (assert (<= v7552 dlc_UInt_max ) )
                (assert (= v7552 v3043 ) )
                (declare-fun v7553 () UInt )
                (assert (<= 0 v7553 ) )
                (assert (<= v7553 dlc_UInt_max ) )
                (assert (= v7553 v3043 ) )
                (declare-fun v7554 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7554 0 ) ) ) (<= 0 (T2_elem1 (select v7554 0 ) ) ) ) )
                (assert (= v7554 v3046 ) )
                (declare-fun v7555 () UInt )
                (assert (<= 0 v7555 ) )
                (assert (<= v7555 dlc_UInt_max ) )
                (assert (= v7555 v3047 ) )
                (declare-fun v7556 () Bool )
                (assert true )
                (assert (= v7556 (= v7555 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7556 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (push 1 ) ;; {
                (assert (not v4423 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4426 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4431 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4431 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7526 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4521 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7527 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7557 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7557 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7557 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7557 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7557 ) ) ) ) (<= 0 (T18_offers v7557 ) ) ) )
                (assert (= v7557 v4646 ) )
                (declare-fun v7558 () UInt )
                (assert (<= 0 v7558 ) )
                (assert (<= v7558 dlc_UInt_max ) )
                (assert (= v7558 v3423 ) )
                (declare-fun v7559 () UInt )
                (assert (<= 0 v7559 ) )
                (assert (<= v7559 dlc_UInt_max ) )
                (assert (= v7559 v3040 ) )
                (declare-fun v7560 () UInt )
                (assert (<= 0 v7560 ) )
                (assert (<= v7560 dlc_UInt_max ) )
                (assert (= v7560 v3040 ) )
                (declare-fun v7561 () UInt )
                (assert (<= 0 v7561 ) )
                (assert (<= v7561 dlc_UInt_max ) )
                (assert (= v7561 v3424 ) )
                (declare-fun v7562 () UInt )
                (assert (<= 0 v7562 ) )
                (assert (<= v7562 dlc_UInt_max ) )
                (assert (= v7562 v3043 ) )
                (declare-fun v7563 () UInt )
                (assert (<= 0 v7563 ) )
                (assert (<= v7563 dlc_UInt_max ) )
                (assert (= v7563 v3043 ) )
                (declare-fun v7564 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7564 0 ) ) ) (<= 0 (T2_elem1 (select v7564 0 ) ) ) ) )
                (assert (= v7564 v3046 ) )
                (declare-fun v7565 () UInt )
                (assert (<= 0 v7565 ) )
                (assert (<= v7565 dlc_UInt_max ) )
                (assert (= v7565 v3047 ) )
                (declare-fun v7566 () Bool )
                (assert true )
                (assert (= v7566 (= v7565 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7566 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (push 1 ) ;; {
                (assert (not v4915 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (push 1 ) ;; {
                (assert (not v4918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4918 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7526 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v4993 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7527 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7567 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7567 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7567 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7567 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7567 ) ) ) ) (<= 0 (T18_offers v7567 ) ) ) )
                (assert (= v7567 v5149 ) )
                (declare-fun v7568 () UInt )
                (assert (<= 0 v7568 ) )
                (assert (<= v7568 dlc_UInt_max ) )
                (assert (= v7568 v3423 ) )
                (declare-fun v7569 () UInt )
                (assert (<= 0 v7569 ) )
                (assert (<= v7569 dlc_UInt_max ) )
                (assert (= v7569 v3040 ) )
                (declare-fun v7570 () UInt )
                (assert (<= 0 v7570 ) )
                (assert (<= v7570 dlc_UInt_max ) )
                (assert (= v7570 v3040 ) )
                (declare-fun v7571 () UInt )
                (assert (<= 0 v7571 ) )
                (assert (<= v7571 dlc_UInt_max ) )
                (assert (= v7571 v3424 ) )
                (declare-fun v7572 () UInt )
                (assert (<= 0 v7572 ) )
                (assert (<= v7572 dlc_UInt_max ) )
                (assert (= v7572 v3043 ) )
                (declare-fun v7573 () UInt )
                (assert (<= 0 v7573 ) )
                (assert (<= v7573 dlc_UInt_max ) )
                (assert (= v7573 v3043 ) )
                (declare-fun v7574 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7574 0 ) ) ) (<= 0 (T2_elem1 (select v7574 0 ) ) ) ) )
                (assert (= v7574 v3046 ) )
                (declare-fun v7575 () UInt )
                (assert (<= 0 v7575 ) )
                (assert (<= v7575 dlc_UInt_max ) )
                (assert (= v7575 v3047 ) )
                (declare-fun v7576 () Bool )
                (assert true )
                (assert (= v7576 (= v7575 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7576 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (push 1 ) ;; {
                (assert (not v5402 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5405 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5405 )
              (push 1 ) ;; {
                (assert (not (= 0 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 pv_net7526 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5465 )
              (push 1 ) ;; {
                (assert (not (= 0 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= 0 (select pv_ks7527 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7577 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7577 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7577 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7577 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7577 ) ) ) ) (<= 0 (T18_offers v7577 ) ) ) )
                (assert (= v7577 v5650 ) )
                (declare-fun v7578 () UInt )
                (assert (<= 0 v7578 ) )
                (assert (<= v7578 dlc_UInt_max ) )
                (assert (= v7578 v3423 ) )
                (declare-fun v7579 () UInt )
                (assert (<= 0 v7579 ) )
                (assert (<= v7579 dlc_UInt_max ) )
                (assert (= v7579 v3040 ) )
                (declare-fun v7580 () UInt )
                (assert (<= 0 v7580 ) )
                (assert (<= v7580 dlc_UInt_max ) )
                (assert (= v7580 v3040 ) )
                (declare-fun v7581 () UInt )
                (assert (<= 0 v7581 ) )
                (assert (<= v7581 dlc_UInt_max ) )
                (assert (= v7581 v3424 ) )
                (declare-fun v7582 () UInt )
                (assert (<= 0 v7582 ) )
                (assert (<= v7582 dlc_UInt_max ) )
                (assert (= v7582 v3043 ) )
                (declare-fun v7583 () UInt )
                (assert (<= 0 v7583 ) )
                (assert (<= v7583 dlc_UInt_max ) )
                (assert (= v7583 v3043 ) )
                (declare-fun v7584 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7584 0 ) ) ) (<= 0 (T2_elem1 (select v7584 0 ) ) ) ) )
                (assert (= v7584 v3046 ) )
                (declare-fun v7585 () UInt )
                (assert (<= 0 v7585 ) )
                (assert (<= v7585 dlc_UInt_max ) )
                (assert (= v7585 v3047 ) )
                (declare-fun v7586 () Bool )
                (assert true )
                (assert (= v7586 (= v7585 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7586 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v5887 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (push 1 ) ;; {
                (assert (not v5892 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5914 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5914 pv_net7526 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (push 1 ) ;; {
                (assert (not (= v5916 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v5916 (select pv_ks7527 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7587 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7587 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7587 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7587 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7587 ) ) ) ) (<= 0 (T18_offers v7587 ) ) ) )
                (assert (= v7587 v6217 ) )
                (declare-fun v7588 () UInt )
                (assert (<= 0 v7588 ) )
                (assert (<= v7588 dlc_UInt_max ) )
                (assert (= v7588 v3423 ) )
                (declare-fun v7589 () UInt )
                (assert (<= 0 v7589 ) )
                (assert (<= v7589 dlc_UInt_max ) )
                (assert (= v7589 v3040 ) )
                (declare-fun v7590 () UInt )
                (assert (<= 0 v7590 ) )
                (assert (<= v7590 dlc_UInt_max ) )
                (assert (= v7590 v3040 ) )
                (declare-fun v7591 () UInt )
                (assert (<= 0 v7591 ) )
                (assert (<= v7591 dlc_UInt_max ) )
                (assert (= v7591 v3424 ) )
                (declare-fun v7592 () UInt )
                (assert (<= 0 v7592 ) )
                (assert (<= v7592 dlc_UInt_max ) )
                (assert (= v7592 v3043 ) )
                (declare-fun v7593 () UInt )
                (assert (<= 0 v7593 ) )
                (assert (<= v7593 dlc_UInt_max ) )
                (assert (= v7593 v3043 ) )
                (declare-fun v7594 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7594 0 ) ) ) (<= 0 (T2_elem1 (select v7594 0 ) ) ) ) )
                (assert (= v7594 v6206 ) )
                (declare-fun v7595 () UInt )
                (assert (<= 0 v7595 ) )
                (assert (<= v7595 dlc_UInt_max ) )
                (assert (= v7595 v6152 ) )
                (declare-fun v7596 () Bool )
                (assert true )
                (assert (= v7596 (= v7595 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7596 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (push 1 ) ;; {
                (assert (not v6377 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6386 pv_net7526 ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6386 pv_net7526 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (declare-fun Bytes!val!1 () Bytes ) (forall ((x Bytes ) ) (or (= x Bytes!val!0 ) (= x Bytes!val!1 ) ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!4 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!4 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3114 () T4 (T4_cons false ) ) (define-fun v3044 () Int 0 ) (define-fun pv_ks7527 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!14 31891 ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!8 32285 Token!val!9 false false ) true true (T14_cons 10450 30612 Token!val!10 ) false 5853 ) ) (define-fun v6994 () Address Address!val!2 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun v3424 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3041 () Int 0 ) (define-fun v6998 () Address Address!val!2 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 28100 1142 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) ) (define-fun pv_ks6980 () (Array Token Int ) ((as const (Array Token Int ) ) 11797 ) ) (define-fun v6996 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun address_Admin () Address Address!val!2 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3186 () T9 (T9_cons (T10_cons 26285 Address!val!3 0 false ) ) ) (define-fun v3138 () T13 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) (define-fun pv_ks6991 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!7 8365 ) ) (define-fun pv_tok7528 () Token Token!val!14 ) (define-fun pv_tok6992 () Token Token!val!7 ) (define-fun v3023 () Int 0 ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok6981 () Token Token!val!6 ) (define-fun v3163 () T6 (T6_cons 8945 ) ) (define-fun v2983 () T17 (T17_cons Address!val!1 Bytes!val!1 (T16_cons Token!val!4 1 Token!val!3 false true ) (T14_cons 2437 8855 Token!val!5 ) ) ) (define-fun v3042 () Int 0 ) (define-fun v6997 () Address Address!val!2 ) (define-fun v6995 () Address Address!val!2 ) (define-fun v3085 () T15 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) (define-fun v3247 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!4 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3423 () Int 1 ) (define-fun pv_net7526 () Int 1 ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v7000 () Address Address!val!1 ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3418 () Bool true ) (define-fun v3417 () Token Token!val!3 ) (define-fun v3416 () Int 0 ) (define-fun v3415 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3414 () Int 1 ) (define-fun v3413 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3412 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3411 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3410 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3409 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3408 () Bool true ) (define-fun v3397 () Bool true ) (define-fun v3396 () Token Token!val!3 ) (define-fun v3395 () Int 0 ) (define-fun v3394 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3393 () Int 1 ) (define-fun v3265 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3255 () Bool true ) (define-fun v3249 () Int 1 ) (define-fun v3248 () T12 (T12_cons 1 false ) ) (define-fun v3225 () T3 T3_cons ) (define-fun v3243 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3239 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3238 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v3237 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v3236 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v3235 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v3234 () Bool true ) (define-fun v3232 () Bool true ) (define-fun v3231 () Bool false ) (define-fun v3227 () Bool true ) (define-fun v3221 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 26285 Address!val!3 0 false ) ) ) ) (define-fun v3210 () Bool true ) (define-fun v3209 () Int 1 ) (define-fun v3208 () T22 (T22_Some (T10_cons 14680 Address!val!4 20976 false ) ) ) (define-fun v3201 () Bool true ) (define-fun v3198 () Bool true ) (define-fun v3197 () Bool false ) (define-fun v3195 () Bool true ) (define-fun v3194 () Bool false ) (define-fun v3193 () Bool true ) (define-fun v3190 () Int 0 ) (define-fun v3187 () T10 (T10_cons 26285 Address!val!3 0 false ) ) (define-fun v3184 () Address Address!val!2 ) (define-fun v3182 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 8945 ) ) ) (define-fun v3174 () Bool true ) (define-fun v3171 () Bool true ) (define-fun v3170 () Bool false ) (define-fun v3168 () Bool true ) (define-fun v3167 () Bool false ) (define-fun v3166 () Bool true ) (define-fun v3161 () Address Address!val!2 ) (define-fun v3159 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 15921 Token!val!13 ) ) ) ) (define-fun v3149 () Bool true ) (define-fun v3148 () Bool false ) (define-fun v3146 () Bool true ) (define-fun v3145 () Bool false ) (define-fun v3144 () Bool true ) (define-fun v3136 () Address Address!val!2 ) (define-fun v3134 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3127 () Bool true ) (define-fun v3126 () Bool false ) (define-fun v3115 () Bool false ) (define-fun v3125 () Bool false ) (define-fun v3124 () Bool true ) (define-fun v3122 () Bool true ) (define-fun v3121 () Bool false ) (define-fun v3119 () Bool true ) (define-fun v3118 () Bool false ) (define-fun v3117 () Bool true ) (define-fun v3112 () Address Address!val!2 ) (define-fun v3110 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!11 281 Token!val!12 false false ) ) ) ) (define-fun v3098 () Bool true ) (define-fun v3097 () Bool false ) (define-fun v3095 () Bool true ) (define-fun v3094 () Bool false ) (define-fun v3093 () Bool true ) (define-fun v3083 () Address Address!val!2 ) (define-fun v3077 () T14 (T14_cons 10450 30612 Token!val!10 ) ) (define-fun v3071 () T16 (T16_cons Token!val!8 32285 Token!val!9 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!4 1 Token!val!3 false true ) true false (T14_cons 2437 8855 Token!val!5 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun pv_net6990 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3020 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!4 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun pv_net6979 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3011 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v3010 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v3009 () Token Token!val!4 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3007 () Address Address!val!2 ) (define-fun v3006 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v2992 () Bool true ) (define-fun v2991 () Bool false ) (define-fun v2990 () Token Token!val!3 ) (define-fun v2989 () Int 1 ) (define-fun v2988 () Token Token!val!4 ) (define-fun v2987 () T14 (T14_cons 2437 8855 Token!val!5 ) ) (define-fun v2986 () T16 (T16_cons Token!val!4 1 Token!val!3 false true ) ) (define-fun v2984 () Address Address!val!1 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v6973 () Address Address!val!1 ) (define-fun v6984 () Address Address!val!1 ) (define-fun v6983 () Address Address!val!1 ) (define-fun v6982 () Address Address!val!1 ) (define-fun v6976 () Address Address!val!1 ) (define-fun v7533 () Address Address!val!1 ) (define-fun v7531 () Address Address!val!1 ) (define-fun v6989 () Address Address!val!1 ) (define-fun v6988 () Address Address!val!1 ) (define-fun v6985 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v6974 () Address Address!val!1 ) (define-fun v6993 () Address Address!val!1 ) (define-fun v6987 () Address Address!val!1 ) (define-fun v7529 () Address Address!val!1 ) (define-fun v7530 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v6986 () Address Address!val!1 ) (define-fun v6971 () Address Address!val!1 ) (define-fun v7534 () Address Address!val!1 ) (define-fun v6999 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v6972 () Address Address!val!1 ) (define-fun v6975 () Address Address!val!1 ) (define-fun v7536 () Address Address!val!1 ) (define-fun v7532 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v6978 () Address Address!val!1 ) (define-fun v7535 () Address Address!val!1 ) (define-fun v6977 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (push 1 ) ;; {
                (assert (not (= v6388 (select pv_ks7527 v3019 ) ) ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert (= v6388 (select pv_ks7527 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7598 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7598 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7598 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7598 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7598 ) ) ) ) (<= 0 (T18_offers v7598 ) ) ) )
                (assert (= v7598 v6727 ) )
                (declare-fun v7599 () UInt )
                (assert (<= 0 v7599 ) )
                (assert (<= v7599 dlc_UInt_max ) )
                (assert (= v7599 v3423 ) )
                (declare-fun v7600 () UInt )
                (assert (<= 0 v7600 ) )
                (assert (<= v7600 dlc_UInt_max ) )
                (assert (= v7600 v3040 ) )
                (declare-fun v7601 () UInt )
                (assert (<= 0 v7601 ) )
                (assert (<= v7601 dlc_UInt_max ) )
                (assert (= v7601 v3040 ) )
                (declare-fun v7602 () UInt )
                (assert (<= 0 v7602 ) )
                (assert (<= v7602 dlc_UInt_max ) )
                (assert (= v7602 v3424 ) )
                (declare-fun v7603 () UInt )
                (assert (<= 0 v7603 ) )
                (assert (<= v7603 dlc_UInt_max ) )
                (assert (= v7603 v3043 ) )
                (declare-fun v7604 () UInt )
                (assert (<= 0 v7604 ) )
                (assert (<= v7604 dlc_UInt_max ) )
                (assert (= v7604 v3043 ) )
                (declare-fun v7605 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7605 0 ) ) ) (<= 0 (T2_elem1 (select v7605 0 ) ) ) ) )
                (assert (= v7605 v6430 ) )
                (declare-fun v7606 () UInt )
                (assert (<= 0 v7606 ) )
                (assert (<= v7606 dlc_UInt_max ) )
                (assert (= v7606 v6394 ) )
                (declare-fun v7607 () Bool )
                (assert true )
                (assert (= v7607 (= v7606 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7607 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unknown
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array UInt T22 ) )
          (declare-fun v3039 () T18 )
          (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
          (declare-fun v3040 () UInt )
          (assert (<= 0 v3040 ) )
          (assert (<= v3040 dlc_UInt_max ) )
          (declare-fun v3041 () UInt )
          (assert (<= 0 v3041 ) )
          (assert (<= v3041 dlc_UInt_max ) )
          (declare-fun v3042 () UInt )
          (assert (<= 0 v3042 ) )
          (assert (<= v3042 dlc_UInt_max ) )
          (declare-fun v3043 () UInt )
          (assert (<= 0 v3043 ) )
          (assert (<= v3043 dlc_UInt_max ) )
          (declare-fun v3044 () UInt )
          (assert (<= 0 v3044 ) )
          (assert (<= v3044 dlc_UInt_max ) )
          (declare-fun v3045 () UInt )
          (assert (<= 0 v3045 ) )
          (assert (<= v3045 dlc_UInt_max ) )
          (declare-fun v3046 () T1 )
          (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
          (declare-fun v3047 () UInt )
          (assert (<= 0 v3047 ) )
          (assert (<= v3047 dlc_UInt_max ) )
          (declare-fun v3059 () Bool )
          (assert true )
          (assert (= v3059 (= v3047 0 ) ) )
          (assert v3059 )
          (declare-fun v3070 () Bool )
          (assert true )
          (assert (= v3070 (T18_continue v3039 ) ) )
          (assert (not v3070 ) )
          (declare-fun v6729 () T16 )
          (assert (<= 0 (T16_number_of_tokens_to_deposit v6729 ) ) )
          (assert (= v6729 (T18_config v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7609 () Address )
            (assert true )
            (declare-fun v7610 () Address )
            (assert true )
            (declare-fun v7611 () Address )
            (assert true )
            (declare-fun v7612 () Address )
            (assert true )
            (declare-fun v7613 () Address )
            (assert true )
            (declare-fun v7614 () Address )
            (assert true )
            (declare-fun v7615 () Address )
            (assert true )
            (declare-fun v7616 () Address )
            (assert true )
            (pop 1 ) ;; }
          (declare-fun v6735 () T14 )
          (assert (and (<= 0 (T14_duration_in_blocks v6735 ) ) (<= 0 (T14_principle v6735 ) ) ) )
          (assert (= v6735 (T18_loanTerms v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7617 () Address )
            (assert true )
            (declare-fun v7618 () Address )
            (assert true )
            (declare-fun v7619 () Address )
            (assert true )
            (declare-fun v7620 () Address )
            (assert true )
            (declare-fun v7621 () Address )
            (assert true )
            (declare-fun v7622 () Address )
            (assert true )
            (declare-fun v7623 () Address )
            (assert true )
            (declare-fun v7624 () Address )
            (assert true )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v7625 () Address )
            (assert true )
            (declare-fun v7626 () Address )
            (assert true )
            (declare-fun v7627 () Address )
            (assert true )
            (declare-fun v7628 () Address )
            (assert true )
            (declare-fun v7629 () Address )
            (assert true )
            (declare-fun v7630 () Address )
            (assert true )
            (declare-fun v7631 () Address )
            (assert true )
            (declare-fun v7632 () Address )
            (assert true )
            (declare-fun v6739 () UInt )
            (assert (<= 0 v6739 ) )
            (declare-fun v6740 () T22 )
            (assert (T22_inv v6740 ) )
            (assert (= v6740 (select map0_1 v6739 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v6741 () Address )
            (assert true )
            (assert (= v6741 address_Admin ) )
            (declare-fun pv_net7633 () UInt )
            (assert (<= 0 pv_net7633 ) )
            (declare-fun pv_tok7635 () Token )
            (assert true )
            (declare-fun pv_ks7634 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7634 pv_tok7635 ) ) )
            (assert (= pv_net7633 0 ) )
            (declare-fun v7636 () Address )
            (assert true )
            (declare-fun v7637 () Address )
            (assert true )
            (declare-fun v7638 () Address )
            (assert true )
            (declare-fun v7639 () Address )
            (assert true )
            (declare-fun v7640 () Address )
            (assert true )
            (declare-fun v7641 () Address )
            (assert true )
            (declare-fun v7642 () Address )
            (assert true )
            (declare-fun v7643 () Address )
            (assert true )
            (declare-fun v6742 () UInt )
            (assert (<= 0 v6742 ) )
            (declare-fun v6743 () UInt )
            (assert (<= 0 v6743 ) )
            (declare-fun v2348 () Bool )
            (assert true )
            (assert (= v6742 (+ v3040 1 ) ) )
            (assert (>= v6743 v3043 ) )
            (push 1 ) ;; {
              (assert (not (= 0 pv_net7633 ) ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert (= 0 pv_net7633 ) )
            (declare-fun v6744 () Bool )
            (assert true )
            (assert (= v6744 (= v3007 v6741 ) ) )
            (push 1 ) ;; {
              (assert (not v6744 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6744 )
            (declare-fun v6747 () Bool )
            (assert true )
            (assert (= v6747 (<= v3047 v3047 ) ) )
            (push 1 ) ;; {
              (assert (not v6747 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6747 )
            (declare-fun v6749 () UInt )
            (assert (<= 0 v6749 ) )
            (assert (<= v6749 dlc_UInt_max ) )
            (assert (= v6749 (- v3047 v3047 ) ) )
            (declare-fun v6750 () T2 )
            (assert (and (<= 0 (T2_elem0 v6750 ) ) (<= 0 (T2_elem1 v6750 ) ) ) )
            (assert (= v6750 (select v3046 0 ) ) )
            (declare-fun v6751 () UInt )
            (assert (<= 0 v6751 ) )
            (assert (<= v6751 dlc_UInt_max ) )
            (assert (= v6751 (T2_elem0 v6750 ) ) )
            (declare-fun v6754 () Bool )
            (assert true )
            (assert (= v6754 (<= v6751 v6751 ) ) )
            (push 1 ) ;; {
              (assert (not v6754 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6754 )
            (declare-fun v6757 () UInt )
            (assert (<= 0 v6757 ) )
            (assert (<= v6757 dlc_UInt_max ) )
            (assert (= v6757 (- v6751 v6751 ) ) )
            (declare-fun v6759 () T2 )
            (assert (and (<= 0 (T2_elem0 v6759 ) ) (<= 0 (T2_elem1 v6759 ) ) ) )
            (assert (= v6759 (T2_cons v6757 (T2_elem1 v6750 ) (T2_elem2 v6750 ) ) ) )
            (declare-fun v6760 () T1 )
            (assert (and (<= 0 (T2_elem0 (select v6760 0 ) ) ) (<= 0 (T2_elem1 (select v6760 0 ) ) ) ) )
            (assert (= v6760 (store v3046 0 v6759 ) ) )
            (declare-fun v6762 () Bool )
            (assert true )
            (assert (= v6762 (= 0 v6749 ) ) )
            (push 1 ) ;; {
              (assert (not v6762 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6762 )
            (declare-fun v6763 () T2 )
            (assert (and (<= 0 (T2_elem0 v6763 ) ) (<= 0 (T2_elem1 v6763 ) ) ) )
            (assert (= v6763 (select v6760 0 ) ) )
            (declare-fun v6764 () UInt )
            (assert (<= 0 v6764 ) )
            (assert (<= v6764 dlc_UInt_max ) )
            (assert (= v6764 (T2_elem0 v6763 ) ) )
            (declare-fun v6765 () Bool )
            (assert true )
            (assert (= v6765 (= 0 v6764 ) ) )
            (push 1 ) ;; {
              (assert (not v6765 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6765 )
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (push 1 ) ;; {
    (declare-fun v7644 () Address )
    (assert true )
    (declare-fun v7645 () Address )
    (assert true )
    (declare-fun v7646 () Address )
    (assert true )
    (declare-fun v7647 () Address )
    (assert true )
    (declare-fun v7648 () Address )
    (assert true )
    (declare-fun v7649 () Address )
    (assert true )
    (declare-fun v7650 () Address )
    (assert true )
    (declare-fun v7651 () Address )
    (assert true )
    (declare-fun v2978 () T2 )
    (assert (and (<= 0 (T2_elem0 v2978 ) ) (<= 0 (T2_elem1 v2978 ) ) ) )
    (assert (= v2978 (T2_cons 0 0 false ) ) )
    (declare-fun v2979 () T1 )
    (assert (and (<= 0 (T2_elem0 (select v2979 0 ) ) ) (<= 0 (T2_elem1 (select v2979 0 ) ) ) ) )
    (assert (= v2979 (T1_cons v2978 ) ) )
    (declare-fun v2980 () T0 )
    (assert true )
    (assert (= v2980 (T0_cons dlc_Token_zero ) ) )
    (push 1 ) ;; {
      (pop 1 ) ;; }
    (push 1 ) ;; {
      (declare-fun v3007 () Address )
      (assert true )
      (declare-fun v3008 () T20 )
      (assert (<= 0 (T20_number_of_tokens_to_deposit v3008 ) ) )
      (declare-fun v3009 () Token )
      (assert true )
      (declare-fun v3010 () T16 )
      (assert (<= 0 (T16_number_of_tokens_to_deposit v3010 ) ) )
      (declare-fun v3011 () T14 )
      (assert (and (<= 0 (T14_duration_in_blocks v3011 ) ) (<= 0 (T14_principle v3011 ) ) ) )
      (declare-fun v3012 () Address )
      (assert true )
      (declare-fun pv_net7652 () UInt )
      (assert (<= 0 pv_net7652 ) )
      (declare-fun pv_tok7654 () Token )
      (assert true )
      (declare-fun pv_ks7653 () (Array Token UInt ) )
      (assert (<= 0 (select pv_ks7653 pv_tok7654 ) ) )
      (declare-fun v7655 () Address )
      (assert true )
      (declare-fun v7656 () Address )
      (assert true )
      (declare-fun v7657 () Address )
      (assert true )
      (declare-fun v7658 () Address )
      (assert true )
      (declare-fun v7659 () Address )
      (assert true )
      (declare-fun v7660 () Address )
      (assert true )
      (declare-fun v7661 () Address )
      (assert true )
      (declare-fun v7662 () Address )
      (assert true )
      (declare-fun v3013 () UInt )
      (assert (<= 0 v3013 ) )
      (declare-fun v3014 () UInt )
      (assert (<= 0 v3014 ) )
      (declare-fun v54 () Bool )
      (assert true )
      (assert (= v3013 0 ) )
      (assert (= v3014 0 ) )
      (declare-fun v3015 () T2 )
      (assert (and (<= 0 (T2_elem0 v3015 ) ) (<= 0 (T2_elem1 v3015 ) ) ) )
      (assert (= v3015 (select v2979 0 ) ) )
      (declare-fun v3016 () T2 )
      (assert (and (<= 0 (T2_elem0 v3016 ) ) (<= 0 (T2_elem1 v3016 ) ) ) )
      (assert (= v3016 (T2_cons 0 (T2_elem1 v3015 ) (T2_elem2 v3015 ) ) ) )
      (declare-fun v3017 () T1 )
      (assert (and (<= 0 (T2_elem0 (select v3017 0 ) ) ) (<= 0 (T2_elem1 (select v3017 0 ) ) ) ) )
      (assert (= v3017 (store v2979 0 v3016 ) ) )
      (declare-fun v3018 () T0 )
      (assert true )
      (assert (= v3018 (store v2980 0 v3009 ) ) )
      (assert (= 0 pv_net7652 ) )
      (declare-fun v3019 () Token )
      (assert true )
      (assert (= v3019 (T20_paymentAsset v3008 ) ) )
      (push 1 ) ;; {
        (pop 1 ) ;; }
      (push 1 ) ;; {
        (declare-fun v3021 () Address )
        (assert true )
        (declare-fun pv_net7663 () UInt )
        (assert (<= 0 pv_net7663 ) )
        (declare-fun pv_tok7665 () Token )
        (assert true )
        (declare-fun pv_ks7664 () (Array Token UInt ) )
        (assert (<= 0 (select pv_ks7664 pv_tok7665 ) ) )
        (declare-fun v7666 () Address )
        (assert true )
        (declare-fun v7667 () Address )
        (assert true )
        (declare-fun v7668 () Address )
        (assert true )
        (declare-fun v7669 () Address )
        (assert true )
        (declare-fun v7670 () Address )
        (assert true )
        (declare-fun v7671 () Address )
        (assert true )
        (declare-fun v7672 () Address )
        (assert true )
        (declare-fun v7673 () Address )
        (assert true )
        (declare-fun v3022 () UInt )
        (assert (<= 0 v3022 ) )
        (declare-fun v3023 () UInt )
        (assert (<= 0 v3023 ) )
        (declare-fun v64 () Bool )
        (assert true )
        (assert (= v3022 (+ v3013 1 ) ) )
        (assert (>= v3023 v3014 ) )
        (declare-fun v3024 () UInt )
        (assert (<= 0 v3024 ) )
        (assert (<= v3024 dlc_UInt_max ) )
        (assert (= v3024 (T20_number_of_tokens_to_deposit v3008 ) ) )
        (assert (= 0 pv_net7663 ) )
        (declare-fun v3025 () T2 )
        (assert (and (<= 0 (T2_elem0 v3025 ) ) (<= 0 (T2_elem1 v3025 ) ) ) )
        (assert (= v3025 (select v3017 0 ) ) )
        (declare-fun v3026 () UInt )
        (assert (<= 0 v3026 ) )
        (assert (<= v3026 dlc_UInt_max ) )
        (assert (= v3026 (T2_elem0 v3025 ) ) )
        (declare-fun v3027 () UInt )
        (assert (<= 0 v3027 ) )
        (assert (<= v3027 dlc_UInt_max ) )
        (assert (= v3027 (+ v3026 v3024 ) ) )
        (declare-fun v3029 () T2 )
        (assert (and (<= 0 (T2_elem0 v3029 ) ) (<= 0 (T2_elem1 v3029 ) ) ) )
        (assert (= v3029 (T2_cons v3027 (T2_elem1 v3025 ) (T2_elem2 v3025 ) ) ) )
        (declare-fun v3030 () T1 )
        (assert (and (<= 0 (T2_elem0 (select v3030 0 ) ) ) (<= 0 (T2_elem1 (select v3030 0 ) ) ) ) )
        (assert (= v3030 (store v3017 0 v3029 ) ) )
        (assert (= v3024 (select pv_ks7664 v3009 ) ) )
        (declare-fun v3031 () Bool )
        (assert true )
        (assert (= v3031 (= v3007 v3021 ) ) )
        (assert v3031 )
        (push 1 ) ;; {
          (declare-fun v7674 () Address )
          (assert true )
          (declare-fun v7675 () Address )
          (assert true )
          (declare-fun v7676 () Address )
          (assert true )
          (declare-fun v7677 () Address )
          (assert true )
          (declare-fun v7678 () Address )
          (assert true )
          (declare-fun v7679 () Address )
          (assert true )
          (declare-fun v7680 () Address )
          (assert true )
          (declare-fun v7681 () Address )
          (assert true )
          (pop 1 ) ;; }
        (declare-fun v3037 () T19 )
        (assert (T19_inv v3037 ) )
        (assert (= v3037 (T19_None null ) ) )
        (declare-fun v3038 () T18 )
        (assert (and (T19_inv (T18_acceptedAddress v3038 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3038 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3038 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3038 ) ) ) ) (<= 0 (T18_offers v3038 ) ) ) )
        (assert (= v3038 (T18_cons v3037 v3010 true false v3011 false 0 ) ) )
        (push 1 ) ;; {
          (push 1 ) ;; {
            (declare-fun v3039 () T18 )
            (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
            (assert (= v3039 v3038 ) )
            (declare-fun v3040 () UInt )
            (assert (<= 0 v3040 ) )
            (assert (<= v3040 dlc_UInt_max ) )
            (assert (= v3040 v3022 ) )
            (declare-fun v3041 () UInt )
            (assert (<= 0 v3041 ) )
            (assert (<= v3041 dlc_UInt_max ) )
            (assert (= v3041 v3013 ) )
            (declare-fun v3042 () UInt )
            (assert (<= 0 v3042 ) )
            (assert (<= v3042 dlc_UInt_max ) )
            (assert (= v3042 v3013 ) )
            (declare-fun v3043 () UInt )
            (assert (<= 0 v3043 ) )
            (assert (<= v3043 dlc_UInt_max ) )
            (assert (= v3043 v3023 ) )
            (declare-fun v3044 () UInt )
            (assert (<= 0 v3044 ) )
            (assert (<= v3044 dlc_UInt_max ) )
            (assert (= v3044 v3014 ) )
            (declare-fun v3045 () UInt )
            (assert (<= 0 v3045 ) )
            (assert (<= v3045 dlc_UInt_max ) )
            (assert (= v3045 v3014 ) )
            (declare-fun v3046 () T1 )
            (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
            (assert (= v3046 v3030 ) )
            (declare-fun v3047 () UInt )
            (assert (<= 0 v3047 ) )
            (assert (<= v3047 dlc_UInt_max ) )
            (assert (= v3047 0 ) )
            (declare-fun v3059 () Bool )
            (assert true )
            (assert (= v3059 (= v3047 0 ) ) )
            (push 1 ) ;; {
              (assert (not v3059 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array UInt T22 ) )
          (declare-fun v3039 () T18 )
          (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
          (declare-fun v3040 () UInt )
          (assert (<= 0 v3040 ) )
          (assert (<= v3040 dlc_UInt_max ) )
          (declare-fun v3041 () UInt )
          (assert (<= 0 v3041 ) )
          (assert (<= v3041 dlc_UInt_max ) )
          (declare-fun v3042 () UInt )
          (assert (<= 0 v3042 ) )
          (assert (<= v3042 dlc_UInt_max ) )
          (declare-fun v3043 () UInt )
          (assert (<= 0 v3043 ) )
          (assert (<= v3043 dlc_UInt_max ) )
          (declare-fun v3044 () UInt )
          (assert (<= 0 v3044 ) )
          (assert (<= v3044 dlc_UInt_max ) )
          (declare-fun v3045 () UInt )
          (assert (<= 0 v3045 ) )
          (assert (<= v3045 dlc_UInt_max ) )
          (declare-fun v3046 () T1 )
          (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
          (declare-fun v3047 () UInt )
          (assert (<= 0 v3047 ) )
          (assert (<= v3047 dlc_UInt_max ) )
          (declare-fun v3059 () Bool )
          (assert true )
          (assert (= v3059 (= v3047 0 ) ) )
          (assert v3059 )
          (declare-fun v3070 () Bool )
          (assert true )
          (assert (= v3070 (T18_continue v3039 ) ) )
          (assert v3070 )
          (declare-fun v3071 () T16 )
          (assert (<= 0 (T16_number_of_tokens_to_deposit v3071 ) ) )
          (assert (= v3071 (T18_config v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7683 () Address )
            (assert true )
            (declare-fun v7684 () Address )
            (assert true )
            (declare-fun v7685 () Address )
            (assert true )
            (declare-fun v7686 () Address )
            (assert true )
            (declare-fun v7687 () Address )
            (assert true )
            (declare-fun v7688 () Address )
            (assert true )
            (declare-fun v7689 () Address )
            (assert true )
            (declare-fun v7690 () Address )
            (assert true )
            (pop 1 ) ;; }
          (declare-fun v3077 () T14 )
          (assert (and (<= 0 (T14_duration_in_blocks v3077 ) ) (<= 0 (T14_principle v3077 ) ) ) )
          (assert (= v3077 (T18_loanTerms v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v7691 () Address )
            (assert true )
            (declare-fun v7692 () Address )
            (assert true )
            (declare-fun v7693 () Address )
            (assert true )
            (declare-fun v7694 () Address )
            (assert true )
            (declare-fun v7695 () Address )
            (assert true )
            (declare-fun v7696 () Address )
            (assert true )
            (declare-fun v7697 () Address )
            (assert true )
            (declare-fun v7698 () Address )
            (assert true )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v7699 () Address )
            (assert true )
            (declare-fun v7700 () Address )
            (assert true )
            (declare-fun v7701 () Address )
            (assert true )
            (declare-fun v7702 () Address )
            (assert true )
            (declare-fun v7703 () Address )
            (assert true )
            (declare-fun v7704 () Address )
            (assert true )
            (declare-fun v7705 () Address )
            (assert true )
            (declare-fun v7706 () Address )
            (assert true )
            (declare-fun v3081 () UInt )
            (assert (<= 0 v3081 ) )
            (declare-fun v3082 () T22 )
            (assert (T22_inv v3082 ) )
            (assert (= v3082 (select map0_1 v3081 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net7707 () UInt )
            (assert (<= 0 pv_net7707 ) )
            (declare-fun pv_tok7709 () Token )
            (assert true )
            (declare-fun pv_ks7708 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7708 pv_tok7709 ) ) )
            (declare-fun v7710 () Address )
            (assert true )
            (declare-fun v7711 () Address )
            (assert true )
            (declare-fun v7712 () Address )
            (assert true )
            (declare-fun v7713 () Address )
            (assert true )
            (declare-fun v7714 () Address )
            (assert true )
            (declare-fun v7715 () Address )
            (assert true )
            (declare-fun v7716 () Address )
            (assert true )
            (declare-fun v7717 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net7707 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7709 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net7707 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!2 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7710 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7714 () Address Address!val!1 ) (define-fun v7716 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7711 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7715 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v7717 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7713 () Address Address!val!1 ) (define-fun v7712 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks7708 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7718 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7718 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7718 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7718 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7718 ) ) ) ) (<= 0 (T18_offers v7718 ) ) ) )
                (assert (= v7718 v3641 ) )
                (declare-fun v7719 () UInt )
                (assert (<= 0 v7719 ) )
                (assert (<= v7719 dlc_UInt_max ) )
                (assert (= v7719 v3423 ) )
                (declare-fun v7720 () UInt )
                (assert (<= 0 v7720 ) )
                (assert (<= v7720 dlc_UInt_max ) )
                (assert (= v7720 v3040 ) )
                (declare-fun v7721 () UInt )
                (assert (<= 0 v7721 ) )
                (assert (<= v7721 dlc_UInt_max ) )
                (assert (= v7721 v3040 ) )
                (declare-fun v7722 () UInt )
                (assert (<= 0 v7722 ) )
                (assert (<= v7722 dlc_UInt_max ) )
                (assert (= v7722 v3424 ) )
                (declare-fun v7723 () UInt )
                (assert (<= 0 v7723 ) )
                (assert (<= v7723 dlc_UInt_max ) )
                (assert (= v7723 v3043 ) )
                (declare-fun v7724 () UInt )
                (assert (<= 0 v7724 ) )
                (assert (<= v7724 dlc_UInt_max ) )
                (assert (= v7724 v3043 ) )
                (declare-fun v7725 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7725 0 ) ) ) (<= 0 (T2_elem1 (select v7725 0 ) ) ) ) )
                (assert (= v7725 v3046 ) )
                (declare-fun v7726 () UInt )
                (assert (<= 0 v7726 ) )
                (assert (<= v7726 dlc_UInt_max ) )
                (assert (= v7726 v3047 ) )
                (declare-fun v7727 () Bool )
                (assert true )
                (assert (= v7727 (= v7726 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7727 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net7707 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7709 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net7707 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3931 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7710 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7714 () Address Address!val!1 ) (define-fun v7716 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7711 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7715 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v7717 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7713 () Address Address!val!1 ) (define-fun v7712 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks7708 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7728 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7728 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7728 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7728 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7728 ) ) ) ) (<= 0 (T18_offers v7728 ) ) ) )
                (assert (= v7728 v4143 ) )
                (declare-fun v7729 () UInt )
                (assert (<= 0 v7729 ) )
                (assert (<= v7729 dlc_UInt_max ) )
                (assert (= v7729 v3423 ) )
                (declare-fun v7730 () UInt )
                (assert (<= 0 v7730 ) )
                (assert (<= v7730 dlc_UInt_max ) )
                (assert (= v7730 v3040 ) )
                (declare-fun v7731 () UInt )
                (assert (<= 0 v7731 ) )
                (assert (<= v7731 dlc_UInt_max ) )
                (assert (= v7731 v3040 ) )
                (declare-fun v7732 () UInt )
                (assert (<= 0 v7732 ) )
                (assert (<= v7732 dlc_UInt_max ) )
                (assert (= v7732 v3424 ) )
                (declare-fun v7733 () UInt )
                (assert (<= 0 v7733 ) )
                (assert (<= v7733 dlc_UInt_max ) )
                (assert (= v7733 v3043 ) )
                (declare-fun v7734 () UInt )
                (assert (<= 0 v7734 ) )
                (assert (<= v7734 dlc_UInt_max ) )
                (assert (= v7734 v3043 ) )
                (declare-fun v7735 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7735 0 ) ) ) (<= 0 (T2_elem1 (select v7735 0 ) ) ) ) )
                (assert (= v7735 v3046 ) )
                (declare-fun v7736 () UInt )
                (assert (<= 0 v7736 ) )
                (assert (<= v7736 dlc_UInt_max ) )
                (assert (= v7736 v3047 ) )
                (declare-fun v7737 () Bool )
                (assert true )
                (assert (= v7737 (= v7736 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7737 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net7707 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7709 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net7707 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4422 () Bool true ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7710 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7714 () Address Address!val!1 ) (define-fun v7716 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7711 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7715 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v7717 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7713 () Address Address!val!1 ) (define-fun v7712 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks7708 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7738 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7738 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7738 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7738 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7738 ) ) ) ) (<= 0 (T18_offers v7738 ) ) ) )
                (assert (= v7738 v4646 ) )
                (declare-fun v7739 () UInt )
                (assert (<= 0 v7739 ) )
                (assert (<= v7739 dlc_UInt_max ) )
                (assert (= v7739 v3423 ) )
                (declare-fun v7740 () UInt )
                (assert (<= 0 v7740 ) )
                (assert (<= v7740 dlc_UInt_max ) )
                (assert (= v7740 v3040 ) )
                (declare-fun v7741 () UInt )
                (assert (<= 0 v7741 ) )
                (assert (<= v7741 dlc_UInt_max ) )
                (assert (= v7741 v3040 ) )
                (declare-fun v7742 () UInt )
                (assert (<= 0 v7742 ) )
                (assert (<= v7742 dlc_UInt_max ) )
                (assert (= v7742 v3424 ) )
                (declare-fun v7743 () UInt )
                (assert (<= 0 v7743 ) )
                (assert (<= v7743 dlc_UInt_max ) )
                (assert (= v7743 v3043 ) )
                (declare-fun v7744 () UInt )
                (assert (<= 0 v7744 ) )
                (assert (<= v7744 dlc_UInt_max ) )
                (assert (= v7744 v3043 ) )
                (declare-fun v7745 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7745 0 ) ) ) (<= 0 (T2_elem1 (select v7745 0 ) ) ) ) )
                (assert (= v7745 v3046 ) )
                (declare-fun v7746 () UInt )
                (assert (<= 0 v7746 ) )
                (assert (<= v7746 dlc_UInt_max ) )
                (assert (= v7746 v3047 ) )
                (declare-fun v7747 () Bool )
                (assert true )
                (assert (= v7747 (= v7746 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7747 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net7707 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7709 () Token Token!val!16 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net7707 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4914 () Bool true ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7710 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7714 () Address Address!val!1 ) (define-fun v7716 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7711 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7715 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v7717 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7713 () Address Address!val!1 ) (define-fun v7712 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks7708 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7748 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7748 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7748 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7748 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7748 ) ) ) ) (<= 0 (T18_offers v7748 ) ) ) )
                (assert (= v7748 v5149 ) )
                (declare-fun v7749 () UInt )
                (assert (<= 0 v7749 ) )
                (assert (<= v7749 dlc_UInt_max ) )
                (assert (= v7749 v3423 ) )
                (declare-fun v7750 () UInt )
                (assert (<= 0 v7750 ) )
                (assert (<= v7750 dlc_UInt_max ) )
                (assert (= v7750 v3040 ) )
                (declare-fun v7751 () UInt )
                (assert (<= 0 v7751 ) )
                (assert (<= v7751 dlc_UInt_max ) )
                (assert (= v7751 v3040 ) )
                (declare-fun v7752 () UInt )
                (assert (<= 0 v7752 ) )
                (assert (<= v7752 dlc_UInt_max ) )
                (assert (= v7752 v3424 ) )
                (declare-fun v7753 () UInt )
                (assert (<= 0 v7753 ) )
                (assert (<= v7753 dlc_UInt_max ) )
                (assert (= v7753 v3043 ) )
                (declare-fun v7754 () UInt )
                (assert (<= 0 v7754 ) )
                (assert (<= v7754 dlc_UInt_max ) )
                (assert (= v7754 v3043 ) )
                (declare-fun v7755 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7755 0 ) ) ) (<= 0 (T2_elem1 (select v7755 0 ) ) ) ) )
                (assert (= v7755 v3046 ) )
                (declare-fun v7756 () UInt )
                (assert (<= 0 v7756 ) )
                (assert (<= v7756 dlc_UInt_max ) )
                (assert (= v7756 v3047 ) )
                (declare-fun v7757 () Bool )
                (assert true )
                (assert (= v7757 (= v7756 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7757 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net7707 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7709 () Token Token!val!15 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net7707 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7710 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7714 () Address Address!val!1 ) (define-fun v7716 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7711 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7715 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v7717 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7713 () Address Address!val!1 ) (define-fun v7712 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks7708 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7758 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7758 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7758 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7758 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7758 ) ) ) ) (<= 0 (T18_offers v7758 ) ) ) )
                (assert (= v7758 v5650 ) )
                (declare-fun v7759 () UInt )
                (assert (<= 0 v7759 ) )
                (assert (<= v7759 dlc_UInt_max ) )
                (assert (= v7759 v3423 ) )
                (declare-fun v7760 () UInt )
                (assert (<= 0 v7760 ) )
                (assert (<= v7760 dlc_UInt_max ) )
                (assert (= v7760 v3040 ) )
                (declare-fun v7761 () UInt )
                (assert (<= 0 v7761 ) )
                (assert (<= v7761 dlc_UInt_max ) )
                (assert (= v7761 v3040 ) )
                (declare-fun v7762 () UInt )
                (assert (<= 0 v7762 ) )
                (assert (<= v7762 dlc_UInt_max ) )
                (assert (= v7762 v3424 ) )
                (declare-fun v7763 () UInt )
                (assert (<= 0 v7763 ) )
                (assert (<= v7763 dlc_UInt_max ) )
                (assert (= v7763 v3043 ) )
                (declare-fun v7764 () UInt )
                (assert (<= 0 v7764 ) )
                (assert (<= v7764 dlc_UInt_max ) )
                (assert (= v7764 v3043 ) )
                (declare-fun v7765 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7765 0 ) ) ) (<= 0 (T2_elem1 (select v7765 0 ) ) ) ) )
                (assert (= v7765 v3046 ) )
                (declare-fun v7766 () UInt )
                (assert (<= 0 v7766 ) )
                (assert (<= v7766 dlc_UInt_max ) )
                (assert (= v7766 v3047 ) )
                (declare-fun v7767 () Bool )
                (assert true )
                (assert (= v7767 (= v7766 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7767 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net7707 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun pv_tok7709 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net7707 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7710 () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7714 () Address Address!val!0 ) (define-fun v7716 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7711 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7715 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v7717 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7713 () Address Address!val!0 ) (define-fun v7712 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks7708 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7768 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7768 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7768 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7768 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7768 ) ) ) ) (<= 0 (T18_offers v7768 ) ) ) )
                (assert (= v7768 v6217 ) )
                (declare-fun v7769 () UInt )
                (assert (<= 0 v7769 ) )
                (assert (<= v7769 dlc_UInt_max ) )
                (assert (= v7769 v3423 ) )
                (declare-fun v7770 () UInt )
                (assert (<= 0 v7770 ) )
                (assert (<= v7770 dlc_UInt_max ) )
                (assert (= v7770 v3040 ) )
                (declare-fun v7771 () UInt )
                (assert (<= 0 v7771 ) )
                (assert (<= v7771 dlc_UInt_max ) )
                (assert (= v7771 v3040 ) )
                (declare-fun v7772 () UInt )
                (assert (<= 0 v7772 ) )
                (assert (<= v7772 dlc_UInt_max ) )
                (assert (= v7772 v3424 ) )
                (declare-fun v7773 () UInt )
                (assert (<= 0 v7773 ) )
                (assert (<= v7773 dlc_UInt_max ) )
                (assert (= v7773 v3043 ) )
                (declare-fun v7774 () UInt )
                (assert (<= 0 v7774 ) )
                (assert (<= v7774 dlc_UInt_max ) )
                (assert (= v7774 v3043 ) )
                (declare-fun v7775 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7775 0 ) ) ) (<= 0 (T2_elem1 (select v7775 0 ) ) ) ) )
                (assert (= v7775 v6206 ) )
                (declare-fun v7776 () UInt )
                (assert (<= 0 v7776 ) )
                (assert (<= v7776 dlc_UInt_max ) )
                (assert (= v7776 v6152 ) )
                (declare-fun v7777 () Bool )
                (assert true )
                (assert (= v7777 (= v7776 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7777 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net7707 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_ks7708 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7709 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net7707 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7710 () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7714 () Address Address!val!0 ) (define-fun v7716 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7711 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7715 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v7717 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7713 () Address Address!val!0 ) (define-fun v7712 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks7708 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7779 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7779 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7779 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7779 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7779 ) ) ) ) (<= 0 (T18_offers v7779 ) ) ) )
                (assert (= v7779 v6727 ) )
                (declare-fun v7780 () UInt )
                (assert (<= 0 v7780 ) )
                (assert (<= v7780 dlc_UInt_max ) )
                (assert (= v7780 v3423 ) )
                (declare-fun v7781 () UInt )
                (assert (<= 0 v7781 ) )
                (assert (<= v7781 dlc_UInt_max ) )
                (assert (= v7781 v3040 ) )
                (declare-fun v7782 () UInt )
                (assert (<= 0 v7782 ) )
                (assert (<= v7782 dlc_UInt_max ) )
                (assert (= v7782 v3040 ) )
                (declare-fun v7783 () UInt )
                (assert (<= 0 v7783 ) )
                (assert (<= v7783 dlc_UInt_max ) )
                (assert (= v7783 v3424 ) )
                (declare-fun v7784 () UInt )
                (assert (<= 0 v7784 ) )
                (assert (<= v7784 dlc_UInt_max ) )
                (assert (= v7784 v3043 ) )
                (declare-fun v7785 () UInt )
                (assert (<= 0 v7785 ) )
                (assert (<= v7785 dlc_UInt_max ) )
                (assert (= v7785 v3043 ) )
                (declare-fun v7786 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7786 0 ) ) ) (<= 0 (T2_elem1 (select v7786 0 ) ) ) ) )
                (assert (= v7786 v6430 ) )
                (declare-fun v7787 () UInt )
                (assert (<= 0 v7787 ) )
                (assert (<= v7787 dlc_UInt_max ) )
                (assert (= v7787 v6394 ) )
                (declare-fun v7788 () Bool )
                (assert true )
                (assert (= v7788 (= v7787 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7788 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun pv_ks7708 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!13 1142 ) Token!val!3 0 ) ) (define-fun pv_tok7709 () Token Token!val!13 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v7788 () Bool false ) (define-fun v7787 () Int 1 ) (define-fun v7786 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v7785 () Int 0 ) (define-fun v7784 () Int 0 ) (define-fun v7783 () Int 0 ) (define-fun v7782 () Int 0 ) (define-fun v7781 () Int 0 ) (define-fun v7780 () Int 1 ) (define-fun v7779 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net7707 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7710 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7714 () Address Address!val!0 ) (define-fun v7716 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7711 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7715 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v7717 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7713 () Address Address!val!0 ) (define-fun v7712 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net7789 () UInt )
            (assert (<= 0 pv_net7789 ) )
            (declare-fun pv_tok7791 () Token )
            (assert true )
            (declare-fun pv_ks7790 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7790 pv_tok7791 ) ) )
            (declare-fun v7792 () Address )
            (assert true )
            (declare-fun v7793 () Address )
            (assert true )
            (declare-fun v7794 () Address )
            (assert true )
            (declare-fun v7795 () Address )
            (assert true )
            (declare-fun v7796 () Address )
            (assert true )
            (declare-fun v7797 () Address )
            (assert true )
            (declare-fun v7798 () Address )
            (assert true )
            (declare-fun v7799 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net7789 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!14 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net7789 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!2 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7799 () Address Address!val!1 ) (define-fun v7796 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7793 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7798 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7797 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7795 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7794 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks7790 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7800 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7800 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7800 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7800 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7800 ) ) ) ) (<= 0 (T18_offers v7800 ) ) ) )
                (assert (= v7800 v3641 ) )
                (declare-fun v7801 () UInt )
                (assert (<= 0 v7801 ) )
                (assert (<= v7801 dlc_UInt_max ) )
                (assert (= v7801 v3423 ) )
                (declare-fun v7802 () UInt )
                (assert (<= 0 v7802 ) )
                (assert (<= v7802 dlc_UInt_max ) )
                (assert (= v7802 v3040 ) )
                (declare-fun v7803 () UInt )
                (assert (<= 0 v7803 ) )
                (assert (<= v7803 dlc_UInt_max ) )
                (assert (= v7803 v3040 ) )
                (declare-fun v7804 () UInt )
                (assert (<= 0 v7804 ) )
                (assert (<= v7804 dlc_UInt_max ) )
                (assert (= v7804 v3424 ) )
                (declare-fun v7805 () UInt )
                (assert (<= 0 v7805 ) )
                (assert (<= v7805 dlc_UInt_max ) )
                (assert (= v7805 v3043 ) )
                (declare-fun v7806 () UInt )
                (assert (<= 0 v7806 ) )
                (assert (<= v7806 dlc_UInt_max ) )
                (assert (= v7806 v3043 ) )
                (declare-fun v7807 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7807 0 ) ) ) (<= 0 (T2_elem1 (select v7807 0 ) ) ) ) )
                (assert (= v7807 v3046 ) )
                (declare-fun v7808 () UInt )
                (assert (<= 0 v7808 ) )
                (assert (<= v7808 dlc_UInt_max ) )
                (assert (= v7808 v3047 ) )
                (declare-fun v7809 () Bool )
                (assert true )
                (assert (= v7809 (= v7808 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7809 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net7789 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!14 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net7789 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3931 () Bool true ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7799 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7793 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7798 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7797 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7795 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7794 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks7790 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7810 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7810 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7810 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7810 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7810 ) ) ) ) (<= 0 (T18_offers v7810 ) ) ) )
                (assert (= v7810 v4143 ) )
                (declare-fun v7811 () UInt )
                (assert (<= 0 v7811 ) )
                (assert (<= v7811 dlc_UInt_max ) )
                (assert (= v7811 v3423 ) )
                (declare-fun v7812 () UInt )
                (assert (<= 0 v7812 ) )
                (assert (<= v7812 dlc_UInt_max ) )
                (assert (= v7812 v3040 ) )
                (declare-fun v7813 () UInt )
                (assert (<= 0 v7813 ) )
                (assert (<= v7813 dlc_UInt_max ) )
                (assert (= v7813 v3040 ) )
                (declare-fun v7814 () UInt )
                (assert (<= 0 v7814 ) )
                (assert (<= v7814 dlc_UInt_max ) )
                (assert (= v7814 v3424 ) )
                (declare-fun v7815 () UInt )
                (assert (<= 0 v7815 ) )
                (assert (<= v7815 dlc_UInt_max ) )
                (assert (= v7815 v3043 ) )
                (declare-fun v7816 () UInt )
                (assert (<= 0 v7816 ) )
                (assert (<= v7816 dlc_UInt_max ) )
                (assert (= v7816 v3043 ) )
                (declare-fun v7817 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7817 0 ) ) ) (<= 0 (T2_elem1 (select v7817 0 ) ) ) ) )
                (assert (= v7817 v3046 ) )
                (declare-fun v7818 () UInt )
                (assert (<= 0 v7818 ) )
                (assert (<= v7818 dlc_UInt_max ) )
                (assert (= v7818 v3047 ) )
                (declare-fun v7819 () Bool )
                (assert true )
                (assert (= v7819 (= v7818 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7819 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net7789 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!14 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net7789 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v4422 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7799 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7793 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7798 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7797 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7795 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7794 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks7790 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7820 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7820 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7820 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7820 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7820 ) ) ) ) (<= 0 (T18_offers v7820 ) ) ) )
                (assert (= v7820 v4646 ) )
                (declare-fun v7821 () UInt )
                (assert (<= 0 v7821 ) )
                (assert (<= v7821 dlc_UInt_max ) )
                (assert (= v7821 v3423 ) )
                (declare-fun v7822 () UInt )
                (assert (<= 0 v7822 ) )
                (assert (<= v7822 dlc_UInt_max ) )
                (assert (= v7822 v3040 ) )
                (declare-fun v7823 () UInt )
                (assert (<= 0 v7823 ) )
                (assert (<= v7823 dlc_UInt_max ) )
                (assert (= v7823 v3040 ) )
                (declare-fun v7824 () UInt )
                (assert (<= 0 v7824 ) )
                (assert (<= v7824 dlc_UInt_max ) )
                (assert (= v7824 v3424 ) )
                (declare-fun v7825 () UInt )
                (assert (<= 0 v7825 ) )
                (assert (<= v7825 dlc_UInt_max ) )
                (assert (= v7825 v3043 ) )
                (declare-fun v7826 () UInt )
                (assert (<= 0 v7826 ) )
                (assert (<= v7826 dlc_UInt_max ) )
                (assert (= v7826 v3043 ) )
                (declare-fun v7827 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7827 0 ) ) ) (<= 0 (T2_elem1 (select v7827 0 ) ) ) ) )
                (assert (= v7827 v3046 ) )
                (declare-fun v7828 () UInt )
                (assert (<= 0 v7828 ) )
                (assert (<= v7828 dlc_UInt_max ) )
                (assert (= v7828 v3047 ) )
                (declare-fun v7829 () Bool )
                (assert true )
                (assert (= v7829 (= v7828 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7829 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net7789 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!16 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net7789 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4914 () Bool true ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7799 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7793 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7798 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7797 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7795 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7794 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks7790 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7830 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7830 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7830 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7830 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7830 ) ) ) ) (<= 0 (T18_offers v7830 ) ) ) )
                (assert (= v7830 v5149 ) )
                (declare-fun v7831 () UInt )
                (assert (<= 0 v7831 ) )
                (assert (<= v7831 dlc_UInt_max ) )
                (assert (= v7831 v3423 ) )
                (declare-fun v7832 () UInt )
                (assert (<= 0 v7832 ) )
                (assert (<= v7832 dlc_UInt_max ) )
                (assert (= v7832 v3040 ) )
                (declare-fun v7833 () UInt )
                (assert (<= 0 v7833 ) )
                (assert (<= v7833 dlc_UInt_max ) )
                (assert (= v7833 v3040 ) )
                (declare-fun v7834 () UInt )
                (assert (<= 0 v7834 ) )
                (assert (<= v7834 dlc_UInt_max ) )
                (assert (= v7834 v3424 ) )
                (declare-fun v7835 () UInt )
                (assert (<= 0 v7835 ) )
                (assert (<= v7835 dlc_UInt_max ) )
                (assert (= v7835 v3043 ) )
                (declare-fun v7836 () UInt )
                (assert (<= 0 v7836 ) )
                (assert (<= v7836 dlc_UInt_max ) )
                (assert (= v7836 v3043 ) )
                (declare-fun v7837 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7837 0 ) ) ) (<= 0 (T2_elem1 (select v7837 0 ) ) ) ) )
                (assert (= v7837 v3046 ) )
                (declare-fun v7838 () UInt )
                (assert (<= 0 v7838 ) )
                (assert (<= v7838 dlc_UInt_max ) )
                (assert (= v7838 v3047 ) )
                (declare-fun v7839 () Bool )
                (assert true )
                (assert (= v7839 (= v7838 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7839 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net7789 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!15 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net7789 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v5401 () Bool true ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7799 () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7793 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7798 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7797 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7795 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7794 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks7790 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7840 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7840 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7840 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7840 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7840 ) ) ) ) (<= 0 (T18_offers v7840 ) ) ) )
                (assert (= v7840 v5650 ) )
                (declare-fun v7841 () UInt )
                (assert (<= 0 v7841 ) )
                (assert (<= v7841 dlc_UInt_max ) )
                (assert (= v7841 v3423 ) )
                (declare-fun v7842 () UInt )
                (assert (<= 0 v7842 ) )
                (assert (<= v7842 dlc_UInt_max ) )
                (assert (= v7842 v3040 ) )
                (declare-fun v7843 () UInt )
                (assert (<= 0 v7843 ) )
                (assert (<= v7843 dlc_UInt_max ) )
                (assert (= v7843 v3040 ) )
                (declare-fun v7844 () UInt )
                (assert (<= 0 v7844 ) )
                (assert (<= v7844 dlc_UInt_max ) )
                (assert (= v7844 v3424 ) )
                (declare-fun v7845 () UInt )
                (assert (<= 0 v7845 ) )
                (assert (<= v7845 dlc_UInt_max ) )
                (assert (= v7845 v3043 ) )
                (declare-fun v7846 () UInt )
                (assert (<= 0 v7846 ) )
                (assert (<= v7846 dlc_UInt_max ) )
                (assert (= v7846 v3043 ) )
                (declare-fun v7847 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7847 0 ) ) ) (<= 0 (T2_elem1 (select v7847 0 ) ) ) ) )
                (assert (= v7847 v3046 ) )
                (declare-fun v7848 () UInt )
                (assert (<= 0 v7848 ) )
                (assert (<= v7848 dlc_UInt_max ) )
                (assert (= v7848 v3047 ) )
                (declare-fun v7849 () Bool )
                (assert true )
                (assert (= v7849 (= v7848 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7849 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net7789 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!14 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net7789 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7799 () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7793 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7798 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7797 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7795 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7794 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks7790 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7850 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7850 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7850 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7850 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7850 ) ) ) ) (<= 0 (T18_offers v7850 ) ) ) )
                (assert (= v7850 v6217 ) )
                (declare-fun v7851 () UInt )
                (assert (<= 0 v7851 ) )
                (assert (<= v7851 dlc_UInt_max ) )
                (assert (= v7851 v3423 ) )
                (declare-fun v7852 () UInt )
                (assert (<= 0 v7852 ) )
                (assert (<= v7852 dlc_UInt_max ) )
                (assert (= v7852 v3040 ) )
                (declare-fun v7853 () UInt )
                (assert (<= 0 v7853 ) )
                (assert (<= v7853 dlc_UInt_max ) )
                (assert (= v7853 v3040 ) )
                (declare-fun v7854 () UInt )
                (assert (<= 0 v7854 ) )
                (assert (<= v7854 dlc_UInt_max ) )
                (assert (= v7854 v3424 ) )
                (declare-fun v7855 () UInt )
                (assert (<= 0 v7855 ) )
                (assert (<= v7855 dlc_UInt_max ) )
                (assert (= v7855 v3043 ) )
                (declare-fun v7856 () UInt )
                (assert (<= 0 v7856 ) )
                (assert (<= v7856 dlc_UInt_max ) )
                (assert (= v7856 v3043 ) )
                (declare-fun v7857 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7857 0 ) ) ) (<= 0 (T2_elem1 (select v7857 0 ) ) ) ) )
                (assert (= v7857 v6206 ) )
                (declare-fun v7858 () UInt )
                (assert (<= 0 v7858 ) )
                (assert (<= v7858 dlc_UInt_max ) )
                (assert (= v7858 v6152 ) )
                (declare-fun v7859 () Bool )
                (assert true )
                (assert (= v7859 (= v7858 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7859 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net7789 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!14 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net7789 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7799 () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7796 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7793 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7798 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7797 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7795 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7794 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks7790 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7861 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7861 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7861 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7861 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7861 ) ) ) ) (<= 0 (T18_offers v7861 ) ) ) )
                (assert (= v7861 v6727 ) )
                (declare-fun v7862 () UInt )
                (assert (<= 0 v7862 ) )
                (assert (<= v7862 dlc_UInt_max ) )
                (assert (= v7862 v3423 ) )
                (declare-fun v7863 () UInt )
                (assert (<= 0 v7863 ) )
                (assert (<= v7863 dlc_UInt_max ) )
                (assert (= v7863 v3040 ) )
                (declare-fun v7864 () UInt )
                (assert (<= 0 v7864 ) )
                (assert (<= v7864 dlc_UInt_max ) )
                (assert (= v7864 v3040 ) )
                (declare-fun v7865 () UInt )
                (assert (<= 0 v7865 ) )
                (assert (<= v7865 dlc_UInt_max ) )
                (assert (= v7865 v3424 ) )
                (declare-fun v7866 () UInt )
                (assert (<= 0 v7866 ) )
                (assert (<= v7866 dlc_UInt_max ) )
                (assert (= v7866 v3043 ) )
                (declare-fun v7867 () UInt )
                (assert (<= 0 v7867 ) )
                (assert (<= v7867 dlc_UInt_max ) )
                (assert (= v7867 v3043 ) )
                (declare-fun v7868 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7868 0 ) ) ) (<= 0 (T2_elem1 (select v7868 0 ) ) ) ) )
                (assert (= v7868 v6430 ) )
                (declare-fun v7869 () UInt )
                (assert (<= 0 v7869 ) )
                (assert (<= v7869 dlc_UInt_max ) )
                (assert (= v7869 v6394 ) )
                (declare-fun v7870 () Bool )
                (assert true )
                (assert (= v7870 (= v7869 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7870 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun pv_tok7791 () Token Token!val!13 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_ks7790 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!13 1142 ) Token!val!3 0 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v7870 () Bool false ) (define-fun v7869 () Int 1 ) (define-fun v7868 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v7867 () Int 0 ) (define-fun v7866 () Int 0 ) (define-fun v7865 () Int 0 ) (define-fun v7864 () Int 0 ) (define-fun v7863 () Int 0 ) (define-fun v7862 () Int 1 ) (define-fun v7861 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net7789 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7799 () Address Address!val!0 ) (define-fun v7796 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7793 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7792 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7798 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7797 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7795 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7794 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net7871 () UInt )
            (assert (<= 0 pv_net7871 ) )
            (declare-fun pv_tok7873 () Token )
            (assert true )
            (declare-fun pv_ks7872 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7872 pv_tok7873 ) ) )
            (declare-fun v7874 () Address )
            (assert true )
            (declare-fun v7875 () Address )
            (assert true )
            (declare-fun v7876 () Address )
            (assert true )
            (declare-fun v7877 () Address )
            (assert true )
            (declare-fun v7878 () Address )
            (assert true )
            (declare-fun v7879 () Address )
            (assert true )
            (declare-fun v7880 () Address )
            (assert true )
            (declare-fun v7881 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net7871 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7873 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net7871 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!2 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7877 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7875 () Address Address!val!1 ) (define-fun v7878 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7881 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7879 () Address Address!val!1 ) (define-fun v7880 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7874 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7876 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks7872 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7882 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7882 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7882 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7882 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7882 ) ) ) ) (<= 0 (T18_offers v7882 ) ) ) )
                (assert (= v7882 v3641 ) )
                (declare-fun v7883 () UInt )
                (assert (<= 0 v7883 ) )
                (assert (<= v7883 dlc_UInt_max ) )
                (assert (= v7883 v3423 ) )
                (declare-fun v7884 () UInt )
                (assert (<= 0 v7884 ) )
                (assert (<= v7884 dlc_UInt_max ) )
                (assert (= v7884 v3040 ) )
                (declare-fun v7885 () UInt )
                (assert (<= 0 v7885 ) )
                (assert (<= v7885 dlc_UInt_max ) )
                (assert (= v7885 v3040 ) )
                (declare-fun v7886 () UInt )
                (assert (<= 0 v7886 ) )
                (assert (<= v7886 dlc_UInt_max ) )
                (assert (= v7886 v3424 ) )
                (declare-fun v7887 () UInt )
                (assert (<= 0 v7887 ) )
                (assert (<= v7887 dlc_UInt_max ) )
                (assert (= v7887 v3043 ) )
                (declare-fun v7888 () UInt )
                (assert (<= 0 v7888 ) )
                (assert (<= v7888 dlc_UInt_max ) )
                (assert (= v7888 v3043 ) )
                (declare-fun v7889 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7889 0 ) ) ) (<= 0 (T2_elem1 (select v7889 0 ) ) ) ) )
                (assert (= v7889 v3046 ) )
                (declare-fun v7890 () UInt )
                (assert (<= 0 v7890 ) )
                (assert (<= v7890 dlc_UInt_max ) )
                (assert (= v7890 v3047 ) )
                (declare-fun v7891 () Bool )
                (assert true )
                (assert (= v7891 (= v7890 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7891 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net7871 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok7873 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net7871 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3931 () Bool true ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7877 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7875 () Address Address!val!1 ) (define-fun v7878 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7881 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7879 () Address Address!val!1 ) (define-fun v7880 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7874 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7876 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks7872 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7892 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7892 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7892 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7892 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7892 ) ) ) ) (<= 0 (T18_offers v7892 ) ) ) )
                (assert (= v7892 v4143 ) )
                (declare-fun v7893 () UInt )
                (assert (<= 0 v7893 ) )
                (assert (<= v7893 dlc_UInt_max ) )
                (assert (= v7893 v3423 ) )
                (declare-fun v7894 () UInt )
                (assert (<= 0 v7894 ) )
                (assert (<= v7894 dlc_UInt_max ) )
                (assert (= v7894 v3040 ) )
                (declare-fun v7895 () UInt )
                (assert (<= 0 v7895 ) )
                (assert (<= v7895 dlc_UInt_max ) )
                (assert (= v7895 v3040 ) )
                (declare-fun v7896 () UInt )
                (assert (<= 0 v7896 ) )
                (assert (<= v7896 dlc_UInt_max ) )
                (assert (= v7896 v3424 ) )
                (declare-fun v7897 () UInt )
                (assert (<= 0 v7897 ) )
                (assert (<= v7897 dlc_UInt_max ) )
                (assert (= v7897 v3043 ) )
                (declare-fun v7898 () UInt )
                (assert (<= 0 v7898 ) )
                (assert (<= v7898 dlc_UInt_max ) )
                (assert (= v7898 v3043 ) )
                (declare-fun v7899 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7899 0 ) ) ) (<= 0 (T2_elem1 (select v7899 0 ) ) ) ) )
                (assert (= v7899 v3046 ) )
                (declare-fun v7900 () UInt )
                (assert (<= 0 v7900 ) )
                (assert (<= v7900 dlc_UInt_max ) )
                (assert (= v7900 v3047 ) )
                (declare-fun v7901 () Bool )
                (assert true )
                (assert (= v7901 (= v7900 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7901 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net7871 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7873 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net7871 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v4422 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7877 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7875 () Address Address!val!1 ) (define-fun v7878 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7881 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7879 () Address Address!val!1 ) (define-fun v7880 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7874 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7876 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks7872 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7902 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7902 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7902 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7902 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7902 ) ) ) ) (<= 0 (T18_offers v7902 ) ) ) )
                (assert (= v7902 v4646 ) )
                (declare-fun v7903 () UInt )
                (assert (<= 0 v7903 ) )
                (assert (<= v7903 dlc_UInt_max ) )
                (assert (= v7903 v3423 ) )
                (declare-fun v7904 () UInt )
                (assert (<= 0 v7904 ) )
                (assert (<= v7904 dlc_UInt_max ) )
                (assert (= v7904 v3040 ) )
                (declare-fun v7905 () UInt )
                (assert (<= 0 v7905 ) )
                (assert (<= v7905 dlc_UInt_max ) )
                (assert (= v7905 v3040 ) )
                (declare-fun v7906 () UInt )
                (assert (<= 0 v7906 ) )
                (assert (<= v7906 dlc_UInt_max ) )
                (assert (= v7906 v3424 ) )
                (declare-fun v7907 () UInt )
                (assert (<= 0 v7907 ) )
                (assert (<= v7907 dlc_UInt_max ) )
                (assert (= v7907 v3043 ) )
                (declare-fun v7908 () UInt )
                (assert (<= 0 v7908 ) )
                (assert (<= v7908 dlc_UInt_max ) )
                (assert (= v7908 v3043 ) )
                (declare-fun v7909 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7909 0 ) ) ) (<= 0 (T2_elem1 (select v7909 0 ) ) ) ) )
                (assert (= v7909 v3046 ) )
                (declare-fun v7910 () UInt )
                (assert (<= 0 v7910 ) )
                (assert (<= v7910 dlc_UInt_max ) )
                (assert (= v7910 v3047 ) )
                (declare-fun v7911 () Bool )
                (assert true )
                (assert (= v7911 (= v7910 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7911 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net7871 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7873 () Token Token!val!16 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net7871 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v4914 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7877 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7875 () Address Address!val!1 ) (define-fun v7878 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7881 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7879 () Address Address!val!1 ) (define-fun v7880 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7874 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7876 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks7872 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7912 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7912 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7912 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7912 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7912 ) ) ) ) (<= 0 (T18_offers v7912 ) ) ) )
                (assert (= v7912 v5149 ) )
                (declare-fun v7913 () UInt )
                (assert (<= 0 v7913 ) )
                (assert (<= v7913 dlc_UInt_max ) )
                (assert (= v7913 v3423 ) )
                (declare-fun v7914 () UInt )
                (assert (<= 0 v7914 ) )
                (assert (<= v7914 dlc_UInt_max ) )
                (assert (= v7914 v3040 ) )
                (declare-fun v7915 () UInt )
                (assert (<= 0 v7915 ) )
                (assert (<= v7915 dlc_UInt_max ) )
                (assert (= v7915 v3040 ) )
                (declare-fun v7916 () UInt )
                (assert (<= 0 v7916 ) )
                (assert (<= v7916 dlc_UInt_max ) )
                (assert (= v7916 v3424 ) )
                (declare-fun v7917 () UInt )
                (assert (<= 0 v7917 ) )
                (assert (<= v7917 dlc_UInt_max ) )
                (assert (= v7917 v3043 ) )
                (declare-fun v7918 () UInt )
                (assert (<= 0 v7918 ) )
                (assert (<= v7918 dlc_UInt_max ) )
                (assert (= v7918 v3043 ) )
                (declare-fun v7919 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7919 0 ) ) ) (<= 0 (T2_elem1 (select v7919 0 ) ) ) ) )
                (assert (= v7919 v3046 ) )
                (declare-fun v7920 () UInt )
                (assert (<= 0 v7920 ) )
                (assert (<= v7920 dlc_UInt_max ) )
                (assert (= v7920 v3047 ) )
                (declare-fun v7921 () Bool )
                (assert true )
                (assert (= v7921 (= v7920 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7921 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net7871 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7873 () Token Token!val!15 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net7871 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7877 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v7875 () Address Address!val!1 ) (define-fun v7878 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7881 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7879 () Address Address!val!1 ) (define-fun v7880 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7874 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7876 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks7872 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v7922 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7922 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7922 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7922 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7922 ) ) ) ) (<= 0 (T18_offers v7922 ) ) ) )
                (assert (= v7922 v5650 ) )
                (declare-fun v7923 () UInt )
                (assert (<= 0 v7923 ) )
                (assert (<= v7923 dlc_UInt_max ) )
                (assert (= v7923 v3423 ) )
                (declare-fun v7924 () UInt )
                (assert (<= 0 v7924 ) )
                (assert (<= v7924 dlc_UInt_max ) )
                (assert (= v7924 v3040 ) )
                (declare-fun v7925 () UInt )
                (assert (<= 0 v7925 ) )
                (assert (<= v7925 dlc_UInt_max ) )
                (assert (= v7925 v3040 ) )
                (declare-fun v7926 () UInt )
                (assert (<= 0 v7926 ) )
                (assert (<= v7926 dlc_UInt_max ) )
                (assert (= v7926 v3424 ) )
                (declare-fun v7927 () UInt )
                (assert (<= 0 v7927 ) )
                (assert (<= v7927 dlc_UInt_max ) )
                (assert (= v7927 v3043 ) )
                (declare-fun v7928 () UInt )
                (assert (<= 0 v7928 ) )
                (assert (<= v7928 dlc_UInt_max ) )
                (assert (= v7928 v3043 ) )
                (declare-fun v7929 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7929 0 ) ) ) (<= 0 (T2_elem1 (select v7929 0 ) ) ) ) )
                (assert (= v7929 v3046 ) )
                (declare-fun v7930 () UInt )
                (assert (<= 0 v7930 ) )
                (assert (<= v7930 dlc_UInt_max ) )
                (assert (= v7930 v3047 ) )
                (declare-fun v7931 () Bool )
                (assert true )
                (assert (= v7931 (= v7930 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7931 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net7871 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok7873 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net7871 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7877 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7875 () Address Address!val!0 ) (define-fun v7878 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7881 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7879 () Address Address!val!0 ) (define-fun v7880 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7874 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7876 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks7872 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v7932 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7932 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7932 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7932 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7932 ) ) ) ) (<= 0 (T18_offers v7932 ) ) ) )
                (assert (= v7932 v6217 ) )
                (declare-fun v7933 () UInt )
                (assert (<= 0 v7933 ) )
                (assert (<= v7933 dlc_UInt_max ) )
                (assert (= v7933 v3423 ) )
                (declare-fun v7934 () UInt )
                (assert (<= 0 v7934 ) )
                (assert (<= v7934 dlc_UInt_max ) )
                (assert (= v7934 v3040 ) )
                (declare-fun v7935 () UInt )
                (assert (<= 0 v7935 ) )
                (assert (<= v7935 dlc_UInt_max ) )
                (assert (= v7935 v3040 ) )
                (declare-fun v7936 () UInt )
                (assert (<= 0 v7936 ) )
                (assert (<= v7936 dlc_UInt_max ) )
                (assert (= v7936 v3424 ) )
                (declare-fun v7937 () UInt )
                (assert (<= 0 v7937 ) )
                (assert (<= v7937 dlc_UInt_max ) )
                (assert (= v7937 v3043 ) )
                (declare-fun v7938 () UInt )
                (assert (<= 0 v7938 ) )
                (assert (<= v7938 dlc_UInt_max ) )
                (assert (= v7938 v3043 ) )
                (declare-fun v7939 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7939 0 ) ) ) (<= 0 (T2_elem1 (select v7939 0 ) ) ) ) )
                (assert (= v7939 v6206 ) )
                (declare-fun v7940 () UInt )
                (assert (<= 0 v7940 ) )
                (assert (<= v7940 dlc_UInt_max ) )
                (assert (= v7940 v6152 ) )
                (declare-fun v7941 () Bool )
                (assert true )
                (assert (= v7941 (= v7940 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7941 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net7871 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok7873 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun pv_ks7872 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net7871 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7877 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7875 () Address Address!val!0 ) (define-fun v7878 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7881 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7879 () Address Address!val!0 ) (define-fun v7880 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7874 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7876 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks7872 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v7943 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7943 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7943 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7943 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7943 ) ) ) ) (<= 0 (T18_offers v7943 ) ) ) )
                (assert (= v7943 v6727 ) )
                (declare-fun v7944 () UInt )
                (assert (<= 0 v7944 ) )
                (assert (<= v7944 dlc_UInt_max ) )
                (assert (= v7944 v3423 ) )
                (declare-fun v7945 () UInt )
                (assert (<= 0 v7945 ) )
                (assert (<= v7945 dlc_UInt_max ) )
                (assert (= v7945 v3040 ) )
                (declare-fun v7946 () UInt )
                (assert (<= 0 v7946 ) )
                (assert (<= v7946 dlc_UInt_max ) )
                (assert (= v7946 v3040 ) )
                (declare-fun v7947 () UInt )
                (assert (<= 0 v7947 ) )
                (assert (<= v7947 dlc_UInt_max ) )
                (assert (= v7947 v3424 ) )
                (declare-fun v7948 () UInt )
                (assert (<= 0 v7948 ) )
                (assert (<= v7948 dlc_UInt_max ) )
                (assert (= v7948 v3043 ) )
                (declare-fun v7949 () UInt )
                (assert (<= 0 v7949 ) )
                (assert (<= v7949 dlc_UInt_max ) )
                (assert (= v7949 v3043 ) )
                (declare-fun v7950 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7950 0 ) ) ) (<= 0 (T2_elem1 (select v7950 0 ) ) ) ) )
                (assert (= v7950 v6430 ) )
                (declare-fun v7951 () UInt )
                (assert (<= 0 v7951 ) )
                (assert (<= v7951 dlc_UInt_max ) )
                (assert (= v7951 v6394 ) )
                (declare-fun v7952 () Bool )
                (assert true )
                (assert (= v7952 (= v7951 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7952 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun pv_tok7873 () Token Token!val!13 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun pv_ks7872 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!13 1142 ) Token!val!3 0 ) ) (define-fun v7952 () Bool false ) (define-fun v7951 () Int 1 ) (define-fun v7950 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v7949 () Int 0 ) (define-fun v7948 () Int 0 ) (define-fun v7947 () Int 0 ) (define-fun v7946 () Int 0 ) (define-fun v7945 () Int 0 ) (define-fun v7944 () Int 1 ) (define-fun v7943 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net7871 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7877 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v7875 () Address Address!val!0 ) (define-fun v7878 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7881 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7879 () Address Address!val!0 ) (define-fun v7880 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7874 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7876 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net7953 () UInt )
            (assert (<= 0 pv_net7953 ) )
            (declare-fun pv_tok7955 () Token )
            (assert true )
            (declare-fun pv_ks7954 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks7954 pv_tok7955 ) ) )
            (declare-fun v7956 () Address )
            (assert true )
            (declare-fun v7957 () Address )
            (assert true )
            (declare-fun v7958 () Address )
            (assert true )
            (declare-fun v7959 () Address )
            (assert true )
            (declare-fun v7960 () Address )
            (assert true )
            (declare-fun v7961 () Address )
            (assert true )
            (declare-fun v7962 () Address )
            (assert true )
            (declare-fun v7963 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net7953 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!2 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok7955 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net7953 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3432 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3431 () Bool false ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7963 () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7957 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7961 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7960 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v7956 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v7959 () Address Address!val!1 ) (define-fun v7958 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7962 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks7954 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v7964 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7964 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7964 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7964 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7964 ) ) ) ) (<= 0 (T18_offers v7964 ) ) ) )
                (assert (= v7964 v3641 ) )
                (declare-fun v7965 () UInt )
                (assert (<= 0 v7965 ) )
                (assert (<= v7965 dlc_UInt_max ) )
                (assert (= v7965 v3423 ) )
                (declare-fun v7966 () UInt )
                (assert (<= 0 v7966 ) )
                (assert (<= v7966 dlc_UInt_max ) )
                (assert (= v7966 v3040 ) )
                (declare-fun v7967 () UInt )
                (assert (<= 0 v7967 ) )
                (assert (<= v7967 dlc_UInt_max ) )
                (assert (= v7967 v3040 ) )
                (declare-fun v7968 () UInt )
                (assert (<= 0 v7968 ) )
                (assert (<= v7968 dlc_UInt_max ) )
                (assert (= v7968 v3424 ) )
                (declare-fun v7969 () UInt )
                (assert (<= 0 v7969 ) )
                (assert (<= v7969 dlc_UInt_max ) )
                (assert (= v7969 v3043 ) )
                (declare-fun v7970 () UInt )
                (assert (<= 0 v7970 ) )
                (assert (<= v7970 dlc_UInt_max ) )
                (assert (= v7970 v3043 ) )
                (declare-fun v7971 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7971 0 ) ) ) (<= 0 (T2_elem1 (select v7971 0 ) ) ) ) )
                (assert (= v7971 v3046 ) )
                (declare-fun v7972 () UInt )
                (assert (<= 0 v7972 ) )
                (assert (<= v7972 dlc_UInt_max ) )
                (assert (= v7972 v3047 ) )
                (declare-fun v7973 () Bool )
                (assert true )
                (assert (= v7973 (= v7972 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7973 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net7953 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok7955 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net7953 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3931 () Bool true ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7963 () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7957 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7961 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7960 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v7956 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v7959 () Address Address!val!1 ) (define-fun v7958 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7962 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks7954 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v7974 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7974 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7974 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7974 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7974 ) ) ) ) (<= 0 (T18_offers v7974 ) ) ) )
                (assert (= v7974 v4143 ) )
                (declare-fun v7975 () UInt )
                (assert (<= 0 v7975 ) )
                (assert (<= v7975 dlc_UInt_max ) )
                (assert (= v7975 v3423 ) )
                (declare-fun v7976 () UInt )
                (assert (<= 0 v7976 ) )
                (assert (<= v7976 dlc_UInt_max ) )
                (assert (= v7976 v3040 ) )
                (declare-fun v7977 () UInt )
                (assert (<= 0 v7977 ) )
                (assert (<= v7977 dlc_UInt_max ) )
                (assert (= v7977 v3040 ) )
                (declare-fun v7978 () UInt )
                (assert (<= 0 v7978 ) )
                (assert (<= v7978 dlc_UInt_max ) )
                (assert (= v7978 v3424 ) )
                (declare-fun v7979 () UInt )
                (assert (<= 0 v7979 ) )
                (assert (<= v7979 dlc_UInt_max ) )
                (assert (= v7979 v3043 ) )
                (declare-fun v7980 () UInt )
                (assert (<= 0 v7980 ) )
                (assert (<= v7980 dlc_UInt_max ) )
                (assert (= v7980 v3043 ) )
                (declare-fun v7981 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7981 0 ) ) ) (<= 0 (T2_elem1 (select v7981 0 ) ) ) ) )
                (assert (= v7981 v3046 ) )
                (declare-fun v7982 () UInt )
                (assert (<= 0 v7982 ) )
                (assert (<= v7982 dlc_UInt_max ) )
                (assert (= v7982 v3047 ) )
                (declare-fun v7983 () Bool )
                (assert true )
                (assert (= v7983 (= v7982 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7983 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net7953 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok7955 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net7953 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v4422 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7963 () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7957 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7961 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7960 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v7956 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v7959 () Address Address!val!1 ) (define-fun v7958 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7962 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks7954 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v7984 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7984 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7984 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7984 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7984 ) ) ) ) (<= 0 (T18_offers v7984 ) ) ) )
                (assert (= v7984 v4646 ) )
                (declare-fun v7985 () UInt )
                (assert (<= 0 v7985 ) )
                (assert (<= v7985 dlc_UInt_max ) )
                (assert (= v7985 v3423 ) )
                (declare-fun v7986 () UInt )
                (assert (<= 0 v7986 ) )
                (assert (<= v7986 dlc_UInt_max ) )
                (assert (= v7986 v3040 ) )
                (declare-fun v7987 () UInt )
                (assert (<= 0 v7987 ) )
                (assert (<= v7987 dlc_UInt_max ) )
                (assert (= v7987 v3040 ) )
                (declare-fun v7988 () UInt )
                (assert (<= 0 v7988 ) )
                (assert (<= v7988 dlc_UInt_max ) )
                (assert (= v7988 v3424 ) )
                (declare-fun v7989 () UInt )
                (assert (<= 0 v7989 ) )
                (assert (<= v7989 dlc_UInt_max ) )
                (assert (= v7989 v3043 ) )
                (declare-fun v7990 () UInt )
                (assert (<= 0 v7990 ) )
                (assert (<= v7990 dlc_UInt_max ) )
                (assert (= v7990 v3043 ) )
                (declare-fun v7991 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v7991 0 ) ) ) (<= 0 (T2_elem1 (select v7991 0 ) ) ) ) )
                (assert (= v7991 v3046 ) )
                (declare-fun v7992 () UInt )
                (assert (<= 0 v7992 ) )
                (assert (<= v7992 dlc_UInt_max ) )
                (assert (= v7992 v3047 ) )
                (declare-fun v7993 () Bool )
                (assert true )
                (assert (= v7993 (= v7992 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v7993 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net7953 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7955 () Token Token!val!16 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net7953 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v4914 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7963 () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7957 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7961 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7960 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v7956 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v7959 () Address Address!val!1 ) (define-fun v7958 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7962 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks7954 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v7994 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v7994 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v7994 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v7994 ) ) ) (<= 0 (T14_principle (T18_loanTerms v7994 ) ) ) ) (<= 0 (T18_offers v7994 ) ) ) )
                (assert (= v7994 v5149 ) )
                (declare-fun v7995 () UInt )
                (assert (<= 0 v7995 ) )
                (assert (<= v7995 dlc_UInt_max ) )
                (assert (= v7995 v3423 ) )
                (declare-fun v7996 () UInt )
                (assert (<= 0 v7996 ) )
                (assert (<= v7996 dlc_UInt_max ) )
                (assert (= v7996 v3040 ) )
                (declare-fun v7997 () UInt )
                (assert (<= 0 v7997 ) )
                (assert (<= v7997 dlc_UInt_max ) )
                (assert (= v7997 v3040 ) )
                (declare-fun v7998 () UInt )
                (assert (<= 0 v7998 ) )
                (assert (<= v7998 dlc_UInt_max ) )
                (assert (= v7998 v3424 ) )
                (declare-fun v7999 () UInt )
                (assert (<= 0 v7999 ) )
                (assert (<= v7999 dlc_UInt_max ) )
                (assert (= v7999 v3043 ) )
                (declare-fun v8000 () UInt )
                (assert (<= 0 v8000 ) )
                (assert (<= v8000 dlc_UInt_max ) )
                (assert (= v8000 v3043 ) )
                (declare-fun v8001 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8001 0 ) ) ) (<= 0 (T2_elem1 (select v8001 0 ) ) ) ) )
                (assert (= v8001 v3046 ) )
                (declare-fun v8002 () UInt )
                (assert (<= 0 v8002 ) )
                (assert (<= v8002 dlc_UInt_max ) )
                (assert (= v8002 v3047 ) )
                (declare-fun v8003 () Bool )
                (assert true )
                (assert (= v8003 (= v8002 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8003 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net7953 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok7955 () Token Token!val!15 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net7953 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7963 () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7957 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7961 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v7960 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v7956 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v7959 () Address Address!val!1 ) (define-fun v7958 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7962 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks7954 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v8004 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8004 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8004 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8004 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8004 ) ) ) ) (<= 0 (T18_offers v8004 ) ) ) )
                (assert (= v8004 v5650 ) )
                (declare-fun v8005 () UInt )
                (assert (<= 0 v8005 ) )
                (assert (<= v8005 dlc_UInt_max ) )
                (assert (= v8005 v3423 ) )
                (declare-fun v8006 () UInt )
                (assert (<= 0 v8006 ) )
                (assert (<= v8006 dlc_UInt_max ) )
                (assert (= v8006 v3040 ) )
                (declare-fun v8007 () UInt )
                (assert (<= 0 v8007 ) )
                (assert (<= v8007 dlc_UInt_max ) )
                (assert (= v8007 v3040 ) )
                (declare-fun v8008 () UInt )
                (assert (<= 0 v8008 ) )
                (assert (<= v8008 dlc_UInt_max ) )
                (assert (= v8008 v3424 ) )
                (declare-fun v8009 () UInt )
                (assert (<= 0 v8009 ) )
                (assert (<= v8009 dlc_UInt_max ) )
                (assert (= v8009 v3043 ) )
                (declare-fun v8010 () UInt )
                (assert (<= 0 v8010 ) )
                (assert (<= v8010 dlc_UInt_max ) )
                (assert (= v8010 v3043 ) )
                (declare-fun v8011 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8011 0 ) ) ) (<= 0 (T2_elem1 (select v8011 0 ) ) ) ) )
                (assert (= v8011 v3046 ) )
                (declare-fun v8012 () UInt )
                (assert (<= 0 v8012 ) )
                (assert (<= v8012 dlc_UInt_max ) )
                (assert (= v8012 v3047 ) )
                (declare-fun v8013 () Bool )
                (assert true )
                (assert (= v8013 (= v8012 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8013 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net7953 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok7955 () Token Token!val!14 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net7953 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7963 () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7957 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7961 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7960 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v7956 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v7959 () Address Address!val!0 ) (define-fun v7958 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7962 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks7954 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v8014 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8014 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8014 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8014 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8014 ) ) ) ) (<= 0 (T18_offers v8014 ) ) ) )
                (assert (= v8014 v6217 ) )
                (declare-fun v8015 () UInt )
                (assert (<= 0 v8015 ) )
                (assert (<= v8015 dlc_UInt_max ) )
                (assert (= v8015 v3423 ) )
                (declare-fun v8016 () UInt )
                (assert (<= 0 v8016 ) )
                (assert (<= v8016 dlc_UInt_max ) )
                (assert (= v8016 v3040 ) )
                (declare-fun v8017 () UInt )
                (assert (<= 0 v8017 ) )
                (assert (<= v8017 dlc_UInt_max ) )
                (assert (= v8017 v3040 ) )
                (declare-fun v8018 () UInt )
                (assert (<= 0 v8018 ) )
                (assert (<= v8018 dlc_UInt_max ) )
                (assert (= v8018 v3424 ) )
                (declare-fun v8019 () UInt )
                (assert (<= 0 v8019 ) )
                (assert (<= v8019 dlc_UInt_max ) )
                (assert (= v8019 v3043 ) )
                (declare-fun v8020 () UInt )
                (assert (<= 0 v8020 ) )
                (assert (<= v8020 dlc_UInt_max ) )
                (assert (= v8020 v3043 ) )
                (declare-fun v8021 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8021 0 ) ) ) (<= 0 (T2_elem1 (select v8021 0 ) ) ) ) )
                (assert (= v8021 v6206 ) )
                (declare-fun v8022 () UInt )
                (assert (<= 0 v8022 ) )
                (assert (<= v8022 dlc_UInt_max ) )
                (assert (= v8022 v6152 ) )
                (declare-fun v8023 () Bool )
                (assert true )
                (assert (= v8023 (= v8022 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8023 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net7953 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok7955 () Token Token!val!14 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_ks7954 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net7953 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7963 () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7957 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7961 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7960 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v7956 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v7959 () Address Address!val!0 ) (define-fun v7958 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7962 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks7954 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v8025 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8025 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8025 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8025 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8025 ) ) ) ) (<= 0 (T18_offers v8025 ) ) ) )
                (assert (= v8025 v6727 ) )
                (declare-fun v8026 () UInt )
                (assert (<= 0 v8026 ) )
                (assert (<= v8026 dlc_UInt_max ) )
                (assert (= v8026 v3423 ) )
                (declare-fun v8027 () UInt )
                (assert (<= 0 v8027 ) )
                (assert (<= v8027 dlc_UInt_max ) )
                (assert (= v8027 v3040 ) )
                (declare-fun v8028 () UInt )
                (assert (<= 0 v8028 ) )
                (assert (<= v8028 dlc_UInt_max ) )
                (assert (= v8028 v3040 ) )
                (declare-fun v8029 () UInt )
                (assert (<= 0 v8029 ) )
                (assert (<= v8029 dlc_UInt_max ) )
                (assert (= v8029 v3424 ) )
                (declare-fun v8030 () UInt )
                (assert (<= 0 v8030 ) )
                (assert (<= v8030 dlc_UInt_max ) )
                (assert (= v8030 v3043 ) )
                (declare-fun v8031 () UInt )
                (assert (<= 0 v8031 ) )
                (assert (<= v8031 dlc_UInt_max ) )
                (assert (= v8031 v3043 ) )
                (declare-fun v8032 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8032 0 ) ) ) (<= 0 (T2_elem1 (select v8032 0 ) ) ) ) )
                (assert (= v8032 v6430 ) )
                (declare-fun v8033 () UInt )
                (assert (<= 0 v8033 ) )
                (assert (<= v8033 dlc_UInt_max ) )
                (assert (= v8033 v6394 ) )
                (declare-fun v8034 () Bool )
                (assert true )
                (assert (= v8034 (= v8033 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8034 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok7955 () Token Token!val!13 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_ks7954 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!13 1142 ) Token!val!3 0 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v8034 () Bool false ) (define-fun v8033 () Int 1 ) (define-fun v8032 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v8031 () Int 0 ) (define-fun v8030 () Int 0 ) (define-fun v8029 () Int 0 ) (define-fun v8028 () Int 0 ) (define-fun v8027 () Int 0 ) (define-fun v8026 () Int 1 ) (define-fun v8025 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net7953 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7963 () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7957 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7961 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v7960 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v7956 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v7959 () Address Address!val!0 ) (define-fun v7958 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7962 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net8035 () UInt )
            (assert (<= 0 pv_net8035 ) )
            (declare-fun pv_tok8037 () Token )
            (assert true )
            (declare-fun pv_ks8036 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks8036 pv_tok8037 ) ) )
            (declare-fun v8038 () Address )
            (assert true )
            (declare-fun v8039 () Address )
            (assert true )
            (declare-fun v8040 () Address )
            (assert true )
            (declare-fun v8041 () Address )
            (assert true )
            (declare-fun v8042 () Address )
            (assert true )
            (declare-fun v8043 () Address )
            (assert true )
            (declare-fun v8044 () Address )
            (assert true )
            (declare-fun v8045 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net8035 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok8037 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net8035 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!2 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v8041 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8042 () Address Address!val!1 ) (define-fun v8038 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!1 ) (define-fun v8045 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v8039 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v8044 () Address Address!val!1 ) (define-fun v8040 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks8036 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v8046 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8046 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8046 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8046 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8046 ) ) ) ) (<= 0 (T18_offers v8046 ) ) ) )
                (assert (= v8046 v3641 ) )
                (declare-fun v8047 () UInt )
                (assert (<= 0 v8047 ) )
                (assert (<= v8047 dlc_UInt_max ) )
                (assert (= v8047 v3423 ) )
                (declare-fun v8048 () UInt )
                (assert (<= 0 v8048 ) )
                (assert (<= v8048 dlc_UInt_max ) )
                (assert (= v8048 v3040 ) )
                (declare-fun v8049 () UInt )
                (assert (<= 0 v8049 ) )
                (assert (<= v8049 dlc_UInt_max ) )
                (assert (= v8049 v3040 ) )
                (declare-fun v8050 () UInt )
                (assert (<= 0 v8050 ) )
                (assert (<= v8050 dlc_UInt_max ) )
                (assert (= v8050 v3424 ) )
                (declare-fun v8051 () UInt )
                (assert (<= 0 v8051 ) )
                (assert (<= v8051 dlc_UInt_max ) )
                (assert (= v8051 v3043 ) )
                (declare-fun v8052 () UInt )
                (assert (<= 0 v8052 ) )
                (assert (<= v8052 dlc_UInt_max ) )
                (assert (= v8052 v3043 ) )
                (declare-fun v8053 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8053 0 ) ) ) (<= 0 (T2_elem1 (select v8053 0 ) ) ) ) )
                (assert (= v8053 v3046 ) )
                (declare-fun v8054 () UInt )
                (assert (<= 0 v8054 ) )
                (assert (<= v8054 dlc_UInt_max ) )
                (assert (= v8054 v3047 ) )
                (declare-fun v8055 () Bool )
                (assert true )
                (assert (= v8055 (= v8054 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8055 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net8035 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok8037 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net8035 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3931 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8042 () Address Address!val!1 ) (define-fun v8038 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!1 ) (define-fun v8045 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v8039 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v8044 () Address Address!val!1 ) (define-fun v8040 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks8036 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v8056 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8056 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8056 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8056 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8056 ) ) ) ) (<= 0 (T18_offers v8056 ) ) ) )
                (assert (= v8056 v4143 ) )
                (declare-fun v8057 () UInt )
                (assert (<= 0 v8057 ) )
                (assert (<= v8057 dlc_UInt_max ) )
                (assert (= v8057 v3423 ) )
                (declare-fun v8058 () UInt )
                (assert (<= 0 v8058 ) )
                (assert (<= v8058 dlc_UInt_max ) )
                (assert (= v8058 v3040 ) )
                (declare-fun v8059 () UInt )
                (assert (<= 0 v8059 ) )
                (assert (<= v8059 dlc_UInt_max ) )
                (assert (= v8059 v3040 ) )
                (declare-fun v8060 () UInt )
                (assert (<= 0 v8060 ) )
                (assert (<= v8060 dlc_UInt_max ) )
                (assert (= v8060 v3424 ) )
                (declare-fun v8061 () UInt )
                (assert (<= 0 v8061 ) )
                (assert (<= v8061 dlc_UInt_max ) )
                (assert (= v8061 v3043 ) )
                (declare-fun v8062 () UInt )
                (assert (<= 0 v8062 ) )
                (assert (<= v8062 dlc_UInt_max ) )
                (assert (= v8062 v3043 ) )
                (declare-fun v8063 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8063 0 ) ) ) (<= 0 (T2_elem1 (select v8063 0 ) ) ) ) )
                (assert (= v8063 v3046 ) )
                (declare-fun v8064 () UInt )
                (assert (<= 0 v8064 ) )
                (assert (<= v8064 dlc_UInt_max ) )
                (assert (= v8064 v3047 ) )
                (declare-fun v8065 () Bool )
                (assert true )
                (assert (= v8065 (= v8064 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8065 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net8035 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok8037 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net8035 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4422 () Bool true ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8042 () Address Address!val!1 ) (define-fun v8038 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!1 ) (define-fun v8045 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v8039 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v8044 () Address Address!val!1 ) (define-fun v8040 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks8036 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v8066 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8066 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8066 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8066 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8066 ) ) ) ) (<= 0 (T18_offers v8066 ) ) ) )
                (assert (= v8066 v4646 ) )
                (declare-fun v8067 () UInt )
                (assert (<= 0 v8067 ) )
                (assert (<= v8067 dlc_UInt_max ) )
                (assert (= v8067 v3423 ) )
                (declare-fun v8068 () UInt )
                (assert (<= 0 v8068 ) )
                (assert (<= v8068 dlc_UInt_max ) )
                (assert (= v8068 v3040 ) )
                (declare-fun v8069 () UInt )
                (assert (<= 0 v8069 ) )
                (assert (<= v8069 dlc_UInt_max ) )
                (assert (= v8069 v3040 ) )
                (declare-fun v8070 () UInt )
                (assert (<= 0 v8070 ) )
                (assert (<= v8070 dlc_UInt_max ) )
                (assert (= v8070 v3424 ) )
                (declare-fun v8071 () UInt )
                (assert (<= 0 v8071 ) )
                (assert (<= v8071 dlc_UInt_max ) )
                (assert (= v8071 v3043 ) )
                (declare-fun v8072 () UInt )
                (assert (<= 0 v8072 ) )
                (assert (<= v8072 dlc_UInt_max ) )
                (assert (= v8072 v3043 ) )
                (declare-fun v8073 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8073 0 ) ) ) (<= 0 (T2_elem1 (select v8073 0 ) ) ) ) )
                (assert (= v8073 v3046 ) )
                (declare-fun v8074 () UInt )
                (assert (<= 0 v8074 ) )
                (assert (<= v8074 dlc_UInt_max ) )
                (assert (= v8074 v3047 ) )
                (declare-fun v8075 () Bool )
                (assert true )
                (assert (= v8075 (= v8074 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8075 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net8035 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok8037 () Token Token!val!16 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net8035 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4914 () Bool true ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8042 () Address Address!val!1 ) (define-fun v8038 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!1 ) (define-fun v8045 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v8039 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v8044 () Address Address!val!1 ) (define-fun v8040 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks8036 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v8076 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8076 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8076 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8076 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8076 ) ) ) ) (<= 0 (T18_offers v8076 ) ) ) )
                (assert (= v8076 v5149 ) )
                (declare-fun v8077 () UInt )
                (assert (<= 0 v8077 ) )
                (assert (<= v8077 dlc_UInt_max ) )
                (assert (= v8077 v3423 ) )
                (declare-fun v8078 () UInt )
                (assert (<= 0 v8078 ) )
                (assert (<= v8078 dlc_UInt_max ) )
                (assert (= v8078 v3040 ) )
                (declare-fun v8079 () UInt )
                (assert (<= 0 v8079 ) )
                (assert (<= v8079 dlc_UInt_max ) )
                (assert (= v8079 v3040 ) )
                (declare-fun v8080 () UInt )
                (assert (<= 0 v8080 ) )
                (assert (<= v8080 dlc_UInt_max ) )
                (assert (= v8080 v3424 ) )
                (declare-fun v8081 () UInt )
                (assert (<= 0 v8081 ) )
                (assert (<= v8081 dlc_UInt_max ) )
                (assert (= v8081 v3043 ) )
                (declare-fun v8082 () UInt )
                (assert (<= 0 v8082 ) )
                (assert (<= v8082 dlc_UInt_max ) )
                (assert (= v8082 v3043 ) )
                (declare-fun v8083 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8083 0 ) ) ) (<= 0 (T2_elem1 (select v8083 0 ) ) ) ) )
                (assert (= v8083 v3046 ) )
                (declare-fun v8084 () UInt )
                (assert (<= 0 v8084 ) )
                (assert (<= v8084 dlc_UInt_max ) )
                (assert (= v8084 v3047 ) )
                (declare-fun v8085 () Bool )
                (assert true )
                (assert (= v8085 (= v8084 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8085 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net8035 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok8037 () Token Token!val!15 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net8035 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8042 () Address Address!val!1 ) (define-fun v8038 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!1 ) (define-fun v8045 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun v8039 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v8044 () Address Address!val!1 ) (define-fun v8040 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks8036 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v8086 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8086 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8086 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8086 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8086 ) ) ) ) (<= 0 (T18_offers v8086 ) ) ) )
                (assert (= v8086 v5650 ) )
                (declare-fun v8087 () UInt )
                (assert (<= 0 v8087 ) )
                (assert (<= v8087 dlc_UInt_max ) )
                (assert (= v8087 v3423 ) )
                (declare-fun v8088 () UInt )
                (assert (<= 0 v8088 ) )
                (assert (<= v8088 dlc_UInt_max ) )
                (assert (= v8088 v3040 ) )
                (declare-fun v8089 () UInt )
                (assert (<= 0 v8089 ) )
                (assert (<= v8089 dlc_UInt_max ) )
                (assert (= v8089 v3040 ) )
                (declare-fun v8090 () UInt )
                (assert (<= 0 v8090 ) )
                (assert (<= v8090 dlc_UInt_max ) )
                (assert (= v8090 v3424 ) )
                (declare-fun v8091 () UInt )
                (assert (<= 0 v8091 ) )
                (assert (<= v8091 dlc_UInt_max ) )
                (assert (= v8091 v3043 ) )
                (declare-fun v8092 () UInt )
                (assert (<= 0 v8092 ) )
                (assert (<= v8092 dlc_UInt_max ) )
                (assert (= v8092 v3043 ) )
                (declare-fun v8093 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8093 0 ) ) ) (<= 0 (T2_elem1 (select v8093 0 ) ) ) ) )
                (assert (= v8093 v3046 ) )
                (declare-fun v8094 () UInt )
                (assert (<= 0 v8094 ) )
                (assert (<= v8094 dlc_UInt_max ) )
                (assert (= v8094 v3047 ) )
                (declare-fun v8095 () Bool )
                (assert true )
                (assert (= v8095 (= v8094 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8095 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net8035 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok8037 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net8035 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8042 () Address Address!val!0 ) (define-fun v8038 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!0 ) (define-fun v8045 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v8039 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v8044 () Address Address!val!0 ) (define-fun v8040 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks8036 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v8096 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8096 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8096 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8096 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8096 ) ) ) ) (<= 0 (T18_offers v8096 ) ) ) )
                (assert (= v8096 v6217 ) )
                (declare-fun v8097 () UInt )
                (assert (<= 0 v8097 ) )
                (assert (<= v8097 dlc_UInt_max ) )
                (assert (= v8097 v3423 ) )
                (declare-fun v8098 () UInt )
                (assert (<= 0 v8098 ) )
                (assert (<= v8098 dlc_UInt_max ) )
                (assert (= v8098 v3040 ) )
                (declare-fun v8099 () UInt )
                (assert (<= 0 v8099 ) )
                (assert (<= v8099 dlc_UInt_max ) )
                (assert (= v8099 v3040 ) )
                (declare-fun v8100 () UInt )
                (assert (<= 0 v8100 ) )
                (assert (<= v8100 dlc_UInt_max ) )
                (assert (= v8100 v3424 ) )
                (declare-fun v8101 () UInt )
                (assert (<= 0 v8101 ) )
                (assert (<= v8101 dlc_UInt_max ) )
                (assert (= v8101 v3043 ) )
                (declare-fun v8102 () UInt )
                (assert (<= 0 v8102 ) )
                (assert (<= v8102 dlc_UInt_max ) )
                (assert (= v8102 v3043 ) )
                (declare-fun v8103 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8103 0 ) ) ) (<= 0 (T2_elem1 (select v8103 0 ) ) ) ) )
                (assert (= v8103 v6206 ) )
                (declare-fun v8104 () UInt )
                (assert (<= 0 v8104 ) )
                (assert (<= v8104 dlc_UInt_max ) )
                (assert (= v8104 v6152 ) )
                (declare-fun v8105 () Bool )
                (assert true )
                (assert (= v8105 (= v8104 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8105 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net8035 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok8037 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8036 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net8035 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8041 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8042 () Address Address!val!0 ) (define-fun v8038 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!0 ) (define-fun v8045 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v8039 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v8044 () Address Address!val!0 ) (define-fun v8040 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks8036 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v8107 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8107 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8107 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8107 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8107 ) ) ) ) (<= 0 (T18_offers v8107 ) ) ) )
                (assert (= v8107 v6727 ) )
                (declare-fun v8108 () UInt )
                (assert (<= 0 v8108 ) )
                (assert (<= v8108 dlc_UInt_max ) )
                (assert (= v8108 v3423 ) )
                (declare-fun v8109 () UInt )
                (assert (<= 0 v8109 ) )
                (assert (<= v8109 dlc_UInt_max ) )
                (assert (= v8109 v3040 ) )
                (declare-fun v8110 () UInt )
                (assert (<= 0 v8110 ) )
                (assert (<= v8110 dlc_UInt_max ) )
                (assert (= v8110 v3040 ) )
                (declare-fun v8111 () UInt )
                (assert (<= 0 v8111 ) )
                (assert (<= v8111 dlc_UInt_max ) )
                (assert (= v8111 v3424 ) )
                (declare-fun v8112 () UInt )
                (assert (<= 0 v8112 ) )
                (assert (<= v8112 dlc_UInt_max ) )
                (assert (= v8112 v3043 ) )
                (declare-fun v8113 () UInt )
                (assert (<= 0 v8113 ) )
                (assert (<= v8113 dlc_UInt_max ) )
                (assert (= v8113 v3043 ) )
                (declare-fun v8114 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8114 0 ) ) ) (<= 0 (T2_elem1 (select v8114 0 ) ) ) ) )
                (assert (= v8114 v6430 ) )
                (declare-fun v8115 () UInt )
                (assert (<= 0 v8115 ) )
                (assert (<= v8115 dlc_UInt_max ) )
                (assert (= v8115 v6394 ) )
                (declare-fun v8116 () Bool )
                (assert true )
                (assert (= v8116 (= v8115 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8116 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun pv_tok8037 () Token Token!val!13 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8036 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!3 0 ) Token!val!13 1142 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v8116 () Bool false ) (define-fun v8115 () Int 1 ) (define-fun v8114 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v8113 () Int 0 ) (define-fun v8112 () Int 0 ) (define-fun v8111 () Int 0 ) (define-fun v8110 () Int 0 ) (define-fun v8109 () Int 0 ) (define-fun v8108 () Int 1 ) (define-fun v8107 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net8035 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v8041 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8042 () Address Address!val!0 ) (define-fun v8038 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8043 () Address Address!val!0 ) (define-fun v8045 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun v8039 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v8044 () Address Address!val!0 ) (define-fun v8040 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net8117 () UInt )
            (assert (<= 0 pv_net8117 ) )
            (declare-fun pv_tok8119 () Token )
            (assert true )
            (declare-fun pv_ks8118 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks8118 pv_tok8119 ) ) )
            (declare-fun v8120 () Address )
            (assert true )
            (declare-fun v8121 () Address )
            (assert true )
            (declare-fun v8122 () Address )
            (assert true )
            (declare-fun v8123 () Address )
            (assert true )
            (declare-fun v8124 () Address )
            (assert true )
            (declare-fun v8125 () Address )
            (assert true )
            (declare-fun v8126 () Address )
            (assert true )
            (declare-fun v8127 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net8117 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!2 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok8119 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net8117 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3432 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3431 () Bool false ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v8126 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v8123 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8122 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v8121 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v8124 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v8127 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v8125 () Address Address!val!1 ) (define-fun v8120 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks8118 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v8128 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8128 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8128 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8128 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8128 ) ) ) ) (<= 0 (T18_offers v8128 ) ) ) )
                (assert (= v8128 v3641 ) )
                (declare-fun v8129 () UInt )
                (assert (<= 0 v8129 ) )
                (assert (<= v8129 dlc_UInt_max ) )
                (assert (= v8129 v3423 ) )
                (declare-fun v8130 () UInt )
                (assert (<= 0 v8130 ) )
                (assert (<= v8130 dlc_UInt_max ) )
                (assert (= v8130 v3040 ) )
                (declare-fun v8131 () UInt )
                (assert (<= 0 v8131 ) )
                (assert (<= v8131 dlc_UInt_max ) )
                (assert (= v8131 v3040 ) )
                (declare-fun v8132 () UInt )
                (assert (<= 0 v8132 ) )
                (assert (<= v8132 dlc_UInt_max ) )
                (assert (= v8132 v3424 ) )
                (declare-fun v8133 () UInt )
                (assert (<= 0 v8133 ) )
                (assert (<= v8133 dlc_UInt_max ) )
                (assert (= v8133 v3043 ) )
                (declare-fun v8134 () UInt )
                (assert (<= 0 v8134 ) )
                (assert (<= v8134 dlc_UInt_max ) )
                (assert (= v8134 v3043 ) )
                (declare-fun v8135 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8135 0 ) ) ) (<= 0 (T2_elem1 (select v8135 0 ) ) ) ) )
                (assert (= v8135 v3046 ) )
                (declare-fun v8136 () UInt )
                (assert (<= 0 v8136 ) )
                (assert (<= v8136 dlc_UInt_max ) )
                (assert (= v8136 v3047 ) )
                (declare-fun v8137 () Bool )
                (assert true )
                (assert (= v8137 (= v8136 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8137 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net8117 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok8119 () Token Token!val!14 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3042 () Int 0 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net8117 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3931 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v8126 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v8123 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8122 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v8121 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v8124 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v8127 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v8125 () Address Address!val!1 ) (define-fun v8120 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks8118 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v8138 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8138 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8138 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8138 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8138 ) ) ) ) (<= 0 (T18_offers v8138 ) ) ) )
                (assert (= v8138 v4143 ) )
                (declare-fun v8139 () UInt )
                (assert (<= 0 v8139 ) )
                (assert (<= v8139 dlc_UInt_max ) )
                (assert (= v8139 v3423 ) )
                (declare-fun v8140 () UInt )
                (assert (<= 0 v8140 ) )
                (assert (<= v8140 dlc_UInt_max ) )
                (assert (= v8140 v3040 ) )
                (declare-fun v8141 () UInt )
                (assert (<= 0 v8141 ) )
                (assert (<= v8141 dlc_UInt_max ) )
                (assert (= v8141 v3040 ) )
                (declare-fun v8142 () UInt )
                (assert (<= 0 v8142 ) )
                (assert (<= v8142 dlc_UInt_max ) )
                (assert (= v8142 v3424 ) )
                (declare-fun v8143 () UInt )
                (assert (<= 0 v8143 ) )
                (assert (<= v8143 dlc_UInt_max ) )
                (assert (= v8143 v3043 ) )
                (declare-fun v8144 () UInt )
                (assert (<= 0 v8144 ) )
                (assert (<= v8144 dlc_UInt_max ) )
                (assert (= v8144 v3043 ) )
                (declare-fun v8145 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8145 0 ) ) ) (<= 0 (T2_elem1 (select v8145 0 ) ) ) ) )
                (assert (= v8145 v3046 ) )
                (declare-fun v8146 () UInt )
                (assert (<= 0 v8146 ) )
                (assert (<= v8146 dlc_UInt_max ) )
                (assert (= v8146 v3047 ) )
                (declare-fun v8147 () Bool )
                (assert true )
                (assert (= v8147 (= v8146 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8147 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net8117 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok8119 () Token Token!val!14 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net8117 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v4422 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v8126 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v8123 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8122 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v8121 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v8124 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v8127 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v8125 () Address Address!val!1 ) (define-fun v8120 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks8118 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v8148 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8148 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8148 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8148 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8148 ) ) ) ) (<= 0 (T18_offers v8148 ) ) ) )
                (assert (= v8148 v4646 ) )
                (declare-fun v8149 () UInt )
                (assert (<= 0 v8149 ) )
                (assert (<= v8149 dlc_UInt_max ) )
                (assert (= v8149 v3423 ) )
                (declare-fun v8150 () UInt )
                (assert (<= 0 v8150 ) )
                (assert (<= v8150 dlc_UInt_max ) )
                (assert (= v8150 v3040 ) )
                (declare-fun v8151 () UInt )
                (assert (<= 0 v8151 ) )
                (assert (<= v8151 dlc_UInt_max ) )
                (assert (= v8151 v3040 ) )
                (declare-fun v8152 () UInt )
                (assert (<= 0 v8152 ) )
                (assert (<= v8152 dlc_UInt_max ) )
                (assert (= v8152 v3424 ) )
                (declare-fun v8153 () UInt )
                (assert (<= 0 v8153 ) )
                (assert (<= v8153 dlc_UInt_max ) )
                (assert (= v8153 v3043 ) )
                (declare-fun v8154 () UInt )
                (assert (<= 0 v8154 ) )
                (assert (<= v8154 dlc_UInt_max ) )
                (assert (= v8154 v3043 ) )
                (declare-fun v8155 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8155 0 ) ) ) (<= 0 (T2_elem1 (select v8155 0 ) ) ) ) )
                (assert (= v8155 v3046 ) )
                (declare-fun v8156 () UInt )
                (assert (<= 0 v8156 ) )
                (assert (<= v8156 dlc_UInt_max ) )
                (assert (= v8156 v3047 ) )
                (declare-fun v8157 () Bool )
                (assert true )
                (assert (= v8157 (= v8156 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8157 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net8117 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun pv_tok8119 () Token Token!val!16 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net8117 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4914 () Bool true ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v8126 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v8123 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8122 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v8121 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v8124 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v8127 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v8125 () Address Address!val!1 ) (define-fun v8120 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks8118 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v8158 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8158 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8158 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8158 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8158 ) ) ) ) (<= 0 (T18_offers v8158 ) ) ) )
                (assert (= v8158 v5149 ) )
                (declare-fun v8159 () UInt )
                (assert (<= 0 v8159 ) )
                (assert (<= v8159 dlc_UInt_max ) )
                (assert (= v8159 v3423 ) )
                (declare-fun v8160 () UInt )
                (assert (<= 0 v8160 ) )
                (assert (<= v8160 dlc_UInt_max ) )
                (assert (= v8160 v3040 ) )
                (declare-fun v8161 () UInt )
                (assert (<= 0 v8161 ) )
                (assert (<= v8161 dlc_UInt_max ) )
                (assert (= v8161 v3040 ) )
                (declare-fun v8162 () UInt )
                (assert (<= 0 v8162 ) )
                (assert (<= v8162 dlc_UInt_max ) )
                (assert (= v8162 v3424 ) )
                (declare-fun v8163 () UInt )
                (assert (<= 0 v8163 ) )
                (assert (<= v8163 dlc_UInt_max ) )
                (assert (= v8163 v3043 ) )
                (declare-fun v8164 () UInt )
                (assert (<= 0 v8164 ) )
                (assert (<= v8164 dlc_UInt_max ) )
                (assert (= v8164 v3043 ) )
                (declare-fun v8165 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8165 0 ) ) ) (<= 0 (T2_elem1 (select v8165 0 ) ) ) ) )
                (assert (= v8165 v3046 ) )
                (declare-fun v8166 () UInt )
                (assert (<= 0 v8166 ) )
                (assert (<= v8166 dlc_UInt_max ) )
                (assert (= v8166 v3047 ) )
                (declare-fun v8167 () Bool )
                (assert true )
                (assert (= v8167 (= v8166 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8167 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net8117 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun pv_tok8119 () Token Token!val!15 ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net8117 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!1 ) (define-fun v8126 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v8123 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8122 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v8121 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v8124 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v8127 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v8125 () Address Address!val!1 ) (define-fun v8120 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks8118 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v8168 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8168 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8168 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8168 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8168 ) ) ) ) (<= 0 (T18_offers v8168 ) ) ) )
                (assert (= v8168 v5650 ) )
                (declare-fun v8169 () UInt )
                (assert (<= 0 v8169 ) )
                (assert (<= v8169 dlc_UInt_max ) )
                (assert (= v8169 v3423 ) )
                (declare-fun v8170 () UInt )
                (assert (<= 0 v8170 ) )
                (assert (<= v8170 dlc_UInt_max ) )
                (assert (= v8170 v3040 ) )
                (declare-fun v8171 () UInt )
                (assert (<= 0 v8171 ) )
                (assert (<= v8171 dlc_UInt_max ) )
                (assert (= v8171 v3040 ) )
                (declare-fun v8172 () UInt )
                (assert (<= 0 v8172 ) )
                (assert (<= v8172 dlc_UInt_max ) )
                (assert (= v8172 v3424 ) )
                (declare-fun v8173 () UInt )
                (assert (<= 0 v8173 ) )
                (assert (<= v8173 dlc_UInt_max ) )
                (assert (= v8173 v3043 ) )
                (declare-fun v8174 () UInt )
                (assert (<= 0 v8174 ) )
                (assert (<= v8174 dlc_UInt_max ) )
                (assert (= v8174 v3043 ) )
                (declare-fun v8175 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8175 0 ) ) ) (<= 0 (T2_elem1 (select v8175 0 ) ) ) ) )
                (assert (= v8175 v3046 ) )
                (declare-fun v8176 () UInt )
                (assert (<= 0 v8176 ) )
                (assert (<= v8176 dlc_UInt_max ) )
                (assert (= v8176 v3047 ) )
                (declare-fun v8177 () Bool )
                (assert true )
                (assert (= v8177 (= v8176 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8177 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net8117 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok8119 () Token Token!val!14 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net8117 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v8126 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v8123 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8122 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v8121 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v8124 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v8127 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v8125 () Address Address!val!0 ) (define-fun v8120 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks8118 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v8178 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8178 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8178 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8178 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8178 ) ) ) ) (<= 0 (T18_offers v8178 ) ) ) )
                (assert (= v8178 v6217 ) )
                (declare-fun v8179 () UInt )
                (assert (<= 0 v8179 ) )
                (assert (<= v8179 dlc_UInt_max ) )
                (assert (= v8179 v3423 ) )
                (declare-fun v8180 () UInt )
                (assert (<= 0 v8180 ) )
                (assert (<= v8180 dlc_UInt_max ) )
                (assert (= v8180 v3040 ) )
                (declare-fun v8181 () UInt )
                (assert (<= 0 v8181 ) )
                (assert (<= v8181 dlc_UInt_max ) )
                (assert (= v8181 v3040 ) )
                (declare-fun v8182 () UInt )
                (assert (<= 0 v8182 ) )
                (assert (<= v8182 dlc_UInt_max ) )
                (assert (= v8182 v3424 ) )
                (declare-fun v8183 () UInt )
                (assert (<= 0 v8183 ) )
                (assert (<= v8183 dlc_UInt_max ) )
                (assert (= v8183 v3043 ) )
                (declare-fun v8184 () UInt )
                (assert (<= 0 v8184 ) )
                (assert (<= v8184 dlc_UInt_max ) )
                (assert (= v8184 v3043 ) )
                (declare-fun v8185 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8185 0 ) ) ) (<= 0 (T2_elem1 (select v8185 0 ) ) ) ) )
                (assert (= v8185 v6206 ) )
                (declare-fun v8186 () UInt )
                (assert (<= 0 v8186 ) )
                (assert (<= v8186 dlc_UInt_max ) )
                (assert (= v8186 v6152 ) )
                (declare-fun v8187 () Bool )
                (assert true )
                (assert (= v8187 (= v8186 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8187 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net8117 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok8119 () Token Token!val!14 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net8117 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v7666 () Address Address!val!0 ) (define-fun v8126 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v8123 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8122 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v8121 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v8124 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v8127 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v8125 () Address Address!val!0 ) (define-fun v8120 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks8118 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v8189 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8189 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8189 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8189 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8189 ) ) ) ) (<= 0 (T18_offers v8189 ) ) ) )
                (assert (= v8189 v6727 ) )
                (declare-fun v8190 () UInt )
                (assert (<= 0 v8190 ) )
                (assert (<= v8190 dlc_UInt_max ) )
                (assert (= v8190 v3423 ) )
                (declare-fun v8191 () UInt )
                (assert (<= 0 v8191 ) )
                (assert (<= v8191 dlc_UInt_max ) )
                (assert (= v8191 v3040 ) )
                (declare-fun v8192 () UInt )
                (assert (<= 0 v8192 ) )
                (assert (<= v8192 dlc_UInt_max ) )
                (assert (= v8192 v3040 ) )
                (declare-fun v8193 () UInt )
                (assert (<= 0 v8193 ) )
                (assert (<= v8193 dlc_UInt_max ) )
                (assert (= v8193 v3424 ) )
                (declare-fun v8194 () UInt )
                (assert (<= 0 v8194 ) )
                (assert (<= v8194 dlc_UInt_max ) )
                (assert (= v8194 v3043 ) )
                (declare-fun v8195 () UInt )
                (assert (<= 0 v8195 ) )
                (assert (<= v8195 dlc_UInt_max ) )
                (assert (= v8195 v3043 ) )
                (declare-fun v8196 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8196 0 ) ) ) (<= 0 (T2_elem1 (select v8196 0 ) ) ) ) )
                (assert (= v8196 v6430 ) )
                (declare-fun v8197 () UInt )
                (assert (<= 0 v8197 ) )
                (assert (<= v8197 dlc_UInt_max ) )
                (assert (= v8197 v6394 ) )
                (declare-fun v8198 () Bool )
                (assert true )
                (assert (= v8198 (= v8197 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8198 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_tok8119 () Token Token!val!13 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun pv_ks8118 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!13 1142 ) Token!val!3 0 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v8198 () Bool false ) (define-fun v8197 () Int 1 ) (define-fun v8196 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v8195 () Int 0 ) (define-fun v8194 () Int 0 ) (define-fun v8193 () Int 0 ) (define-fun v8192 () Int 0 ) (define-fun v8191 () Int 0 ) (define-fun v8190 () Int 1 ) (define-fun v8189 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net8117 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v8126 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v8123 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8122 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v8121 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v8124 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v8127 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v8125 () Address Address!val!0 ) (define-fun v8120 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v3421 () Address )
            (assert true )
            (declare-fun v3422 () T21 )
            (assert (T21_inv v3422 ) )
            (declare-fun pv_net8199 () UInt )
            (assert (<= 0 pv_net8199 ) )
            (declare-fun pv_tok8201 () Token )
            (assert true )
            (declare-fun pv_ks8200 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks8200 pv_tok8201 ) ) )
            (declare-fun v8202 () Address )
            (assert true )
            (declare-fun v8203 () Address )
            (assert true )
            (declare-fun v8204 () Address )
            (assert true )
            (declare-fun v8205 () Address )
            (assert true )
            (declare-fun v8206 () Address )
            (assert true )
            (declare-fun v8207 () Address )
            (assert true )
            (declare-fun v8208 () Address )
            (assert true )
            (declare-fun v8209 () Address )
            (assert true )
            (declare-fun v3423 () UInt )
            (assert (<= 0 v3423 ) )
            (declare-fun v3424 () UInt )
            (assert (<= 0 v3424 ) )
            (declare-fun v1821 () Bool )
            (assert true )
            (assert (= v3423 (+ v3040 1 ) ) )
            (assert (>= v3424 v3043 ) )
            (push 1 ) ;; {
              (declare-fun v3425 () T9 )
              (assert (and (<= 0 (T10_amount (T9_elem0 v3425 ) ) ) (<= 0 (T10_offerId (T9_elem0 v3425 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_acceptOffer0_126 v3425 ) ) )
              (declare-fun v3430 () T10 )
              (assert (and (<= 0 (T10_amount v3430 ) ) (<= 0 (T10_offerId v3430 ) ) ) )
              (assert (= v3430 (T9_elem0 v3425 ) ) )
              (declare-fun v3431 () Bool )
              (assert true )
              (assert (= v3431 (= v3421 v3007 ) ) )
              (declare-fun v3432 () Bool )
              (assert true )
              (assert (= v3432 (= v3012 v3421 ) ) )
              (declare-fun v3433 () Bool )
              (assert true )
              (assert (= v3433 (ite v3431 true v3432 ) ) )
              (assert v3433 )
              (declare-fun v3435 () Bool )
              (assert true )
              (assert (= v3435 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3436 () Bool )
              (assert true )
              (assert (= v3436 (ite v3435 false true ) ) )
              (assert v3436 )
              (declare-fun v3439 () Bool )
              (assert true )
              (assert (= v3439 (T18_freeze v3039 ) ) )
              (assert v3439 )
              (declare-fun v3444 () UInt )
              (assert (<= 0 v3444 ) )
              (assert (<= v3444 dlc_UInt_max ) )
              (assert (= v3444 (T10_offerId v3430 ) ) )
              (declare-fun v3446 () T22 )
              (assert (T22_inv v3446 ) )
              (assert (= v3446 (select map0_1 v3444 ) ) )
              (declare-fun v3447 () UInt )
              (assert (<= 0 v3447 ) )
              (assert (<= v3447 dlc_UInt_max ) )
              (assert (= v3447 (T22_dataTag v3446 ) ) )
              (declare-fun v3448 () Bool )
              (assert true )
              (assert (= v3448 (= v3447 1 ) ) )
              (assert v3448 )
              (assert (= 0 pv_net8199 ) )
              (declare-fun v6766 () Token )
              (assert true )
              (assert (= v6766 (select v3018 0 ) ) )
              (declare-fun v6772 () Bool )
              (assert true )
              (assert (= v6772 (= v6766 v3019 ) ) )
              (declare-fun v6775 () T5 )
              (assert (<= 0 (T5_elem1 v6775 ) ) )
              (assert (= v6775 (T5_cons false 1 ) ) )
              (declare-fun v6776 () T5 )
              (assert (<= 0 (T5_elem1 v6776 ) ) )
              (assert (= v6776 (T5_cons true 0 ) ) )
              (declare-fun v6777 () T5 )
              (assert (<= 0 (T5_elem1 v6777 ) ) )
              (assert (= v6777 (ite v6772 v6776 v6775 ) ) )
              (declare-fun v3577 () Bool )
              (assert true )
              (assert (= v3577 (T5_elem0 v6777 ) ) )
              (push 1 ) ;; {
                (assert (not v3577 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (declare-fun Address!val!2 () Address ) (declare-fun Address!val!3 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) (= x Address!val!2 ) (= x Address!val!3 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!2 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) ) (define-fun pv_tok8201 () Token Token!val!14 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 false false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 8945 ) ) (define-fun v3421 () Address Address!val!2 ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3425 () T9 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) (define-fun v3009 () Token Token!val!10 ) (define-fun v3577 () Bool false ) (define-fun v6777 () T5 (T5_cons false 1 ) ) (define-fun v6776 () T5 (T5_cons true 0 ) ) (define-fun v6775 () T5 (T5_cons false 1 ) ) (define-fun v6772 () Bool false ) (define-fun v6766 () Token Token!val!10 ) (define-fun pv_net8199 () Int 0 ) (define-fun v3448 () Bool true ) (define-fun v3447 () Int 1 ) (define-fun v3446 () T22 (T22_Some (T10_cons 2997 Address!val!3 14680 false ) ) ) (define-fun v3444 () Int 1 ) (define-fun v3439 () Bool true ) (define-fun v3436 () Bool true ) (define-fun v3435 () Bool false ) (define-fun v3433 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3432 () Bool false ) (define-fun v3431 () Bool true ) (define-fun v3430 () T10 (T10_cons 15921 Address!val!1 1 false ) ) (define-fun v3422 () T21 (T21_Admin_api_acceptOffer0_126 (T9_cons (T10_cons 15921 Address!val!1 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!2 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun v8202 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v8209 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8208 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v8203 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v8207 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v8205 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v8204 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v3577 )
              (assert (= 0 (select pv_ks8200 v3019 ) ) )
              (declare-fun v3623 () Null )
              (assert true )
              (assert (= v3623 null ) )
              (declare-fun v3624 () Null )
              (assert true )
              (assert (= v3624 v3623 ) )
              (declare-fun v3634 () T19 )
              (assert (T19_inv v3634 ) )
              (assert (= v3634 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v3636 () Bool )
              (assert true )
              (assert (= v3636 (T18_continue v3039 ) ) )
              (declare-fun v3640 () UInt )
              (assert (<= 0 v3640 ) )
              (assert (<= v3640 dlc_UInt_max ) )
              (assert (= v3640 (T18_offers v3039 ) ) )
              (declare-fun v3641 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v3641 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3641 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3641 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3641 ) ) ) ) (<= 0 (T18_offers v3641 ) ) ) )
              (assert (= v3641 (T18_cons v3634 v3071 v3636 true v3077 true v3640 ) ) )
              (push 1 ) ;; {
                (declare-fun v8210 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8210 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8210 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8210 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8210 ) ) ) ) (<= 0 (T18_offers v8210 ) ) ) )
                (assert (= v8210 v3641 ) )
                (declare-fun v8211 () UInt )
                (assert (<= 0 v8211 ) )
                (assert (<= v8211 dlc_UInt_max ) )
                (assert (= v8211 v3423 ) )
                (declare-fun v8212 () UInt )
                (assert (<= 0 v8212 ) )
                (assert (<= v8212 dlc_UInt_max ) )
                (assert (= v8212 v3040 ) )
                (declare-fun v8213 () UInt )
                (assert (<= 0 v8213 ) )
                (assert (<= v8213 dlc_UInt_max ) )
                (assert (= v8213 v3040 ) )
                (declare-fun v8214 () UInt )
                (assert (<= 0 v8214 ) )
                (assert (<= v8214 dlc_UInt_max ) )
                (assert (= v8214 v3424 ) )
                (declare-fun v8215 () UInt )
                (assert (<= 0 v8215 ) )
                (assert (<= v8215 dlc_UInt_max ) )
                (assert (= v8215 v3043 ) )
                (declare-fun v8216 () UInt )
                (assert (<= 0 v8216 ) )
                (assert (<= v8216 dlc_UInt_max ) )
                (assert (= v8216 v3043 ) )
                (declare-fun v8217 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8217 0 ) ) ) (<= 0 (T2_elem1 (select v8217 0 ) ) ) ) )
                (assert (= v8217 v3046 ) )
                (declare-fun v8218 () UInt )
                (assert (<= 0 v8218 ) )
                (assert (<= v8218 dlc_UInt_max ) )
                (assert (= v8218 v3047 ) )
                (declare-fun v8219 () Bool )
                (assert true )
                (assert (= v8219 (= v8218 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8219 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v3897 () T6 )
              (assert (<= 0 (T6_elem0 v3897 ) ) )
              (assert (= v3422 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 v3897 ) ) )
              (declare-fun v3930 () Bool )
              (assert true )
              (assert (= v3930 (= v3421 v3007 ) ) )
              (declare-fun v3931 () Bool )
              (assert true )
              (assert (= v3931 (= v3012 v3421 ) ) )
              (declare-fun v3932 () Bool )
              (assert true )
              (assert (= v3932 (ite v3930 true v3931 ) ) )
              (assert v3932 )
              (declare-fun v3934 () Bool )
              (assert true )
              (assert (= v3934 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v3935 () Bool )
              (assert true )
              (assert (= v3935 (ite v3934 false true ) ) )
              (assert v3935 )
              (declare-fun v3938 () Bool )
              (assert true )
              (assert (= v3938 (T18_freeze v3039 ) ) )
              (assert v3938 )
              (assert (= 0 pv_net8199 ) )
              (declare-fun v6790 () Token )
              (assert true )
              (assert (= v6790 (select v3018 0 ) ) )
              (declare-fun v6796 () Bool )
              (assert true )
              (assert (= v6796 (= v6790 v3019 ) ) )
              (declare-fun v6799 () T5 )
              (assert (<= 0 (T5_elem1 v6799 ) ) )
              (assert (= v6799 (T5_cons false 1 ) ) )
              (declare-fun v6800 () T5 )
              (assert (<= 0 (T5_elem1 v6800 ) ) )
              (assert (= v6800 (T5_cons true 0 ) ) )
              (declare-fun v6801 () T5 )
              (assert (<= 0 (T5_elem1 v6801 ) ) )
              (assert (= v6801 (ite v6796 v6800 v6799 ) ) )
              (declare-fun v4049 () Bool )
              (assert true )
              (assert (= v4049 (T5_elem0 v6801 ) ) )
              (push 1 ) ;; {
                (assert (not v4049 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v3897 () T6 (T6_cons 20537 ) ) (define-fun pv_tok8201 () Token Token!val!14 ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4049 () Bool false ) (define-fun v6801 () T5 (T5_cons false 1 ) ) (define-fun v6800 () T5 (T5_cons true 0 ) ) (define-fun v6799 () T5 (T5_cons false 1 ) ) (define-fun v6796 () Bool false ) (define-fun v6790 () Token Token!val!10 ) (define-fun pv_net8199 () Int 0 ) (define-fun v3938 () Bool true ) (define-fun v3935 () Bool true ) (define-fun v3934 () Bool false ) (define-fun v3932 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3931 () Bool true ) (define-fun v3930 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_cancelLoanOfferandWithdrawCollateral0_126 (T6_cons 20537 ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v8209 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8208 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v8203 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v8207 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v8205 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v8204 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4049 )
              (assert (= 0 (select pv_ks8200 v3019 ) ) )
              (declare-fun v4129 () Null )
              (assert true )
              (assert (= v4129 null ) )
              (declare-fun v4130 () Null )
              (assert true )
              (assert (= v4130 v4129 ) )
              (declare-fun v4136 () T19 )
              (assert (T19_inv v4136 ) )
              (assert (= v4136 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4142 () UInt )
              (assert (<= 0 v4142 ) )
              (assert (<= v4142 dlc_UInt_max ) )
              (assert (= v4142 (T18_offers v3039 ) ) )
              (declare-fun v4143 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4143 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4143 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4143 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4143 ) ) ) ) (<= 0 (T18_offers v4143 ) ) ) )
              (assert (= v4143 (T18_cons v4136 v3071 false true v3077 v3934 v4142 ) ) )
              (push 1 ) ;; {
                (declare-fun v8220 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8220 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8220 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8220 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8220 ) ) ) ) (<= 0 (T18_offers v8220 ) ) ) )
                (assert (= v8220 v4143 ) )
                (declare-fun v8221 () UInt )
                (assert (<= 0 v8221 ) )
                (assert (<= v8221 dlc_UInt_max ) )
                (assert (= v8221 v3423 ) )
                (declare-fun v8222 () UInt )
                (assert (<= 0 v8222 ) )
                (assert (<= v8222 dlc_UInt_max ) )
                (assert (= v8222 v3040 ) )
                (declare-fun v8223 () UInt )
                (assert (<= 0 v8223 ) )
                (assert (<= v8223 dlc_UInt_max ) )
                (assert (= v8223 v3040 ) )
                (declare-fun v8224 () UInt )
                (assert (<= 0 v8224 ) )
                (assert (<= v8224 dlc_UInt_max ) )
                (assert (= v8224 v3424 ) )
                (declare-fun v8225 () UInt )
                (assert (<= 0 v8225 ) )
                (assert (<= v8225 dlc_UInt_max ) )
                (assert (= v8225 v3043 ) )
                (declare-fun v8226 () UInt )
                (assert (<= 0 v8226 ) )
                (assert (<= v8226 dlc_UInt_max ) )
                (assert (= v8226 v3043 ) )
                (declare-fun v8227 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8227 0 ) ) ) (<= 0 (T2_elem1 (select v8227 0 ) ) ) ) )
                (assert (= v8227 v3046 ) )
                (declare-fun v8228 () UInt )
                (assert (<= 0 v8228 ) )
                (assert (<= v8228 dlc_UInt_max ) )
                (assert (= v8228 v3047 ) )
                (declare-fun v8229 () Bool )
                (assert true )
                (assert (= v8229 (= v8228 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8229 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4369 () T4 )
              (assert true )
              (assert (= v3422 (T21_Admin_api_freeze0_126 v4369 ) ) )
              (declare-fun v4420 () Bool )
              (assert true )
              (assert (= v4420 (T4_elem0 v4369 ) ) )
              (declare-fun v4421 () Bool )
              (assert true )
              (assert (= v4421 (= v3421 v3007 ) ) )
              (declare-fun v4422 () Bool )
              (assert true )
              (assert (= v4422 (= v3012 v3421 ) ) )
              (declare-fun v4423 () Bool )
              (assert true )
              (assert (= v4423 (ite v4421 true v4422 ) ) )
              (assert v4423 )
              (declare-fun v4425 () Bool )
              (assert true )
              (assert (= v4425 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4426 () Bool )
              (assert true )
              (assert (= v4426 (ite v4425 false true ) ) )
              (assert v4426 )
              (declare-fun v4428 () Bool )
              (assert true )
              (assert (= v4428 (T18_freeze v3039 ) ) )
              (declare-fun v4429 () Bool )
              (assert true )
              (assert (= v4429 (ite v4428 false true ) ) )
              (declare-fun v4430 () Bool )
              (assert true )
              (assert (= v4430 (ite v4420 v4428 v4429 ) ) )
              (declare-fun v4431 () Bool )
              (assert true )
              (assert (= v4431 (ite v4430 false true ) ) )
              (assert v4431 )
              (assert (= 0 pv_net8199 ) )
              (declare-fun v6814 () Token )
              (assert true )
              (assert (= v6814 (select v3018 0 ) ) )
              (declare-fun v6820 () Bool )
              (assert true )
              (assert (= v6820 (= v6814 v3019 ) ) )
              (declare-fun v6823 () T5 )
              (assert (<= 0 (T5_elem1 v6823 ) ) )
              (assert (= v6823 (T5_cons false 1 ) ) )
              (declare-fun v6824 () T5 )
              (assert (<= 0 (T5_elem1 v6824 ) ) )
              (assert (= v6824 (T5_cons true 0 ) ) )
              (declare-fun v6825 () T5 )
              (assert (<= 0 (T5_elem1 v6825 ) ) )
              (assert (= v6825 (ite v6820 v6824 v6823 ) ) )
              (declare-fun v4521 () Bool )
              (assert true )
              (assert (= v4521 (T5_elem0 v6825 ) ) )
              (push 1 ) ;; {
                (assert (not v4521 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v4369 () T4 (T4_cons false ) ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun pv_tok8201 () Token Token!val!14 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v4429 () Bool false ) (define-fun v3043 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun v3045 () Int 0 ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4521 () Bool false ) (define-fun v6825 () T5 (T5_cons false 1 ) ) (define-fun v6824 () T5 (T5_cons true 0 ) ) (define-fun v6823 () T5 (T5_cons false 1 ) ) (define-fun v6820 () Bool false ) (define-fun v6814 () Token Token!val!10 ) (define-fun pv_net8199 () Int 0 ) (define-fun v4431 () Bool true ) (define-fun v4430 () Bool false ) (define-fun v4428 () Bool true ) (define-fun v4426 () Bool true ) (define-fun v4425 () Bool false ) (define-fun v4423 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4422 () Bool true ) (define-fun v4421 () Bool true ) (define-fun v4420 () Bool false ) (define-fun v3422 () T21 (T21_Admin_api_freeze0_126 (T4_cons false ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v8209 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8208 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v8203 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v8207 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v8205 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v8204 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4521 )
              (assert (= 0 (select pv_ks8200 v3019 ) ) )
              (declare-fun v4632 () Null )
              (assert true )
              (assert (= v4632 null ) )
              (declare-fun v4633 () Null )
              (assert true )
              (assert (= v4633 v4632 ) )
              (declare-fun v4639 () T19 )
              (assert (T19_inv v4639 ) )
              (assert (= v4639 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v4641 () Bool )
              (assert true )
              (assert (= v4641 (T18_continue v3039 ) ) )
              (declare-fun v4645 () UInt )
              (assert (<= 0 v4645 ) )
              (assert (<= v4645 dlc_UInt_max ) )
              (assert (= v4645 (T18_offers v3039 ) ) )
              (declare-fun v4646 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v4646 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v4646 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v4646 ) ) ) (<= 0 (T14_principle (T18_loanTerms v4646 ) ) ) ) (<= 0 (T18_offers v4646 ) ) ) )
              (assert (= v4646 (T18_cons v4639 v3071 v4641 v4420 v3077 v4425 v4645 ) ) )
              (push 1 ) ;; {
                (declare-fun v8230 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8230 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8230 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8230 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8230 ) ) ) ) (<= 0 (T18_offers v8230 ) ) ) )
                (assert (= v8230 v4646 ) )
                (declare-fun v8231 () UInt )
                (assert (<= 0 v8231 ) )
                (assert (<= v8231 dlc_UInt_max ) )
                (assert (= v8231 v3423 ) )
                (declare-fun v8232 () UInt )
                (assert (<= 0 v8232 ) )
                (assert (<= v8232 dlc_UInt_max ) )
                (assert (= v8232 v3040 ) )
                (declare-fun v8233 () UInt )
                (assert (<= 0 v8233 ) )
                (assert (<= v8233 dlc_UInt_max ) )
                (assert (= v8233 v3040 ) )
                (declare-fun v8234 () UInt )
                (assert (<= 0 v8234 ) )
                (assert (<= v8234 dlc_UInt_max ) )
                (assert (= v8234 v3424 ) )
                (declare-fun v8235 () UInt )
                (assert (<= 0 v8235 ) )
                (assert (<= v8235 dlc_UInt_max ) )
                (assert (= v8235 v3043 ) )
                (declare-fun v8236 () UInt )
                (assert (<= 0 v8236 ) )
                (assert (<= v8236 dlc_UInt_max ) )
                (assert (= v8236 v3043 ) )
                (declare-fun v8237 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8237 0 ) ) ) (<= 0 (T2_elem1 (select v8237 0 ) ) ) ) )
                (assert (= v8237 v3046 ) )
                (declare-fun v8238 () UInt )
                (assert (<= 0 v8238 ) )
                (assert (<= v8238 dlc_UInt_max ) )
                (assert (= v8238 v3047 ) )
                (declare-fun v8239 () Bool )
                (assert true )
                (assert (= v8239 (= v8238 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8239 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v4841 () T15 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit (T15_elem0 v4841 ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateConfig0_126 v4841 ) ) )
              (declare-fun v4913 () Bool )
              (assert true )
              (assert (= v4913 (= v3421 v3007 ) ) )
              (declare-fun v4914 () Bool )
              (assert true )
              (assert (= v4914 (= v3012 v3421 ) ) )
              (declare-fun v4915 () Bool )
              (assert true )
              (assert (= v4915 (ite v4913 true v4914 ) ) )
              (assert v4915 )
              (declare-fun v4917 () Bool )
              (assert true )
              (assert (= v4917 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v4918 () Bool )
              (assert true )
              (assert (= v4918 (ite v4917 false true ) ) )
              (assert v4918 )
              (assert (= 0 pv_net8199 ) )
              (declare-fun v6838 () Token )
              (assert true )
              (assert (= v6838 (select v3018 0 ) ) )
              (declare-fun v6844 () Bool )
              (assert true )
              (assert (= v6844 (= v6838 v3019 ) ) )
              (declare-fun v6847 () T5 )
              (assert (<= 0 (T5_elem1 v6847 ) ) )
              (assert (= v6847 (T5_cons false 1 ) ) )
              (declare-fun v6848 () T5 )
              (assert (<= 0 (T5_elem1 v6848 ) ) )
              (assert (= v6848 (T5_cons true 0 ) ) )
              (declare-fun v6849 () T5 )
              (assert (<= 0 (T5_elem1 v6849 ) ) )
              (assert (= v6849 (ite v6844 v6848 v6847 ) ) )
              (declare-fun v4993 () Bool )
              (assert true )
              (assert (= v4993 (T5_elem0 v6849 ) ) )
              (push 1 ) ;; {
                (assert (not v4993 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!16 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!16 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3021 () Address Address!val!1 ) (define-fun v3424 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun v4841 () T15 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) (define-fun pv_tok8201 () Token Token!val!16 ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v4993 () Bool false ) (define-fun v6849 () T5 (T5_cons false 1 ) ) (define-fun v6848 () T5 (T5_cons true 0 ) ) (define-fun v6847 () T5 (T5_cons false 1 ) ) (define-fun v6844 () Bool false ) (define-fun v6838 () Token Token!val!10 ) (define-fun pv_net8199 () Int 0 ) (define-fun v4918 () Bool true ) (define-fun v4917 () Bool false ) (define-fun v4915 () Bool true ) (define-fun v3012 () Address Address!val!1 ) (define-fun v4914 () Bool true ) (define-fun v4913 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateConfig0_126 (T15_cons (T16_cons Token!val!14 20537 Token!val!15 false false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v8209 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8208 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v8203 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v8207 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v8205 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v8204 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v4993 )
              (assert (= 0 (select pv_ks8200 v3019 ) ) )
              (declare-fun v5121 () T16 )
              (assert (<= 0 (T16_number_of_tokens_to_deposit v5121 ) ) )
              (assert (= v5121 (T15_elem0 v4841 ) ) )
              (declare-fun v5130 () Null )
              (assert true )
              (assert (= v5130 null ) )
              (declare-fun v5131 () Null )
              (assert true )
              (assert (= v5131 v5130 ) )
              (declare-fun v5142 () T19 )
              (assert (T19_inv v5142 ) )
              (assert (= v5142 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5144 () Bool )
              (assert true )
              (assert (= v5144 (T18_continue v3039 ) ) )
              (declare-fun v5145 () Bool )
              (assert true )
              (assert (= v5145 (T18_freeze v3039 ) ) )
              (declare-fun v5148 () UInt )
              (assert (<= 0 v5148 ) )
              (assert (<= v5148 dlc_UInt_max ) )
              (assert (= v5148 (T18_offers v3039 ) ) )
              (declare-fun v5149 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5149 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5149 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5149 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5149 ) ) ) ) (<= 0 (T18_offers v5149 ) ) ) )
              (assert (= v5149 (T18_cons v5142 v5121 v5144 v5145 v3077 v4917 v5148 ) ) )
              (push 1 ) ;; {
                (declare-fun v8240 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8240 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8240 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8240 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8240 ) ) ) ) (<= 0 (T18_offers v8240 ) ) ) )
                (assert (= v8240 v5149 ) )
                (declare-fun v8241 () UInt )
                (assert (<= 0 v8241 ) )
                (assert (<= v8241 dlc_UInt_max ) )
                (assert (= v8241 v3423 ) )
                (declare-fun v8242 () UInt )
                (assert (<= 0 v8242 ) )
                (assert (<= v8242 dlc_UInt_max ) )
                (assert (= v8242 v3040 ) )
                (declare-fun v8243 () UInt )
                (assert (<= 0 v8243 ) )
                (assert (<= v8243 dlc_UInt_max ) )
                (assert (= v8243 v3040 ) )
                (declare-fun v8244 () UInt )
                (assert (<= 0 v8244 ) )
                (assert (<= v8244 dlc_UInt_max ) )
                (assert (= v8244 v3424 ) )
                (declare-fun v8245 () UInt )
                (assert (<= 0 v8245 ) )
                (assert (<= v8245 dlc_UInt_max ) )
                (assert (= v8245 v3043 ) )
                (declare-fun v8246 () UInt )
                (assert (<= 0 v8246 ) )
                (assert (<= v8246 dlc_UInt_max ) )
                (assert (= v8246 v3043 ) )
                (declare-fun v8247 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8247 0 ) ) ) (<= 0 (T2_elem1 (select v8247 0 ) ) ) ) )
                (assert (= v8247 v3046 ) )
                (declare-fun v8248 () UInt )
                (assert (<= 0 v8248 ) )
                (assert (<= v8248 dlc_UInt_max ) )
                (assert (= v8248 v3047 ) )
                (declare-fun v8249 () Bool )
                (assert true )
                (assert (= v8249 (= v8248 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8249 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5313 () T13 )
              (assert (and (<= 0 (T14_duration_in_blocks (T13_elem0 v5313 ) ) ) (<= 0 (T14_principle (T13_elem0 v5313 ) ) ) ) )
              (assert (= v3422 (T21_Admin_api_updateLoanTerms_info0_126 v5313 ) ) )
              (declare-fun v5400 () Bool )
              (assert true )
              (assert (= v5400 (= v3421 v3007 ) ) )
              (declare-fun v5401 () Bool )
              (assert true )
              (assert (= v5401 (= v3012 v3421 ) ) )
              (declare-fun v5402 () Bool )
              (assert true )
              (assert (= v5402 (ite v5400 true v5401 ) ) )
              (assert v5402 )
              (declare-fun v5404 () Bool )
              (assert true )
              (assert (= v5404 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5405 () Bool )
              (assert true )
              (assert (= v5405 (ite v5404 false true ) ) )
              (assert v5405 )
              (assert (= 0 pv_net8199 ) )
              (declare-fun v6862 () Token )
              (assert true )
              (assert (= v6862 (select v3018 0 ) ) )
              (declare-fun v6868 () Bool )
              (assert true )
              (assert (= v6868 (= v6862 v3019 ) ) )
              (declare-fun v6871 () T5 )
              (assert (<= 0 (T5_elem1 v6871 ) ) )
              (assert (= v6871 (T5_cons false 1 ) ) )
              (declare-fun v6872 () T5 )
              (assert (<= 0 (T5_elem1 v6872 ) ) )
              (assert (= v6872 (T5_cons true 0 ) ) )
              (declare-fun v6873 () T5 )
              (assert (<= 0 (T5_elem1 v6873 ) ) )
              (assert (= v6873 (ite v6868 v6872 v6871 ) ) )
              (declare-fun v5465 () Bool )
              (assert true )
              (assert (= v5465 (T5_elem0 v6873 ) ) )
              (push 1 ) ;; {
                (assert (not v5465 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!15 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!15 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!1 () Address ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (or (= x Address!val!1 ) (= x Address!val!0 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3012 () Address Address!val!1 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true false (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 0 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun v5313 () T13 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) (define-fun dlc_UInt_max () Int 0 ) (define-fun v3424 () Int 0 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok8201 () Token Token!val!15 ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 0 Token!val!3 false false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3421 () Address Address!val!1 ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5465 () Bool false ) (define-fun v6873 () T5 (T5_cons false 1 ) ) (define-fun v6872 () T5 (T5_cons true 0 ) ) (define-fun v6871 () T5 (T5_cons false 1 ) ) (define-fun v6868 () Bool false ) (define-fun v6862 () Token Token!val!10 ) (define-fun pv_net8199 () Int 0 ) (define-fun v5405 () Bool true ) (define-fun v5404 () Bool false ) (define-fun v5402 () Bool true ) (define-fun v5401 () Bool true ) (define-fun v3021 () Address Address!val!1 ) (define-fun v5400 () Bool true ) (define-fun v3422 () T21 (T21_Admin_api_updateLoanTerms_info0_126 (T13_cons (T14_cons 20537 8945 Token!val!14 ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3007 () Address Address!val!1 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 0 0 false ) ) (define-fun v3027 () Int 0 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 0 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!1 ) (define-fun v7655 () Address Address!val!1 ) (define-fun address_Admin () Address Address!val!1 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!1 ) (define-fun v7666 () Address Address!val!1 ) (define-fun v7656 () Address Address!val!1 ) (define-fun v7645 () Address Address!val!1 ) (define-fun v8209 () Address Address!val!1 ) (define-fun v7673 () Address Address!val!1 ) (define-fun v7670 () Address Address!val!1 ) (define-fun v7668 () Address Address!val!1 ) (define-fun v8208 () Address Address!val!1 ) (define-fun address_Admin_api_updateConfig () Address Address!val!1 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!1 ) (define-fun address_user_makeOffer () Address Address!val!1 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!1 ) (define-fun v7650 () Address Address!val!1 ) (define-fun v7659 () Address Address!val!1 ) (define-fun v7651 () Address Address!val!1 ) (define-fun v7669 () Address Address!val!1 ) (define-fun v8203 () Address Address!val!1 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!1 ) (define-fun v7646 () Address Address!val!1 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!1 ) (define-fun v7647 () Address Address!val!1 ) (define-fun v7648 () Address Address!val!1 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!1 ) (define-fun v7662 () Address Address!val!1 ) (define-fun v7672 () Address Address!val!1 ) (define-fun v8207 () Address Address!val!1 ) (define-fun v7660 () Address Address!val!1 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!1 ) (define-fun v7671 () Address Address!val!1 ) (define-fun v7667 () Address Address!val!1 ) (define-fun v7649 () Address Address!val!1 ) (define-fun v8205 () Address Address!val!1 ) (define-fun v7657 () Address Address!val!1 ) (define-fun address_Admin_api_freeze () Address Address!val!1 ) (define-fun v8204 () Address Address!val!1 ) (define-fun v7644 () Address Address!val!1 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5465 )
              (assert (= 0 (select pv_ks8200 v3019 ) ) )
              (declare-fun v5624 () T14 )
              (assert (and (<= 0 (T14_duration_in_blocks v5624 ) ) (<= 0 (T14_principle v5624 ) ) ) )
              (assert (= v5624 (T13_elem0 v5313 ) ) )
              (declare-fun v5633 () Null )
              (assert true )
              (assert (= v5633 null ) )
              (declare-fun v5634 () Null )
              (assert true )
              (assert (= v5634 v5633 ) )
              (declare-fun v5643 () T19 )
              (assert (T19_inv v5643 ) )
              (assert (= v5643 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v5645 () Bool )
              (assert true )
              (assert (= v5645 (T18_continue v3039 ) ) )
              (declare-fun v5646 () Bool )
              (assert true )
              (assert (= v5646 (T18_freeze v3039 ) ) )
              (declare-fun v5649 () UInt )
              (assert (<= 0 v5649 ) )
              (assert (<= v5649 dlc_UInt_max ) )
              (assert (= v5649 (T18_offers v3039 ) ) )
              (declare-fun v5650 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v5650 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v5650 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v5650 ) ) ) (<= 0 (T14_principle (T18_loanTerms v5650 ) ) ) ) (<= 0 (T18_offers v5650 ) ) ) )
              (assert (= v5650 (T18_cons v5643 v3071 v5645 v5646 v5624 v5404 v5649 ) ) )
              (push 1 ) ;; {
                (declare-fun v8250 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8250 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8250 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8250 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8250 ) ) ) ) (<= 0 (T18_offers v8250 ) ) ) )
                (assert (= v8250 v5650 ) )
                (declare-fun v8251 () UInt )
                (assert (<= 0 v8251 ) )
                (assert (<= v8251 dlc_UInt_max ) )
                (assert (= v8251 v3423 ) )
                (declare-fun v8252 () UInt )
                (assert (<= 0 v8252 ) )
                (assert (<= v8252 dlc_UInt_max ) )
                (assert (= v8252 v3040 ) )
                (declare-fun v8253 () UInt )
                (assert (<= 0 v8253 ) )
                (assert (<= v8253 dlc_UInt_max ) )
                (assert (= v8253 v3040 ) )
                (declare-fun v8254 () UInt )
                (assert (<= 0 v8254 ) )
                (assert (<= v8254 dlc_UInt_max ) )
                (assert (= v8254 v3424 ) )
                (declare-fun v8255 () UInt )
                (assert (<= 0 v8255 ) )
                (assert (<= v8255 dlc_UInt_max ) )
                (assert (= v8255 v3043 ) )
                (declare-fun v8256 () UInt )
                (assert (<= 0 v8256 ) )
                (assert (<= v8256 dlc_UInt_max ) )
                (assert (= v8256 v3043 ) )
                (declare-fun v8257 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8257 0 ) ) ) (<= 0 (T2_elem1 (select v8257 0 ) ) ) ) )
                (assert (= v8257 v3046 ) )
                (declare-fun v8258 () UInt )
                (assert (<= 0 v8258 ) )
                (assert (<= v8258 dlc_UInt_max ) )
                (assert (= v8258 v3047 ) )
                (declare-fun v8259 () Bool )
                (assert true )
                (assert (= v8259 (= v8258 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8259 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v5785 () T3 )
              (assert true )
              (assert (= v3422 (T21_user_acceptLoan0_126 v5785 ) ) )
              (declare-fun v5887 () Bool )
              (assert true )
              (assert (= v5887 (T18_freeze v3039 ) ) )
              (assert v5887 )
              (declare-fun v5891 () Bool )
              (assert true )
              (assert (= v5891 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v5892 () Bool )
              (assert true )
              (assert (= v5892 (ite v5891 false true ) ) )
              (assert v5892 )
              (declare-fun v5894 () Bool )
              (assert true )
              (assert (= v5894 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v5895 () T7 )
              (assert (<= 0 (T7_elem0 v5895 ) ) )
              (assert (= v5895 (T7_cons 0 v3019 ) ) )
              (declare-fun v5896 () T8 )
              (assert (and (<= 0 (T8_elem0 v5896 ) ) (<= 0 (T7_elem0 (T8_elem1 v5896 ) ) ) ) )
              (assert (= v5896 (T8_cons v3024 v5895 ) ) )
              (declare-fun v5897 () T7 )
              (assert (<= 0 (T7_elem0 v5897 ) ) )
              (assert (= v5897 (T7_cons v3024 v3019 ) ) )
              (declare-fun v5898 () T8 )
              (assert (and (<= 0 (T8_elem0 v5898 ) ) (<= 0 (T7_elem0 (T8_elem1 v5898 ) ) ) ) )
              (assert (= v5898 (T8_cons 0 v5897 ) ) )
              (declare-fun v5899 () T8 )
              (assert (and (<= 0 (T8_elem0 v5899 ) ) (<= 0 (T7_elem0 (T8_elem1 v5899 ) ) ) ) )
              (assert (= v5899 (ite v5894 v5896 v5898 ) ) )
              (declare-fun v5914 () UInt )
              (assert (<= 0 v5914 ) )
              (assert (<= v5914 dlc_UInt_max ) )
              (assert (= v5914 (T8_elem0 v5899 ) ) )
              (declare-fun v5915 () T7 )
              (assert (<= 0 (T7_elem0 v5915 ) ) )
              (assert (= v5915 (T8_elem1 v5899 ) ) )
              (declare-fun v5916 () UInt )
              (assert (<= 0 v5916 ) )
              (assert (<= v5916 dlc_UInt_max ) )
              (assert (= v5916 (T7_elem0 v5915 ) ) )
              (declare-fun v5917 () Token )
              (assert true )
              (assert (= v5917 (T7_elem1 v5915 ) ) )
              (declare-fun v5918 () Bool )
              (assert true )
              (assert (= v5918 (= v5917 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v5918 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v5918 )
              (declare-fun v5922 () UInt )
              (assert (<= 0 v5922 ) )
              (assert (<= v5922 dlc_UInt_max ) )
              (assert (= v5922 (+ v3047 v5914 ) ) )
              (assert (= v5914 pv_net8199 ) )
              (declare-fun v6886 () Token )
              (assert true )
              (assert (= v6886 (select v3018 0 ) ) )
              (declare-fun v6892 () Bool )
              (assert true )
              (assert (= v6892 (= v6886 v3019 ) ) )
              (declare-fun v6895 () T5 )
              (assert (<= 0 (T5_elem1 v6895 ) ) )
              (assert (= v6895 (T5_cons false 1 ) ) )
              (declare-fun v6896 () T5 )
              (assert (<= 0 (T5_elem1 v6896 ) ) )
              (assert (= v6896 (T5_cons true 0 ) ) )
              (declare-fun v6897 () T5 )
              (assert (<= 0 (T5_elem1 v6897 ) ) )
              (assert (= v6897 (ite v6892 v6896 v6895 ) ) )
              (declare-fun v5936 () UInt )
              (assert (<= 0 v5936 ) )
              (assert (<= v5936 dlc_UInt_max ) )
              (assert (= v5936 (T5_elem1 v6897 ) ) )
              (declare-fun v5937 () Bool )
              (assert true )
              (assert (= v5937 (T5_elem0 v6897 ) ) )
              (push 1 ) ;; {
                (assert (not v5937 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 10450 Token!val!12 false false ) true true (T14_cons 30612 5853 Token!val!13 ) false 28100 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 32285 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 8365 ) ) (define-fun v3424 () Int 0 ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 1142 281 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 2437 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 8855 11797 Token!val!7 ) ) (define-fun pv_tok8201 () Token Token!val!14 ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 20537 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v5937 () Bool false ) (define-fun v5936 () Int 1 ) (define-fun v6897 () T5 (T5_cons false 1 ) ) (define-fun v6896 () T5 (T5_cons true 0 ) ) (define-fun v6895 () T5 (T5_cons false 1 ) ) (define-fun v6892 () Bool false ) (define-fun v6886 () Token Token!val!10 ) (define-fun pv_net8199 () Int 1 ) (define-fun v5922 () Int 1 ) (define-fun v5918 () Bool true ) (define-fun v5917 () Token Token!val!3 ) (define-fun v5916 () Int 0 ) (define-fun v5915 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5914 () Int 1 ) (define-fun v5899 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5898 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v5897 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v5896 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v5895 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v5894 () Bool true ) (define-fun v5892 () Bool true ) (define-fun v5891 () Bool false ) (define-fun v5887 () Bool true ) (define-fun v5785 () T3 T3_cons ) (define-fun v3422 () T21 (T21_user_acceptLoan0_126 T3_cons ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 30612 5853 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 10450 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 2437 Token!val!6 false false ) true false (T14_cons 8855 11797 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v8209 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8208 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v8203 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v8207 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v8205 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v8204 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v5937 )
              (declare-fun v5938 () T2 )
              (assert (and (<= 0 (T2_elem0 v5938 ) ) (<= 0 (T2_elem1 v5938 ) ) ) )
              (assert (= v5938 (select v3046 v5936 ) ) )
              (declare-fun v5939 () UInt )
              (assert (<= 0 v5939 ) )
              (assert (<= v5939 dlc_UInt_max ) )
              (assert (= v5939 (T2_elem0 v5938 ) ) )
              (declare-fun v5940 () UInt )
              (assert (<= 0 v5940 ) )
              (assert (<= v5940 dlc_UInt_max ) )
              (assert (= v5940 (+ v5939 v5916 ) ) )
              (declare-fun v5957 () T2 )
              (assert (and (<= 0 (T2_elem0 v5957 ) ) (<= 0 (T2_elem1 v5957 ) ) ) )
              (assert (= v5957 (T2_cons v5940 (T2_elem1 v5938 ) (T2_elem2 v5938 ) ) ) )
              (declare-fun v5958 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v5958 0 ) ) ) (<= 0 (T2_elem1 (select v5958 0 ) ) ) ) )
              (assert (= v5958 (store v3046 v5936 v5957 ) ) )
              (assert (= v5916 (select pv_ks8200 v3019 ) ) )
              (declare-fun v6139 () Null )
              (assert true )
              (assert (= v6139 null ) )
              (declare-fun v6140 () Null )
              (assert true )
              (assert (= v6140 v6139 ) )
              (declare-fun v6150 () Bool )
              (assert true )
              (assert (= v6150 (<= v5914 v5922 ) ) )
              (push 1 ) ;; {
                (assert (not v6150 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6150 )
              (declare-fun v6152 () UInt )
              (assert (<= 0 v6152 ) )
              (assert (<= v6152 dlc_UInt_max ) )
              (assert (= v6152 (- v5922 v5914 ) ) )
              (declare-fun v6916 () Bool )
              (assert true )
              (assert (= v6916 (= v6886 v5917 ) ) )
              (declare-fun v6921 () T5 )
              (assert (<= 0 (T5_elem1 v6921 ) ) )
              (assert (= v6921 (ite v6916 v6896 v6895 ) ) )
              (declare-fun v6166 () UInt )
              (assert (<= 0 v6166 ) )
              (assert (<= v6166 dlc_UInt_max ) )
              (assert (= v6166 (T5_elem1 v6921 ) ) )
              (declare-fun v6167 () Bool )
              (assert true )
              (assert (= v6167 (T5_elem0 v6921 ) ) )
              (push 1 ) ;; {
                (assert (not v6167 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6167 )
              (declare-fun v6168 () T2 )
              (assert (and (<= 0 (T2_elem0 v6168 ) ) (<= 0 (T2_elem1 v6168 ) ) ) )
              (assert (= v6168 (select v5958 v6166 ) ) )
              (declare-fun v6169 () UInt )
              (assert (<= 0 v6169 ) )
              (assert (<= v6169 dlc_UInt_max ) )
              (assert (= v6169 (T2_elem0 v6168 ) ) )
              (declare-fun v6170 () Bool )
              (assert true )
              (assert (= v6170 (<= v5916 v6169 ) ) )
              (push 1 ) ;; {
                (assert (not v6170 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6170 )
              (declare-fun v6188 () UInt )
              (assert (<= 0 v6188 ) )
              (assert (<= v6188 dlc_UInt_max ) )
              (assert (= v6188 (- v6169 v5916 ) ) )
              (declare-fun v6205 () T2 )
              (assert (and (<= 0 (T2_elem0 v6205 ) ) (<= 0 (T2_elem1 v6205 ) ) ) )
              (assert (= v6205 (T2_cons v6188 (T2_elem1 v6168 ) (T2_elem2 v6168 ) ) ) )
              (declare-fun v6206 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6206 0 ) ) ) (<= 0 (T2_elem1 (select v6206 0 ) ) ) ) )
              (assert (= v6206 (store v5958 v6166 v6205 ) ) )
              (declare-fun v6209 () Bool )
              (assert true )
              (assert (= v6209 (T18_continue v3039 ) ) )
              (declare-fun v6213 () UInt )
              (assert (<= 0 v6213 ) )
              (assert (<= v6213 dlc_UInt_max ) )
              (assert (= v6213 (T18_offers v3039 ) ) )
              (declare-fun v6215 () UInt )
              (assert (<= 0 v6215 ) )
              (assert (<= v6215 dlc_UInt_max ) )
              (assert (= v6215 (+ v6213 1 ) ) )
              (declare-fun v6216 () T19 )
              (assert (T19_inv v6216 ) )
              (assert (= v6216 (T19_Some v3421 ) ) )
              (declare-fun v6217 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6217 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6217 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6217 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6217 ) ) ) ) (<= 0 (T18_offers v6217 ) ) ) )
              (assert (= v6217 (T18_cons v6216 v3071 v6209 true v3077 true v6215 ) ) )
              (push 1 ) ;; {
                (declare-fun v8260 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8260 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8260 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8260 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8260 ) ) ) ) (<= 0 (T18_offers v8260 ) ) ) )
                (assert (= v8260 v6217 ) )
                (declare-fun v8261 () UInt )
                (assert (<= 0 v8261 ) )
                (assert (<= v8261 dlc_UInt_max ) )
                (assert (= v8261 v3423 ) )
                (declare-fun v8262 () UInt )
                (assert (<= 0 v8262 ) )
                (assert (<= v8262 dlc_UInt_max ) )
                (assert (= v8262 v3040 ) )
                (declare-fun v8263 () UInt )
                (assert (<= 0 v8263 ) )
                (assert (<= v8263 dlc_UInt_max ) )
                (assert (= v8263 v3040 ) )
                (declare-fun v8264 () UInt )
                (assert (<= 0 v8264 ) )
                (assert (<= v8264 dlc_UInt_max ) )
                (assert (= v8264 v3424 ) )
                (declare-fun v8265 () UInt )
                (assert (<= 0 v8265 ) )
                (assert (<= v8265 dlc_UInt_max ) )
                (assert (= v8265 v3043 ) )
                (declare-fun v8266 () UInt )
                (assert (<= 0 v8266 ) )
                (assert (<= v8266 dlc_UInt_max ) )
                (assert (= v8266 v3043 ) )
                (declare-fun v8267 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8267 0 ) ) ) (<= 0 (T2_elem1 (select v8267 0 ) ) ) ) )
                (assert (= v8267 v6206 ) )
                (declare-fun v8268 () UInt )
                (assert (<= 0 v8268 ) )
                (assert (<= v8268 dlc_UInt_max ) )
                (assert (= v8268 v6152 ) )
                (declare-fun v8269 () Bool )
                (assert true )
                (assert (= v8269 (= v8268 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8269 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; unsat
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (push 1 ) ;; {
              (declare-fun v6257 () T11 )
              (assert (<= 0 (T12_amount (T11_elem0 v6257 ) ) ) )
              (assert (= v3422 (T21_user_makeOffer0_126 v6257 ) ) )
              (declare-fun v6373 () T12 )
              (assert (<= 0 (T12_amount v6373 ) ) )
              (assert (= v6373 (T11_elem0 v6257 ) ) )
              (declare-fun v6374 () UInt )
              (assert (<= 0 v6374 ) )
              (assert (<= v6374 dlc_UInt_max ) )
              (assert (= v6374 (T12_amount v6373 ) ) )
              (declare-fun v6377 () Bool )
              (assert true )
              (assert (= v6377 (T18_freeze v3039 ) ) )
              (assert v6377 )
              (declare-fun v6380 () Bool )
              (assert true )
              (assert (= v6380 (T20_prefersNetworkToken v3008 ) ) )
              (declare-fun v6381 () T7 )
              (assert (<= 0 (T7_elem0 v6381 ) ) )
              (assert (= v6381 (T7_cons 0 v3019 ) ) )
              (declare-fun v6382 () T8 )
              (assert (and (<= 0 (T8_elem0 v6382 ) ) (<= 0 (T7_elem0 (T8_elem1 v6382 ) ) ) ) )
              (assert (= v6382 (T8_cons v6374 v6381 ) ) )
              (declare-fun v6383 () T7 )
              (assert (<= 0 (T7_elem0 v6383 ) ) )
              (assert (= v6383 (T7_cons v6374 v3019 ) ) )
              (declare-fun v6384 () T8 )
              (assert (and (<= 0 (T8_elem0 v6384 ) ) (<= 0 (T7_elem0 (T8_elem1 v6384 ) ) ) ) )
              (assert (= v6384 (T8_cons 0 v6383 ) ) )
              (declare-fun v6385 () T8 )
              (assert (and (<= 0 (T8_elem0 v6385 ) ) (<= 0 (T7_elem0 (T8_elem1 v6385 ) ) ) ) )
              (assert (= v6385 (ite v6380 v6382 v6384 ) ) )
              (declare-fun v6386 () UInt )
              (assert (<= 0 v6386 ) )
              (assert (<= v6386 dlc_UInt_max ) )
              (assert (= v6386 (T8_elem0 v6385 ) ) )
              (declare-fun v6387 () T7 )
              (assert (<= 0 (T7_elem0 v6387 ) ) )
              (assert (= v6387 (T8_elem1 v6385 ) ) )
              (declare-fun v6388 () UInt )
              (assert (<= 0 v6388 ) )
              (assert (<= v6388 dlc_UInt_max ) )
              (assert (= v6388 (T7_elem0 v6387 ) ) )
              (declare-fun v6389 () Token )
              (assert true )
              (assert (= v6389 (T7_elem1 v6387 ) ) )
              (declare-fun v6390 () Bool )
              (assert true )
              (assert (= v6390 (= v6389 v3019 ) ) )
              (push 1 ) ;; {
                (assert (not v6390 ) )
                (check-sat-using (try-for default 10 ) )
                ;; unsat
                (pop 1 ) ;; }
              (assert v6390 )
              (declare-fun v6394 () UInt )
              (assert (<= 0 v6394 ) )
              (assert (<= v6394 dlc_UInt_max ) )
              (assert (= v6394 (+ v3047 v6386 ) ) )
              (assert (= v6386 pv_net8199 ) )
              (declare-fun v6946 () Token )
              (assert true )
              (assert (= v6946 (select v3018 0 ) ) )
              (declare-fun v6952 () Bool )
              (assert true )
              (assert (= v6952 (= v6946 v3019 ) ) )
              (declare-fun v6955 () T5 )
              (assert (<= 0 (T5_elem1 v6955 ) ) )
              (assert (= v6955 (T5_cons false 1 ) ) )
              (declare-fun v6956 () T5 )
              (assert (<= 0 (T5_elem1 v6956 ) ) )
              (assert (= v6956 (T5_cons true 0 ) ) )
              (declare-fun v6957 () T5 )
              (assert (<= 0 (T5_elem1 v6957 ) ) )
              (assert (= v6957 (ite v6952 v6956 v6955 ) ) )
              (declare-fun v6408 () UInt )
              (assert (<= 0 v6408 ) )
              (assert (<= v6408 dlc_UInt_max ) )
              (assert (= v6408 (T5_elem1 v6957 ) ) )
              (declare-fun v6409 () Bool )
              (assert true )
              (assert (= v6409 (T5_elem0 v6957 ) ) )
              (push 1 ) ;; {
                (assert (not v6409 ) )
                (check-sat-using (try-for default 10 ) )
                ;; sat
                (get-model )
                ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!14 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!14 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!11 30612 Token!val!12 false false ) true true (T14_cons 5853 28100 Token!val!13 ) false 1142 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store ((as const (Array Token Int ) ) 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) ((as const (Array Token Int ) ) 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 281 20537 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun pv_tok8201 () Token Token!val!14 ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) ((as const (Array Token Int ) ) 15921 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!10 ) (define-fun v6409 () Bool false ) (define-fun v6408 () Int 1 ) (define-fun v6957 () T5 (T5_cons false 1 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool false ) (define-fun v6946 () Token Token!val!10 ) (define-fun pv_net8199 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!13 ) ) (define-fun v3071 () T16 (T16_cons Token!val!11 30612 Token!val!12 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!10 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun v8202 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v8209 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8208 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v8203 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v8207 () Address Address!val!0 ) (define-fun v3421 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v8205 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v8204 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                (pop 1 ) ;; }
              (assert v6409 )
              (declare-fun v6410 () T2 )
              (assert (and (<= 0 (T2_elem0 v6410 ) ) (<= 0 (T2_elem1 v6410 ) ) ) )
              (assert (= v6410 (select v3046 v6408 ) ) )
              (declare-fun v6411 () UInt )
              (assert (<= 0 v6411 ) )
              (assert (<= v6411 dlc_UInt_max ) )
              (assert (= v6411 (T2_elem0 v6410 ) ) )
              (declare-fun v6412 () UInt )
              (assert (<= 0 v6412 ) )
              (assert (<= v6412 dlc_UInt_max ) )
              (assert (= v6412 (+ v6411 v6388 ) ) )
              (declare-fun v6429 () T2 )
              (assert (and (<= 0 (T2_elem0 v6429 ) ) (<= 0 (T2_elem1 v6429 ) ) ) )
              (assert (= v6429 (T2_cons v6412 (T2_elem1 v6410 ) (T2_elem2 v6410 ) ) ) )
              (declare-fun v6430 () T1 )
              (assert (and (<= 0 (T2_elem0 (select v6430 0 ) ) ) (<= 0 (T2_elem1 (select v6430 0 ) ) ) ) )
              (assert (= v6430 (store v3046 v6408 v6429 ) ) )
              (assert (= v6388 (select pv_ks8200 v3019 ) ) )
              (declare-fun v6701 () UInt )
              (assert (<= 0 v6701 ) )
              (assert (<= v6701 dlc_UInt_max ) )
              (assert (= v6701 (T18_offers v3039 ) ) )
              (declare-fun v6703 () T10 )
              (assert (and (<= 0 (T10_amount v6703 ) ) (<= 0 (T10_offerId v6703 ) ) ) )
              (assert (= v6703 (T10_cons v6374 v3421 v6701 false ) ) )
              (declare-fun map0_2 () (Array UInt T22 ) )
              (assert (= map0_2 (store map0_1 v6701 (T22_Some v6703 ) ) ) )
              (declare-fun v6706 () T10 )
              (assert (and (<= 0 (T10_amount v6706 ) ) (<= 0 (T10_offerId v6706 ) ) ) )
              (assert (= v6706 v6703 ) )
              (declare-fun v6718 () T19 )
              (assert (T19_inv v6718 ) )
              (assert (= v6718 (T18_acceptedAddress v3039 ) ) )
              (declare-fun v6720 () Bool )
              (assert true )
              (assert (= v6720 (T18_continue v3039 ) ) )
              (declare-fun v6723 () Bool )
              (assert true )
              (assert (= v6723 (T18_loanTermsAccepted v3039 ) ) )
              (declare-fun v6726 () UInt )
              (assert (<= 0 v6726 ) )
              (assert (<= v6726 dlc_UInt_max ) )
              (assert (= v6726 (+ v6701 1 ) ) )
              (declare-fun v6727 () T18 )
              (assert (and (T19_inv (T18_acceptedAddress v6727 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v6727 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v6727 ) ) ) (<= 0 (T14_principle (T18_loanTerms v6727 ) ) ) ) (<= 0 (T18_offers v6727 ) ) ) )
              (assert (= v6727 (T18_cons v6718 v3071 v6720 true v3077 v6723 v6726 ) ) )
              (push 1 ) ;; {
                (declare-fun v8271 () T18 )
                (assert (and (T19_inv (T18_acceptedAddress v8271 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v8271 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v8271 ) ) ) (<= 0 (T14_principle (T18_loanTerms v8271 ) ) ) ) (<= 0 (T18_offers v8271 ) ) ) )
                (assert (= v8271 v6727 ) )
                (declare-fun v8272 () UInt )
                (assert (<= 0 v8272 ) )
                (assert (<= v8272 dlc_UInt_max ) )
                (assert (= v8272 v3423 ) )
                (declare-fun v8273 () UInt )
                (assert (<= 0 v8273 ) )
                (assert (<= v8273 dlc_UInt_max ) )
                (assert (= v8273 v3040 ) )
                (declare-fun v8274 () UInt )
                (assert (<= 0 v8274 ) )
                (assert (<= v8274 dlc_UInt_max ) )
                (assert (= v8274 v3040 ) )
                (declare-fun v8275 () UInt )
                (assert (<= 0 v8275 ) )
                (assert (<= v8275 dlc_UInt_max ) )
                (assert (= v8275 v3424 ) )
                (declare-fun v8276 () UInt )
                (assert (<= 0 v8276 ) )
                (assert (<= v8276 dlc_UInt_max ) )
                (assert (= v8276 v3043 ) )
                (declare-fun v8277 () UInt )
                (assert (<= 0 v8277 ) )
                (assert (<= v8277 dlc_UInt_max ) )
                (assert (= v8277 v3043 ) )
                (declare-fun v8278 () T1 )
                (assert (and (<= 0 (T2_elem0 (select v8278 0 ) ) ) (<= 0 (T2_elem1 (select v8278 0 ) ) ) ) )
                (assert (= v8278 v6430 ) )
                (declare-fun v8279 () UInt )
                (assert (<= 0 v8279 ) )
                (assert (<= v8279 dlc_UInt_max ) )
                (assert (= v8279 v6394 ) )
                (declare-fun v8280 () Bool )
                (assert true )
                (assert (= v8280 (= v8279 0 ) ) )
                (push 1 ) ;; {
                  (assert (not v8280 ) )
                  (check-sat-using (try-for default 10 ) )
                  ;; sat
                  (get-model )
                  ;; ((declare-fun Token!val!6 () Token ) (declare-fun Token!val!7 () Token ) (declare-fun Token!val!11 () Token ) (declare-fun Token!val!0 () Token ) (declare-fun Token!val!13 () Token ) (declare-fun Token!val!2 () Token ) (declare-fun Token!val!4 () Token ) (declare-fun Token!val!12 () Token ) (declare-fun Token!val!10 () Token ) (declare-fun Token!val!9 () Token ) (declare-fun Token!val!3 () Token ) (declare-fun Token!val!8 () Token ) (declare-fun Token!val!5 () Token ) (declare-fun Token!val!1 () Token ) (forall ((x Token ) ) (or (= x Token!val!6 ) (= x Token!val!7 ) (= x Token!val!11 ) (= x Token!val!0 ) (= x Token!val!13 ) (= x Token!val!2 ) (= x Token!val!4 ) (= x Token!val!12 ) (= x Token!val!10 ) (= x Token!val!9 ) (= x Token!val!3 ) (= x Token!val!8 ) (= x Token!val!5 ) (= x Token!val!1 ) ) ) (declare-fun Null!val!0 () Null ) (forall ((x Null ) ) (= x Null!val!0 ) ) (declare-fun Bytes!val!0 () Bytes ) (forall ((x Bytes ) ) (= x Bytes!val!0 ) ) (declare-fun Address!val!0 () Address ) (forall ((x Address ) ) (= x Address!val!0 ) ) (define-fun interact_Admin_intiConfig () T17 (T17_cons Address!val!0 Bytes!val!0 (T16_cons Token!val!0 38 Token!val!1 false false ) (T14_cons 7719 21238 Token!val!2 ) ) ) (define-fun v3044 () Int 0 ) (define-fun v3039 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 0 ) ) (define-fun v3023 () Int 0 ) (define-fun pv_ks7664 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 3 ) Token!val!3 1 ) Token!val!9 10450 ) ) (define-fun v3040 () Int 0 ) (define-fun pv_tok7665 () Token Token!val!9 ) (define-fun v3045 () Int 0 ) (define-fun dlc_UInt_max () Int 1 ) (define-fun pv_ks7653 () (Array Token Int ) (store ((as const (Array Token Int ) ) 2 ) Token!val!8 32285 ) ) (define-fun v3424 () Int 0 ) (define-fun v6257 () T11 (T11_cons (T12_cons 1 false ) ) ) (define-fun v3041 () Int 0 ) (define-fun v3046 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v3010 () T16 (T16_cons Token!val!5 8855 Token!val!6 false false ) ) (define-fun pv_tok7654 () Token Token!val!8 ) (define-fun v3011 () T14 (T14_cons 11797 8365 Token!val!7 ) ) (define-fun pv_tok8201 () Token Token!val!13 ) (define-fun v3042 () Int 0 ) (define-fun v3008 () T20 (T20_cons 1 Token!val!3 true false Token!val!4 ) ) (define-fun pv_ks8200 () (Array Token Int ) (store (store ((as const (Array Token Int ) ) 13 ) Token!val!3 0 ) Token!val!13 1142 ) ) (define-fun v3043 () Int 0 ) (define-fun v3009 () Token Token!val!3 ) (define-fun v8280 () Bool false ) (define-fun v8279 () Int 1 ) (define-fun v8278 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v8277 () Int 0 ) (define-fun v8276 () Int 0 ) (define-fun v8275 () Int 0 ) (define-fun v8274 () Int 0 ) (define-fun v8273 () Int 0 ) (define-fun v8272 () Int 1 ) (define-fun v8271 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6727 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!10 30612 Token!val!11 false false ) true true (T14_cons 5853 28100 Token!val!12 ) false 1 ) ) (define-fun v6726 () Int 1 ) (define-fun v6723 () Bool false ) (define-fun v6720 () Bool true ) (define-fun v6718 () T19 (T19_None Null!val!0 ) ) (define-fun v3421 () Address Address!val!0 ) (define-fun v6706 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun map0_1 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun map0_2 () (Array Int T22 ) (store ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) 0 (T22_Some (T10_cons 1 Address!val!0 0 false ) ) ) ) (define-fun v6703 () T10 (T10_cons 1 Address!val!0 0 false ) ) (define-fun v6701 () Int 0 ) (define-fun v6430 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 12 28100 false ) ) 0 (T2_cons 0 0 false ) ) ) (define-fun v6429 () T2 (T2_cons 0 0 false ) ) (define-fun v6412 () Int 0 ) (define-fun v6411 () Int 0 ) (define-fun v6410 () T2 (T2_cons 0 0 false ) ) (define-fun v6409 () Bool true ) (define-fun v6408 () Int 0 ) (define-fun v6957 () T5 (T5_cons true 0 ) ) (define-fun v6956 () T5 (T5_cons true 0 ) ) (define-fun v6955 () T5 (T5_cons false 1 ) ) (define-fun v6952 () Bool true ) (define-fun v6946 () Token Token!val!3 ) (define-fun pv_net8199 () Int 1 ) (define-fun v6394 () Int 1 ) (define-fun v6390 () Bool true ) (define-fun v6389 () Token Token!val!3 ) (define-fun v6388 () Int 0 ) (define-fun v6387 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6386 () Int 1 ) (define-fun v6385 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6384 () T8 (T8_cons 0 (T7_cons 1 Token!val!3 ) ) ) (define-fun v6383 () T7 (T7_cons 1 Token!val!3 ) ) (define-fun v6382 () T8 (T8_cons 1 (T7_cons 0 Token!val!3 ) ) ) (define-fun v6381 () T7 (T7_cons 0 Token!val!3 ) ) (define-fun v6380 () Bool true ) (define-fun v6377 () Bool true ) (define-fun v6374 () Int 1 ) (define-fun v6373 () T12 (T12_cons 1 false ) ) (define-fun v3422 () T21 (T21_user_makeOffer0_126 (T11_cons (T12_cons 1 false ) ) ) ) (define-fun v3423 () Int 1 ) (define-fun v3077 () T14 (T14_cons 5853 28100 Token!val!12 ) ) (define-fun v3071 () T16 (T16_cons Token!val!10 30612 Token!val!11 false false ) ) (define-fun v3070 () Bool true ) (define-fun v3059 () Bool true ) (define-fun v3047 () Int 0 ) (define-fun null () Null Null!val!0 ) (define-fun v3038 () T18 (T18_cons (T19_None Null!val!0 ) (T16_cons Token!val!5 8855 Token!val!6 false false ) true false (T14_cons 11797 8365 Token!val!7 ) false 0 ) ) (define-fun v3037 () T19 (T19_None Null!val!0 ) ) (define-fun v3031 () Bool true ) (define-fun v3021 () Address Address!val!0 ) (define-fun v3007 () Address Address!val!0 ) (define-fun z_T1 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3030 () (Array Int T2 ) (store ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) 0 (T2_cons 1 0 false ) ) ) (define-fun v3029 () T2 (T2_cons 1 0 false ) ) (define-fun v3027 () Int 1 ) (define-fun v3026 () Int 0 ) (define-fun v3025 () T2 (T2_cons 0 0 false ) ) (define-fun pv_net7663 () Int 0 ) (define-fun v3024 () Int 1 ) (define-fun v3022 () Int 1 ) (define-fun v3019 () Token Token!val!3 ) (define-fun pv_net7652 () Int 0 ) (define-fun z_T0 () (Array Int Token ) ((as const (Array Int Token ) ) Token!val!0 ) ) (define-fun v3018 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!3 ) ) (define-fun v3017 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v3016 () T2 (T2_cons 0 0 false ) ) (define-fun v3015 () T2 (T2_cons 0 0 false ) ) (define-fun v3014 () Int 0 ) (define-fun v3013 () Int 0 ) (define-fun dlc_Token_zero () Token Token!val!6 ) (define-fun v2980 () (Array Int Token ) (store ((as const (Array Int Token ) ) Token!val!0 ) 0 Token!val!6 ) ) (define-fun v2979 () (Array Int T2 ) ((as const (Array Int T2 ) ) (T2_cons 0 0 false ) ) ) (define-fun v2978 () T2 (T2_cons 0 0 false ) ) (define-fun map0_0 () (Array Int T22 ) ((as const (Array Int T22 ) ) (T22_None Null!val!0 ) ) ) (define-fun address_Admin_api_cancelLoanOfferandWithdrawCollateral () Address Address!val!0 ) (define-fun v7655 () Address Address!val!0 ) (define-fun address_Admin () Address Address!val!0 ) (define-fun v8202 () Address Address!val!0 ) (define-fun v7666 () Address Address!val!0 ) (define-fun v7656 () Address Address!val!0 ) (define-fun v7645 () Address Address!val!0 ) (define-fun v8209 () Address Address!val!0 ) (define-fun v7673 () Address Address!val!0 ) (define-fun v7670 () Address Address!val!0 ) (define-fun v7668 () Address Address!val!0 ) (define-fun v8208 () Address Address!val!0 ) (define-fun address_Admin_api_updateConfig () Address Address!val!0 ) (define-fun address_Admin_api_updateLoanTerms_info () Address Address!val!0 ) (define-fun address_user_makeOffer () Address Address!val!0 ) (define-fun v54 () Bool false ) (define-fun v8206 () Address Address!val!0 ) (define-fun v7650 () Address Address!val!0 ) (define-fun v7659 () Address Address!val!0 ) (define-fun v7651 () Address Address!val!0 ) (define-fun v7669 () Address Address!val!0 ) (define-fun v8203 () Address Address!val!0 ) (define-fun address_Admin_api_acceptOffer () Address Address!val!0 ) (define-fun v7646 () Address Address!val!0 ) (define-fun v64 () Bool false ) (define-fun address_user_acceptLoan () Address Address!val!0 ) (define-fun v3012 () Address Address!val!0 ) (define-fun v7647 () Address Address!val!0 ) (define-fun v7648 () Address Address!val!0 ) (define-fun bytes0 () Bytes Bytes!val!0 ) (define-fun v7661 () Address Address!val!0 ) (define-fun v7662 () Address Address!val!0 ) (define-fun v7672 () Address Address!val!0 ) (define-fun v8207 () Address Address!val!0 ) (define-fun v7660 () Address Address!val!0 ) (define-fun v1821 () Bool false ) (define-fun v7658 () Address Address!val!0 ) (define-fun v7671 () Address Address!val!0 ) (define-fun v7667 () Address Address!val!0 ) (define-fun v7649 () Address Address!val!0 ) (define-fun v8205 () Address Address!val!0 ) (define-fun v7657 () Address Address!val!0 ) (define-fun address_Admin_api_freeze () Address Address!val!0 ) (define-fun v8204 () Address Address!val!0 ) (define-fun v7644 () Address Address!val!0 ) (define-fun T6_toBytes ((x!0 T6 ) ) Bytes Bytes!val!0 ) (define-fun T21_toBytes ((x!0 T21 ) ) Bytes Bytes!val!0 ) (define-fun Bytes_xor ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun stringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun UInt_bxor ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T18_toBytes ((x!0 T18 ) ) Bytes Bytes!val!0 ) (define-fun Bool_toBytes ((x!0 Bool ) ) Bytes Bytes!val!0 ) (define-fun T1_toBytes ((x!0 (Array Int T2 ) ) ) Bytes Bytes!val!0 ) (define-fun UInt_band ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Bytes_toBytesDyn ((x!0 Bytes ) ) BytesDyn BytesDyn!val!0 ) (define-fun T15_toBytes ((x!0 T15 ) ) Bytes Bytes!val!0 ) (define-fun digest ((x!0 Bytes ) ) Digest Digest!val!0 ) (define-fun UInt_rsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun Address_toBytes ((x!0 Address ) ) Bytes Bytes!val!0 ) (define-fun T17_toBytes ((x!0 T17 ) ) Bytes Bytes!val!0 ) (define-fun bytesDyn ((x!0 Int ) ) BytesDyn BytesDyn!val!0 ) (define-fun Token_toBytes ((x!0 Token ) ) Bytes Bytes!val!0 ) (define-fun T5_toBytes ((x!0 T5 ) ) Bytes Bytes!val!0 ) (define-fun StringDyn_Concat ((x!0 StringDyn ) (x!1 StringDyn ) ) StringDyn StringDyn!val!0 ) (define-fun T0_toBytes ((x!0 (Array Int Token ) ) ) Bytes Bytes!val!0 ) (define-fun Contract_toBytes ((x!0 Contract ) ) Bytes Bytes!val!0 ) (define-fun T4_toBytes ((x!0 T4 ) ) Bytes Bytes!val!0 ) (define-fun T10_toBytes ((x!0 T10 ) ) Bytes Bytes!val!0 ) (define-fun Digest_toBytes ((x!0 Digest ) ) Bytes Bytes!val!0 ) (define-fun T3_toBytes ((x!0 T3 ) ) Bytes Bytes!val!0 ) (define-fun T9_toBytes ((x!0 T9 ) ) Bytes Bytes!val!0 ) (define-fun T22_toBytes ((x!0 T22 ) ) Bytes Bytes!val!0 ) (define-fun UInt_lsh ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun StringDyn_toBytes ((x!0 StringDyn ) ) Bytes Bytes!val!0 ) (define-fun Digest_xor ((x!0 Digest ) (x!1 Digest ) ) Digest Digest!val!0 ) (define-fun bytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T8_toBytes ((x!0 T8 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toStringDyn ((x!0 Int ) ) StringDyn StringDyn!val!0 ) (define-fun Contract_addressEq ((x!0 Contract ) (x!1 Address ) ) Bool false ) (define-fun T11_toBytes ((x!0 T11 ) ) Bytes Bytes!val!0 ) (define-fun T16_toBytes ((x!0 T16 ) ) Bytes Bytes!val!0 ) (define-fun bytesAppend ((x!0 Bytes ) (x!1 Bytes ) ) Bytes Bytes!val!0 ) (define-fun T12_toBytes ((x!0 T12 ) ) Bytes Bytes!val!0 ) (define-fun T19_toBytes ((x!0 T19 ) ) Bytes Bytes!val!0 ) (define-fun UInt_sqrt ((x!0 Int ) ) Int 0 ) (define-fun UInt_bior ((x!0 Int ) (x!1 Int ) ) Int 0 ) (define-fun T20_toBytes ((x!0 T20 ) ) Bytes Bytes!val!0 ) (define-fun BytesDyn_toBytes ((x!0 BytesDyn ) ) Bytes Bytes!val!0 ) (define-fun T7_toBytes ((x!0 T7 ) ) Bytes Bytes!val!0 ) (define-fun dtoiLast8 ((x!0 Digest ) ) Int 0 ) (define-fun T14_toBytes ((x!0 T14 ) ) Bytes Bytes!val!0 ) (define-fun UInt_toBytes ((x!0 Int ) ) Bytes Bytes!val!0 ) (define-fun T2_toBytes ((x!0 T2 ) ) Bytes Bytes!val!0 ) (define-fun btoiLast8 ((x!0 Bytes ) ) Int 0 ) (define-fun T13_toBytes ((x!0 T13 ) ) Bytes Bytes!val!0 ) )
                  (pop 1 ) ;; }
                (pop 1 ) ;; }
              (pop 1 ) ;; }
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (push 1 ) ;; {
          (declare-fun map0_1 () (Array UInt T22 ) )
          (declare-fun v3039 () T18 )
          (assert (and (T19_inv (T18_acceptedAddress v3039 ) ) (<= 0 (T16_number_of_tokens_to_deposit (T18_config v3039 ) ) ) (and (<= 0 (T14_duration_in_blocks (T18_loanTerms v3039 ) ) ) (<= 0 (T14_principle (T18_loanTerms v3039 ) ) ) ) (<= 0 (T18_offers v3039 ) ) ) )
          (declare-fun v3040 () UInt )
          (assert (<= 0 v3040 ) )
          (assert (<= v3040 dlc_UInt_max ) )
          (declare-fun v3041 () UInt )
          (assert (<= 0 v3041 ) )
          (assert (<= v3041 dlc_UInt_max ) )
          (declare-fun v3042 () UInt )
          (assert (<= 0 v3042 ) )
          (assert (<= v3042 dlc_UInt_max ) )
          (declare-fun v3043 () UInt )
          (assert (<= 0 v3043 ) )
          (assert (<= v3043 dlc_UInt_max ) )
          (declare-fun v3044 () UInt )
          (assert (<= 0 v3044 ) )
          (assert (<= v3044 dlc_UInt_max ) )
          (declare-fun v3045 () UInt )
          (assert (<= 0 v3045 ) )
          (assert (<= v3045 dlc_UInt_max ) )
          (declare-fun v3046 () T1 )
          (assert (and (<= 0 (T2_elem0 (select v3046 0 ) ) ) (<= 0 (T2_elem1 (select v3046 0 ) ) ) ) )
          (declare-fun v3047 () UInt )
          (assert (<= 0 v3047 ) )
          (assert (<= v3047 dlc_UInt_max ) )
          (declare-fun v3059 () Bool )
          (assert true )
          (assert (= v3059 (= v3047 0 ) ) )
          (assert v3059 )
          (declare-fun v3070 () Bool )
          (assert true )
          (assert (= v3070 (T18_continue v3039 ) ) )
          (assert (not v3070 ) )
          (declare-fun v6729 () T16 )
          (assert (<= 0 (T16_number_of_tokens_to_deposit v6729 ) ) )
          (assert (= v6729 (T18_config v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v8282 () Address )
            (assert true )
            (declare-fun v8283 () Address )
            (assert true )
            (declare-fun v8284 () Address )
            (assert true )
            (declare-fun v8285 () Address )
            (assert true )
            (declare-fun v8286 () Address )
            (assert true )
            (declare-fun v8287 () Address )
            (assert true )
            (declare-fun v8288 () Address )
            (assert true )
            (declare-fun v8289 () Address )
            (assert true )
            (pop 1 ) ;; }
          (declare-fun v6735 () T14 )
          (assert (and (<= 0 (T14_duration_in_blocks v6735 ) ) (<= 0 (T14_principle v6735 ) ) ) )
          (assert (= v6735 (T18_loanTerms v3039 ) ) )
          (push 1 ) ;; {
            (declare-fun v8290 () Address )
            (assert true )
            (declare-fun v8291 () Address )
            (assert true )
            (declare-fun v8292 () Address )
            (assert true )
            (declare-fun v8293 () Address )
            (assert true )
            (declare-fun v8294 () Address )
            (assert true )
            (declare-fun v8295 () Address )
            (assert true )
            (declare-fun v8296 () Address )
            (assert true )
            (declare-fun v8297 () Address )
            (assert true )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v8298 () Address )
            (assert true )
            (declare-fun v8299 () Address )
            (assert true )
            (declare-fun v8300 () Address )
            (assert true )
            (declare-fun v8301 () Address )
            (assert true )
            (declare-fun v8302 () Address )
            (assert true )
            (declare-fun v8303 () Address )
            (assert true )
            (declare-fun v8304 () Address )
            (assert true )
            (declare-fun v8305 () Address )
            (assert true )
            (declare-fun v6739 () UInt )
            (assert (<= 0 v6739 ) )
            (declare-fun v6740 () T22 )
            (assert (T22_inv v6740 ) )
            (assert (= v6740 (select map0_1 v6739 ) ) )
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (pop 1 ) ;; }
          (push 1 ) ;; {
            (declare-fun v6741 () Address )
            (assert true )
            (declare-fun pv_net8306 () UInt )
            (assert (<= 0 pv_net8306 ) )
            (declare-fun pv_tok8308 () Token )
            (assert true )
            (declare-fun pv_ks8307 () (Array Token UInt ) )
            (assert (<= 0 (select pv_ks8307 pv_tok8308 ) ) )
            (declare-fun v8309 () Address )
            (assert true )
            (declare-fun v8310 () Address )
            (assert true )
            (declare-fun v8311 () Address )
            (assert true )
            (declare-fun v8312 () Address )
            (assert true )
            (declare-fun v8313 () Address )
            (assert true )
            (declare-fun v8314 () Address )
            (assert true )
            (declare-fun v8315 () Address )
            (assert true )
            (declare-fun v8316 () Address )
            (assert true )
            (declare-fun v6742 () UInt )
            (assert (<= 0 v6742 ) )
            (declare-fun v6743 () UInt )
            (assert (<= 0 v6743 ) )
            (declare-fun v2348 () Bool )
            (assert true )
            (assert (= v6742 (+ v3040 1 ) ) )
            (assert (>= v6743 v3043 ) )
            (assert (= 0 pv_net8306 ) )
            (declare-fun v6744 () Bool )
            (assert true )
            (assert (= v6744 (= v3007 v6741 ) ) )
            (assert v6744 )
            (declare-fun v6747 () Bool )
            (assert true )
            (assert (= v6747 (<= v3047 v3047 ) ) )
            (push 1 ) ;; {
              (assert (not v6747 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6747 )
            (declare-fun v6749 () UInt )
            (assert (<= 0 v6749 ) )
            (assert (<= v6749 dlc_UInt_max ) )
            (assert (= v6749 (- v3047 v3047 ) ) )
            (declare-fun v6750 () T2 )
            (assert (and (<= 0 (T2_elem0 v6750 ) ) (<= 0 (T2_elem1 v6750 ) ) ) )
            (assert (= v6750 (select v3046 0 ) ) )
            (declare-fun v6751 () UInt )
            (assert (<= 0 v6751 ) )
            (assert (<= v6751 dlc_UInt_max ) )
            (assert (= v6751 (T2_elem0 v6750 ) ) )
            (declare-fun v6754 () Bool )
            (assert true )
            (assert (= v6754 (<= v6751 v6751 ) ) )
            (push 1 ) ;; {
              (assert (not v6754 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6754 )
            (declare-fun v6757 () UInt )
            (assert (<= 0 v6757 ) )
            (assert (<= v6757 dlc_UInt_max ) )
            (assert (= v6757 (- v6751 v6751 ) ) )
            (declare-fun v6759 () T2 )
            (assert (and (<= 0 (T2_elem0 v6759 ) ) (<= 0 (T2_elem1 v6759 ) ) ) )
            (assert (= v6759 (T2_cons v6757 (T2_elem1 v6750 ) (T2_elem2 v6750 ) ) ) )
            (declare-fun v6760 () T1 )
            (assert (and (<= 0 (T2_elem0 (select v6760 0 ) ) ) (<= 0 (T2_elem1 (select v6760 0 ) ) ) ) )
            (assert (= v6760 (store v3046 0 v6759 ) ) )
            (declare-fun v6762 () Bool )
            (assert true )
            (assert (= v6762 (= 0 v6749 ) ) )
            (push 1 ) ;; {
              (assert (not v6762 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6762 )
            (declare-fun v6763 () T2 )
            (assert (and (<= 0 (T2_elem0 v6763 ) ) (<= 0 (T2_elem1 v6763 ) ) ) )
            (assert (= v6763 (select v6760 0 ) ) )
            (declare-fun v6764 () UInt )
            (assert (<= 0 v6764 ) )
            (assert (<= v6764 dlc_UInt_max ) )
            (assert (= v6764 (T2_elem0 v6763 ) ) )
            (declare-fun v6765 () Bool )
            (assert true )
            (assert (= v6765 (= 0 v6764 ) ) )
            (push 1 ) ;; {
              (assert (not v6765 ) )
              (check-sat-using (try-for default 10 ) )
              ;; unsat
              (pop 1 ) ;; }
            (assert v6765 )
            (pop 1 ) ;; }
          (pop 1 ) ;; }
        (pop 1 ) ;; }
      (pop 1 ) ;; }
    (pop 1 ) ;; }
  (pop 1 ) ;; }
(exit )
